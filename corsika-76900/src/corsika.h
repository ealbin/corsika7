#ifdef __INCVARINDEX__
C=======================================================================
C
C  DESCRIPTION OF GLOBAL VARIABLES USED IN THE COMMONS OF THE PROGRAM
C  ==================================================================
C  (IN ALPHABETIC ORDER OF COMMONS)
C
#if __NUPRIM__
C --------------/CRACCEPT/-----------------------
C  MM          = # OF ACCEPTED HERWIG EVENTS
C
#endif
C --------------/CRAIR/--------------------------
C  COMPOS(3)   = COMPOSITION OF AIR, ATOMIC FRACTIONS OF N, O, AR
C  PROBTA(3)   = INTEGRATED ATOMIC FRACTIONS
C  AVERAW      = AVERAGE ATOMIC WEIGHT OF AIR
C  AVOGDR      = AVOGADROS NUMBER * MILLIBARN/CM**2
C
C --------------/CRATMOS/------------------------
C  AATM(5)     = ACTUAL COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  AATM0(5,..) = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  BATM(5)     = ACTUAL COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  BATM0(5,..) = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  CATM(5)     = ACTUAL COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  CATM0(5,..) = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  DATM(5)     = 1. / CATM(I)
C  MODATM      = INDEX OF ATMOSPHERIC MODEL
C
C --------------/CRATMOS2/-----------------------
C  HLAY(6)     = ALTITUDE OF ACTUAL ATMOSPHERIC LAYER BOUNDARIES
C  HLAY0(5,..) = ALTITUDE OF ATMOSPHERIC LAYER BOUNDARIES
C  THICKL(5)   = THICKNESS AT ATMOSPHERIC LAYER BOUNDARIES
C  LAYNO(..)   = POINTER OF ATMOSPHERE TO LAYER NUMBER
C  LAYNEW      = FLAG INDICATING NEW ATMOSPHERIC LAYER BOUNDARIES
C
#if __CONEX__
C --------------/CRATMOS3/------------------------
C  AATMCRS(5)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
C  BATMCRS(5)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
C  CATMCRS(5)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
C  DATMCRS(5)  = 1. / CATM(I) FOR CONEX
C  EATMCRS(6)  = ALTITUDE OF ATMOSPHERIC LAYER BOUNDARIES FOR CONEX
C
#endif
#if __ATMEXT__
C --------------/CRATMOSX/-----------------------
C  IATMOX      = MODTRAN ATMOSPHERIC MODEL NUMBER
C  FREFRX      = FLAG INDICATING REFRACTIVE INDEX IS TAKEN
C
#endif
#if __SLANT__
C --------------/CRATMOSL/-----------------------
C  MAXSLANT    = # OF POINTS FOR SLANT THICKNSS FUNCTION
C  MAXSLANT2   = # OF POINTS FOR SLANT THICKNSS FUNCTION IN ATM. LAYER
C  PATH1(.)    = SLANT PATH LENGTH FOR BIN
C  RHOSLT(.)   = DENSITY ALONG SLANT BIN
C  TSLANT(.)   = SLANT THICKNESS  TOP OF ATMOSPHERE TO BIN
C  HLAYS(6)    = SLANT PATH FROM TOP OF ATMOSPHERE TO LAYER BOUNDARY
C  RHOS(6)     = DENSITY AT LAYER BOUNDARY
C  THICKS(6)   = SLANT THICKNESS TOP OF ATMOSPHERE TO LAYER BOUNDARY
C  CCATM(5)    = LOG( BATM(I)/CATM(I) )
C  HLAYC(6)    = LAYER BOUNDARY (CM) FOR SLANT DEPTH CALCULATION
C  HGROUND     = ALTITUDE OF GROUND (= OBSLEV(1))
C  RADGRD      = RADIUS OF GROUND (= C(1) + HGROUND)
C  IENDT       = LAST BIN FOR SLANT DEPTH INTERPOLATION
C
#endif
#if __AUGERHIT__
C --------------/CRAUGDET/-----------------------
C  CUTRAD      = RADIUS OF DET. SATURATION AROUND SHOWER CORE (IN METER)
C  DRADIUS     = EFFECTIVE RADIUS (HEXAGON) OF AUGER DETECTOR (IN METER)
C  XSHCORE     = SCATTERED AUGER CORE POSITION IN X-DIRECTION (IN METER)
C  YSHCORE     = SCATTERED AUGER CORE POSITION IN Y-DIRECTION (IN METER)
C  DETDIS      = DISTANCE BETWEEN AUGER DETECTORS (IN METER)
C  XTEST       = DISTANCE TO NEAREST TANK CENTER X-DIRECTION
C  YTEST       = DISTANCE TO NEAREST TANK CENTER Y-DIRECTION
C  ROWDIS      = DISTANCE BETWEEN ROWS OF AUGER DETECTORS (IN METER)
C  MAUGPOS     = NUMBER OF MULTIPLE AUGER ARRAYS 
C  MAUGPS2     = NUMBER OF AUGER ARRAYS SET BY INPUT LINE
C  FTANKSHADW  = FLAG INDICATING TANK SHADOW HIT IS ENABLED
C  FANYMODE    = FLAG INDICATING HIT OF ANY THIN MODE IS ENABLED
C
#endif
C --------------/CRAVPT/-------------------------
C  AVPT        = AVERAGE TRANSVERSE MOMENTUM FOR PIONS
C  AVPK        = AVERAGE TRANSVERSE MOMENTUM FOR KAONS
C  AVPN        = AVERAGE TRANSVERSE MOMENTUM FOR NUCLEONS
C  AVPH        = AVERAGE TRANSVERSE MOMENTUM FOR STRANGE BARYONS
C  AVPE        = AVERAGE TRANSVERSE MOMENTUM FOR ETAS
C
C --------------/CRBOUNDS/-----------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRBREMPR/-----------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRBUFFS/------------------------
C  MAXBUF      = PARAMETER FOR MAXIMAL BUFFER SIZE
C  MAXLEN      = PARAMETER FOR SIZE OF PARTICLE FIELDS
C
C  RUNH(MAXBUF)= BUFFER FOR RUN   HEADER
C  RUNE(MAXBUF)= BUFFER FOR RUN   END
C  EVTH(MAXBUF)= BUFFER FOR EVENT HEADER
C  EVTE(MAXBUF)= BUFFER FOR EVENT END
C  DATAB(MAXBUF)= BUFFER FOR DATA
C  ARRAYLONG( )= BUFFER FOR LONGITUDINAL PARTICLE DISTRIBUTION
C  LH          = BUFFER POINTER
#if __PARALLEL__
C  WRRUNH      = FLAG INDICATING RUNHEADER IS WRITTEN
C  WRRUNE      = FLAG INDICATING RUNEND    IS WRITTEN
C  WREVTH      = FLAG INDICATING EVTHEADER IS WRITTEN
C  WREVTE      = FLAG INDICATING EVTEND    IS WRITTEN
#endif
C
#if __CERENKOV__
#if __CEFFIC__
C --------------/CRCERABS/-----------------------
C  ATMABS      = ARRAY WITH ATM. ABSORPTION COEFFICIENTS
C  ATEOBS      = ARRAY WITH ATM. ABS. COEFF. FOR OBSERVATION LEVEL
C  QUAEFF      = ARRAY WITH QUANTUM EFFICIENCIES AS FCT. OF LAMBDA
C  MIRREF      = ARRAY WITH MIRROR REFLECTIVITIES AS FCT. OF LAMBDA
C  CERQEF      = FLAG FOR QUANTUM EFFICIENCY
C  CERATA      = FLAG FOR ATM. ABSORPTION
C  CERMIR      = FLAG FOR MIRROR REFLECTIVITY
C
#endif
C --------------/CRCEREN1/-----------------------
C  CERELE      = CHERENKOV PHOTONS FROM ELECTRONS
C  CERHAD      = CHERENKOV PHOTONS FROM HADRONS
C  ETADSN      = CORRECTION FACTOR FOR REFRACTIVE INDEX CALCULATION
C  WAVLGL      = CHERENKOV WAVE LENGTH BAND LOWER END (NANOMETER)
C  WAVLGU      = CHERENKOV WAVE LENGTH BAND UPPER END (NANOMETER)
C  CYIELD      = CHERENKOV YIELD FACTOR
C  CERSIZ      = MAXIMAL NUMBER OF PHOTONS IN ONE BUNCH
C  CERNOR      = NORMALISATION FACTOR FOR CALC. OF WAVELENGTH OF C-PHOTONS
C  WLMAX       = MAX WAVELENGTH (NM) IN TABLES FOR atmabs, mirreff, quanteff
C  WLMIN       = MIN WAVELENGTH (NM) IN TABLES FOR atmabs, mirreff, quanteff
C  MCERFI      = OUTPUT MODE STEERING FOR CHERENKOV PHOTONS
C  LCERDB      = FLAG FOR DEBUG OUTPUT IN CHERENKOV PART
C
C --------------/CRCEREN2/-----------------------
C  ACERX       = CHERENKOV DETECTOR SIZE IN X DIRECTION IN CM
C  ACERY       = CHERENKOV DETECTOR SIZE IN Y DIRECTION IN CM
C  CERXOS(I)   = X OFFSETS OF SHOWER CORE FOR THE MULTIPLE EVENTS IN CM
C  CERYOS(I)   = Y OFFSETS OF SHOWER CORE FOR THE MULTIPLE EVENTS IN CM
C  DCERX       = GRID SPACING IN X DIRECTION IN CM
C  DCERXI      = INVERSE OF GRID SPACING IN X DIRECTION
C  DCERY       = GRID SPACING IN Y DIRECTION IN CM
C  DCERYI      = INVERSE OF GRID SPACING IN Y DIRECTION
C  EPSX        = HALF COVERAGE RATIO IN X DIRECTION
C  EPSY        = HALF COVERAGE RATIO IN Y DIRECTION
C  FCERX       = OFFSET FOR A ODD/EVEN NUMBER OF CHEREKOV DETECTORS IN X
C  FCERY       = OFFSET FOR A ODD/EVEN NUMBER OF CHEREKOV DETECTORS IN Y
C  WL          = WAVELENGTH OF CHERENKOV PHOTON
C  XCMAX       = MAX. EXTENSION OF ARRAY IN X DIRECTION
C  XCMAXS      = MAX. EXTENSION OF ARRAY IN X DIRECTION INCL. SCATTER
C  XSCATT      = RANGE OF X SCATTER OF SHOWER CORE IN CM
C  YCMAX       = MAX. EXTENSION OF ARRAY IN Y DIRECTION
C  YCMAXS      = MAX. EXTENSION OF ARRAY IN Y DIRECTION INCL. SCATTER
C  YSCATT      = RANGE OF Y SCATTER OF SHOWER CORE IN CM
C  PHOTCM      = NUMBER OF CHERENKOV PHOTONS EMITTED FROM PATH ELEMENT
C  XCER        = X-DISTANCE FROM SHOWER AXIS AT DET.LEVEL FOR CHERENKOV
C  YCER        = Y-DISTANCE FROM SHOWER AXIS AT DET.LEVEL FOR CHERENKOV
C  UEMIS       = EMISSION ANGLE COSINES OF CHERENKOV PHOTONS
C  VEMIS       = EMISSION ANGLE COSINES OF CHERENKOV PHOTONS
C  WEMIS       = EMISSION ANGLE COSINES OF CHERENKOV PHOTONS
C  CARTIM      = ARRIVAL TIME OF CHERENKOV PHOTONS
C  ZEMIS       = Z-COORDINATE OF EMISSION POINT
C  XSTEP       = STEP LENGTH IN X OF PARTICLE EMITTING CHERENKOV PHOTON
C  YSTEP       = STEP LENGTH IN Y OF PARTICLE EMITTING CHERENKOV PHOTON
C  ZSTEP       = STEP LENGTH IN Z OF PARTICLE EMITTING CHERENKOV PHOTON
C  XSTEP2      = HALF STEP LENGTH IN X OF PARTICLE EMITTING CHERENKOV PHOTON
C  YSTEP2      = HALF STEP LENGTH IN Y OF PARTICLE EMITTING CHERENKOV PHOTON
C  ZSTEP2      = HALF STEP LENGTH IN Z OF PARTICLE EMITTING CHERENKOV PHOTON
C  CERDIST     = DISTANCE CHERENKOV EMISSION POINT TO DETECTOR MIDDLE
#if __THIN__
C  WTCER       = WEIGHT OF CHERENKOV PHOTON BUNCH
#endif
C  NCERX       = NUMBER OF CHERENKOV DETECTORS IN X DIRECTION
C  NCERY       = NUMBER OF CHERENKOV DETECTORS IN Y DIRECTION
C  ICERML      = NUMBER OF MULTIPLE CHERENKOV ARRAYS
C
C --------------/CRCEREN3/-----------------------
C  MAXBF2      = MAXIMUM BUFFER SIZE FOR CERENKOV PHOTONS
C  CERCNT      = CHERENKOV PHOTON COUNTER
C  CERBUF(...) = MAPPING OF CHERENKOV TELESCOPE ID TO OUTPUT BUFFER 
C                (CHERENKOV FILE/BUFFER)
C  DATAB2(...) = BUFFER FOR DATA FOR CHERENKOV OUTPUT
C  NCERBUF     = NUMBER OF CERBUF OUTPUT BUFFERS
C  NRECER      = COUNTER FOR DIRECT ACCESS OUTPUT OF CHERENKOV PHOTONS
C  LHCER(...)  = CHERENKOV BUFFER POINTER
C
C --------------/CRCERTEL/-----------------------
C  NMAXCERTEL  = MAX # OF CHERENKOV TELESCOPES
C  CERTELX(10) = X POSITION OF CHERENKOV TELESCOPE 
C  CERTELY(10) = Y POSITION OF CHERENKOV TELESCOPE
C  CERTELZ(10) = Z POSITION OF CHERENKOV TELESCOPE
C  CERTELR(10) = RADIUS OF SPHERE AROUND CHERENKOV TELESCOPE
C  CERTELID(10)= ID OF TELESCOPE
C  NCERTEL     = # OF CHERENKOV TELESCOPE
C
#endif
C --------------/CRCHISTA/-----------------------
C  IHYCHI(124) = INTERACTION LENGTH STATISTICS FOR STRANGE BARYONS
C  IKACHI(124) = INTERACTION LENGTH STATISTICS FOR KAONS
C  IMUCHI(124) = INTERACTION LENGTH STATISTICS FOR MUONS
C  INNCHI(124) = INTERACTION LENGTH STATISTICS FOR NUCLEI
C  INUCHI(124) = INTERACTION LENGTH STATISTICS FOR NUCLEONS
C  IPICHI(124) = INTERACTION LENGTH STATISTICS FOR PIONS
C  INECHI(124) = INTERACTION LENGTH STATISTICS FOR NEUTRINOS
C
C --------------/CRCONSTA/-----------------------
C  PI          = 3.14159...     SET IN BLOCK DATA
C  PI2         = 2 * PI
C  OB3         = ONE BY THREE = 1./3.
C  TB3         = TWO BY THREE = 2./3.
C  ENEPER      = 2.718281828 (EULER''S CONSTANT)
C  SQRT3       = SQRT(3.)
C
#if __CERENKOV__&&__CURVED__
C --------------/CRCORFRAM/----------------------
C  DETSYS      = FLAG FOR DETECTOR FRAME(TRUE, IF WE ARE ALREADY IN DS)
C
#endif
C --------------/CRCURVE/------------------------
C  CHAPAR      = ARRAY OF PARTICLE NUMBERS FOR LONGIT. DISTRIBUTION
C  DEP         = ARRAY OF DEPTH VALUES FOR LONGITUDINAL DISTRIBUTION
C  ERR         = ARRAY OF ERRORS OF PARTICLE NUMBERS IN LONG. DIST.
C  NSTP        = NUMBER OF STEPS FOR LONGITUDINAL DIST. FIT
C
C --------------/CRDECAYC/------------------------
C  GAM345(3)   = GAMMA FACTOR OF PARTICLE EMERGING FROM 3 BODY DECAY
C  COS345(3)   = COSINE THETA OF PARTICLE EMERGING FROM 3 BODY DECAY
C  PHI345(3)   = ANGLE  PHI   OF PARTICLE EMERGING FROM 3 BODY DECAY
C  CPHI345(3)  = COSINE PHI   OF PARTICLE EMERGING FROM 3 BODY DECAY
C  SPHI345(3)  = SINE   PHI   OF PARTICLE EMERGING FROM 3 BODY DECAY
C
#if __VOLUMECORR__
C --------------/CRDETCFG/-----------------------
C  DETCFG      = DETEDTOR CONFIGURATION  HEIGHT/DIAMETER
C
#endif
#if __DPMJET__
C --------------/CRDPMDBG/-----------------------
C  E000        = ENERGY/NUCLEON OF PROJECTILE BEFORE COLLISION
C  IRAND(3)    = RANDOM GENERATOR STATUS AT BEGIN OF DPMJET INTERACTION
C
#endif
C --------------/CRDPMFLG/-----------------------
C  NFLAIN      = 0  RANDOM NUMBER OF INTERACTIONS IN AIR TARGET
C              = 1  FIXED  NUMBER OF INTERACTIONS IN AIR TARGET
C  NFLDIF      = 0  NO DIFFRACTIVE INTERACTION IF NFLAIN = 0 AND MORE
C                   THAN 1 INTERACTION
C  NFLPI0      = 0  RAPIDITY OF PI0 TREATED ACCORDING TO COLLIDER DATA
C              = 1  RAPIDITY OF PI0 SAME AS THAT OF CHARGED
C  NFLCHE      = 0  CHARGE EXCHANGE INTERACTION POSSIBLE
C              = 1  NO CHARGE EXCHANGE INTERACTION POSSIBLE
C  NFLPIF      = 0  NO FLUCTUATION OF NUMBER OF PI0
C              = 1  FLUCTUATION OF NUMBER OF PI0 AS SEEN IN COLLIDER
C  NFRAGM      = 0  TOTAL FRAGMENTATION OF PRIMARY NUCLEUS IN 1.INTERACT
C              = 1  NO FRAGMENTATION AND NO EVAPORATION
C              = 2  REALISTIC FRAGMENTATION OR EVAPORATION (PT AFTER JACEE)
C              = 3  REALISTIC FRAGMENTATION OR EVAPORATION (PT AFTER GOLDHABER)
C              = 4  REALISTIC FRAGMENTATION OR EVAPORATION WITH PT-0
C
#if __DPMJET__
C --------------/CRDPMJET/-----------------------
C  LEVLDB      = LEVEL OF DEBUG OUTPUT IN CASE OF DEBUGGIUNG
C  IDPMVER     = DPMJET VERSION NUMBER * 10
C  FDPMJT      = FLAG TO ACTIVATE DPMJET INTERACTION ROUTINES
C  FDPJSG      = FLAG TO ACTIVATE DPMJET CROSS-SECTIONS
C
C --------------/CRDPMLIN/-----------------------
C  ICTABL(.)   = TABLE TO CONVERT PARTICLE TYPE FROM CORSIKA TO DPMJET
C
#endif
C --------------/CREDECAY/-----------------------
C  CETA(1)     = BRANCHING RATIO FOR ETA DECAY
C  CETA(2)     = BRANCHING RATIO FOR ETA DECAY
C  CETA(3)     = BRANCHING RATIO FOR ETA DECAY
C  CETA(4)     = ASYMMETRY TERM    IN DECAY  ETA-->PI(+) + PI(-) + PI(0)
C  CETA(5)     = MAXIMUM AMPLITUDE IN DECAY  ETA-->PI(+) + PI(-) + PI(0)
C
#if __NUPRIM__
C --------------/CREE00/-------------------------
C  ENU         = NEUTRINO ENERGY FOR HERWIG INTERACTIONS
C  ETLAB       = TOTAL ENERGY (LAB) OF NEUTRINO INDUCED HERWIG EVENT
C
#endif
C --------------/CREGSDEB/-----------------------
C  JCLOCK      = PRESET COUNTER FOR EGS-DEBUG ACTIVATION
C  NCLOCK      = ACTUAL ELECTRON COUNTER FOR EGS-DEBUG
C  FEGSDB      = DEBUG FALG FOR EGS-DEBUGGING
C
C --------------/CRELABCT/-----------------------
C  ELCUT(.)    = CUT ON KINETIC ENERGY OF PARTICLES (HADR.,MU, E, GAMMA)
C
C --------------/CRELADPM/-----------------------
C  ELMEAN(40)  = MEAN ELASTICITY FOR ENERGY BINS PER SHOWER
C  ELMEAA(40)  = MEAN ELASTICITY FOR ENERGY BINS FOR ALL SHOWERS
C  IELDPM(.)   = ELASTICITY STATISTICS IN DUAL PARTON MODELL FOR SHOWER
C  IELDPA(.)   = ELASTICITY STATISTICS IN DUAL PARTON MODELL FOR ALL
C
C --------------/CRELASTY/-----------------------
C  ELAST       = ELASTICITY OF FIRST REACTION
C
C --------------/CRELECIN/-----------------------
C  (SEE EGS4 MANUAL)
C  STERNCOR    = PARAMETER FOR STERNHEIMER CORRECTION (SEE SUBR. ELECTR)
C
C --------------/CREPCONT/-----------------------
C  EDEP        = ENERGY DEPOSITED ALONG STEP
C  RATIO       = RATIO TOTAL STEP LENGTH/SCATTERING LENGTH FOR ELECTRONS
C  TSTEP       = DISTANCE TO NEXT INTERACTION
C  TUSTEP      = TOTAL (CURVED) STEP LENGTH REQUESTED
C  USTEP       = USER STEP LENGTH REQUESTED
C  TVSTEP      = ACTUAL TOTAL STEP LENGTH
C  VSTEP       = ACTUAL STEP LENGTH
C  RHOFAC      = DENSITY FACTOR
C  EOLD        = ENERGY AT BEGIN OF STEP
C  ENEW        = ENERGY AT END OF STEP
C  EKE         = KINETIC ENERGY OF ELECTRON
C  ELKE        = LOGARITHM OF ELECTRON KINETIC ENERGY
C  BETA2       = VELOCITY OF ELECTRON SQUARED
C  GLE         = LOGARITHM OF GAMMA ENERGY
C  TSCAT       = SEE EQ. 2.14.82 IN SLAC-265
C  IDISC       = FLAG INDICATING PARTICLE IS TO BE DISCARDED
C  IROLD       = INDEX OF OLD ATMOSPERIC LAYER
C  IRNEW       = INDEX OF NEW ATMOSPHERIC LAYER
C
C --------------/CRETHMAP/-----------------------
C  ECTMAP      = CUT TO PRINT OUT PARTICLES
C  ELEFT       = SUMMED ENERGY OF PARTICLES ON STACK
#if __PARALLEL__
C  ELEFTJ      = SUMMED INDIVIDUAL ENERGY OF PARTICLES ON 2ND STACK
#endif
C
#if __FLUKA__
C --------------/CRFLULIN/-----------------------
C  ICFTABL     = CONVERSION TABLE PARTICLE CODE CORSIKA TO FLUKA
C  IFCTABL     = CONVERSION TABLE PARTICLE CODE FLUKA TO CORSIKA
C
#endif
C --------------/CRGENER/------------------------
C  GEN         = GENERATION OF PARTICLE
C  ALEVEL      = LEVEL OF LAST HADRONIC INTERACTION
C
C --------------/GHEISHA COMMONS/----------------
C             SEE: GHEISHA ROUTINES
C
C --------------/CGCOMP/-------------------------
C  ACOMP       = ATOMIC WEIGHT OF COMPONENT (GHEISHA)
C  ZCOMP       = ATOMIC NUMBER OF COMPONENT (GHEISHA)
C  WCOMP       = ATOMIC FRACTION OF COMPONENT (GHEISHA)
C  KK          = NUMBER OF TARGET COMPONENTS (GHEISHA)
C
C --------------/CRGEOMEGS/----------------------
C  ZALTIT      = STARTING ALTITUDE (EGS4)
C  BOUND       = BOUNDARIES OF ATMOSPHERIC LAYERS (EGS4)
C  OBSLVL      = OBSERVATION LEVEL (EGS4)
C  OBSLV2      = OBSERVATION LEVEL - 1G/CM**2 (EGS4 AUGERHIST)
C  NEWOBS      = POINTER FOR NEXT OBSERVATION LEVEL (EGS4)
C
#if __PRESHOWER__
C --------------/CRGLOBAL/-----------------------
C  GLONG       = GEOGRAPHICAL LONGITUDE OF EXPERIMENT POSITION
C  GLATI       = GEOGRAPHICAL LATITUDE  OF EXPERIMENT POSITION
C  GRFYEAR     = YEAR OF EXPERIMENT
C  IPREPR      = PRESHOWER PRINT FLAG: 0=NEVER, 1=(MAXPRT), 2=EVER
C  IPRSTP      = FLAG ENABLING TO STOP EVENT IF NO PRESHOWERING
C  FPRSTP      = FLAG TO STOP EVENT IF NO PRESHOWERING
C
#endif
C --------------/CRGNUPR/------------------------
C  SE14(.)     = ARRAY FOR COLLISION PROBABILITY
C  SE16(.)     = ARRAY FOR COLLISION PROBABILITY
C  SE40(.)     = ARRAY FOR COLLISION PROBABILITY
C
#if __COASTUSERLIB__
C --------------/CRINCLINED/------------------------
C  XPINCL      = X COORDINATE OF INCLINED OBSERVATION PLANE
C  YPINCL      = Y COORDINATE OF INCLINED OBSERVATION PLANE
C  ZPINCL      = Z COORDINATE OF INCLINED OBSERVATION PLANE
C  THINCL      = THETA ANGLE OF THE NORMAL TO THE INCLINED OBSERVATION PLANE
C  PHINCL      = PHI ANGLE OF THE NORMAL TO THE INCLINED OBSERVATION PLANE
C
#endif
C --------------/CRINDICE/-----------------------
C  NNUCN(.)    = # OF NEUTRON       PAIRS  IN 1ST + 2ND / 3RD STRING
C  NKA0(.)     = # OF NEUTRAL KAON  PAIRS  IN 1ST + 2ND / 3RD STRING
C  NHYPN(.)    = # OF NEUTR.STR.BAR.PAIRS  IN 1ST + 2ND / 3RD STRING
C  NETA(I,K)   = # OF ETAS                 IN 1ST + 2ND / 3RD STRING
C                SEPARATELY DEFINED FOR EACH DECAY MODE K
C  NETAS(I)    = # OF ETAS                 IN 1ST + 2ND / 3RD STRING
C  NPIZER(.)   = # OF PI(0)S               IN 1ST + 2ND / 3RD STRING
C  NNC         = # OF PROTON                 PAIRS
C  NKC         = # OF CHARGED KAON           PAIRS
C  NHC         = # OF CHARGED STRANGE BARYON PAIRS
C  NPC         = # OF CHARGED PIONS
C  NCH         = # OF CHARGED PARTICLES
C  NNN         = TOTAL # OF NEUTRON        PAIRS
C  NKN         = TOTAL # OF NEUTRAL KAON   PAIRS
C  NHN         = TOTAL # OF NEUTR.STR.BAR. PAIRS
C  NET         = TOTAL # OF ETAS
C  NPN         = TOTAL # OF PI(0)S
C
C --------------/CRINTER/------------------------
C  AVCH        = AVERAGE # OF CHARGED PARTICLES
C  AVCH3       = AVERAGE # OF CHARGED PARTICLES IN 3RD STRING
C  DC0         = AVERAGE DENSITY AT CENTRE OF RAPIDITY
C  DLOGS       = LOG OF DIFFRACTIVE MASS SQUARED
C  DMLOG       = LOG(ECMDIF**2 - MASS PI(0)**2 - MASS DIFFR.PART.**2)
C  ECMDIF      = DIFFRACTIVE MASS FOR HDPM
C  ECMDPM      = C.M ENERGY FOR HDPM
C  ELAB        = LAB ENERGY OF INCOMING PARTICLE IN SDPM/HDPM
C  FNEUT       = # OF NEUTRAL PARTICLES (ALL 3 STRINGS)  WITH FLUCTUAT
C  FNEUT2      = # OF NEUTRAL PARTICLES (1ST+2ND STRING) WITH FLUCTUAT
C  GNU         = # OF COLLISIONS IN TARGET
C  PLAB        = MOMENTUM OF INCOMING PARTICLE IN LAB SYSTEM
C  POSC2       = POSITION OF GAUSSIAN FOR 1ST+2ND STRING (CHARGED)
C  POSC3       = POSITION OF GAUSSIAN FOR 3RD     STRING (CHARGED)
C  POSN2       = POSITION OF GAUSSIAN FOR 1ST+2ND STRING (NEUTRAL)
C  POSN3       = POSITION OF GAUSSIAN FOR 3RD     STRING (NEUTRAL)
C  RC3TO2      = RATIO (CHARGED OF 3RD STRING)/(CHARGED 1ST+2ND STRING)
C  S           = C.M. ENERGY SQUARED
C  SEUGF       = NUMBER OF GAMMAS (WITH FLUCTUATION)
C  SEUGP       = NUMBER OF GAMMAS (AVERAGE PARAMETRIZED)
C  SLOG        = LOG OF C.M.ENERGY SQUARED
C  SLOGSQ      = SQUARE OF LOG OF C.M.ENERGY SQUARED
C  SMLOG       = LOG ( C.M. ENERGY SQUARED  - 2 * NUCL.MASS**2 )(HDPM)
C  WIDC2       = WIDTH    OF GAUSSIAN FOR 1ST+2ND STRING (CHARGED)
C  WIDC3       = WIDTH    OF GAUSSIAN FOR 3RD     STRING (CHARGED)
C  WIDN2       = WIDTH    OF GAUSSIAN FOR 1ST+2ND STRING (NEUTRAL)
C  WIDN3       = WIDTH    OF GAUSSIAN FOR 3RD     STRING (NEUTRAL)
C  YCM         = RAPIDITY OF CM SYSTEM IN LABORATORY
C  YY0         = RAPIDITY OF DIFFRACTIVE SYSTEM IN CMS
C  ZN          = CENTR. RAP. DENSITY FOR CALCULATION OF PT
C  IDIF        = DIFFRACTION FLAG IN HDPM
C  ITAR        = PARTICLE CODE OF TARGET NUCLEON IN HDPM
C
C --------------/CRIRET/-------------------------
C  IRET1       = RETURN CODE; IRET1=1: PARTICLE CUTTED
C  IRET2       = RETURN CODE; IRET2=1: PARTICLE CUTTED IN UPDATE
C  IRETE       = RETURN CODE; IRETE=T: ENERGY CUT (LOGICAL) IN UPDATE
C
C --------------/CRISTA/-------------------------
C  IFINET      = # ETAS PRODUCED IN FIRST INTERACTION
C  IFINNU      = # NUCLEONS PRODUCED IN FIRST INTERACTION
C  IFINKA      = # KAONS PRODUCED IN FIRST INTERACTION
C  IFINPI      = # PIONS PRODUCED IN FIRST INTERACTION
C  IFINHY      = # STRANG BARYONS PRODUCED IN FIRST INTERACTION
C  IFINCM      = # CHARMED PART. PRODUCED IN FIRST INTERACTION
C  IFINOT      = # OTHER HADRONS PRODUCED IN FIRST INTERACTION
C  IFINRHO     = # RHO MESONS PRODUCED IN FIRST INTERACTION
C
C --------------/CRKAONS/------------------------
C  CKA(.)      = PHYSICAL CONSTANTS FOR KAONS
C  CKA(2)      = MEAN FOR KAON LONG. MOMENTUM COMING FROM VHMESO
C  CKA(23)     = BRANCH RATIO K(+,-) DECAY
C  CKA(24)     = BRANCH RATIO K0S DECAY
C  CKA(25)     = BRANCH RATIO K0L DECAY
C  CKA(26)     = BRANCH RATIO K0L DECAY
C  CKA(27)     = BRANCH RATIO K0L DECAY
C  CKA(47)     = BRANCH RATIO K(+,-) DECAY
C  CKA(48)     = BRANCH RATIO K(+,-) DECAY
C  CKA(49)     = BRANCH RATIO K(+,-) DECAY
C  CKA(50)     = BRANCH RATIO K(+,-) DECAY
C  CKA(51)     = G     OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(52)     = H     OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(53)     = K     OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(54)     = AMPMX OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(55)     = G     OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(56)     = H     OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(57)     = K     OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(58)     = AMPMX OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(59)     = G,H,K OF K0L ===> PI0 + PI0 + PI0
C  CKA(60)     = AMPMX OF K0L ===> PI0 + PI0 + PI0
C  CKA(61)     = G     OF K0L ===> PI+ + PI- + PI0
C  CKA(62)     = H     OF K0L ===> PI+ + PI- + PI0
C  CKA(63)     = K     OF K0L ===> PI+ + PI- + PI0
C  CKA(64)     = AMPMX OF K0L ===> PI+ + PI- + PI0
C  CKA(65)     = LAMBDA-PLUS OF K+,- ===> PI0 + E + NU
C  CKA(66)     = LAMBDA-ZERO OF K+,- ===> PI0 + E + NU
C  CKA(67)     = AMPMX       OF K+,- ===> PI0 + E + NU
C  CKA(68)     = LAMBDA-PLUS OF K+,- ===> PI0 + MU + NU
C  CKA(69)     = LAMBDA-ZERO OF K+,- ===> PI0 + MU + NU
C  CKA(70)     = AMPMX       OF K+,- ===> PI0 + MU + NU
C  CKA(71)     = LAMBDA-PLUS OF K0L ===> PI + E + NU
C  CKA(72)     = LAMBDA-ZERO OF K0L ===> PI + E + NU
C  CKA(73)     = AMPMX       OF K0L ===> PI + E + NU
C  CKA(74)     = LAMBDA-PLUS OF K0L ===> PI + MU + NU
C  CKA(75)     = LAMBDA-ZERO OF K0L ===> PI + MU + NU
C  CKA(76)     = AMPMX       OF K0L ===> PI + MU + NU
C
C --------------/CRLAYER/------------------------
C  HBARO       = BAROMETRIC EXPONENT OF ATMOSPHERIC LAYER (EGS4)
C  HBAROI      = INVERSE OF BAROMETRIC EXP. OF ATMOSPHERIC LAYER (EGS4)
C
C --------------/CRLEPAR/------------------------
C  LEPAR1      = TYPE OF LEADING PARTICLE BEFORE / AFTER CHARGE EXCHANGE
C  LEPAR2      = TYPE OF TARGET  PARTICLE BEFORE / AFTER CHARGE EXCHANGE
C  LASTPI      = # OF CHARGED PIONS CREATED/DELETED BY CHARGE EXCHANGE
C  NRESPC      = # OF CHARGED PIONS TO BE CREATED BY RESONANCE DECAY
C  NRESPN      = # OF NEUTRAL PIONS TO BE CREATED BY RESONANCE DECAY
C  NCPLUS      = POSITIVE CHARGE EXCESS BY RESONANCE/CHARGE EXCHANGE
C
C --------------/CRLONGI/------------------------
C  LNGMAX      = MAXIMUM ARRAY LENGTH OF LONGI ARRAYS (=15000)
C  ADLONG(I,K) = AVERAGE OF DLONG OVER ALL SHOWERS
C  AELONG(I,K) = AVERAGE OF ELONG OVER ALL SHOWERS
C  APLONG(I,K) = AVERAGE OF PLONG OVER ALL SHOWERS
C  DLONG(I,K)  = LONGITUDINAL ENERGY DEPOSITS PER SHOWER IN I BINS FOR
C                1=ABSORBED GAMMAS, 2=EM-IONIZATION, 3=E-CUTTED EM,
C                4=MU-& MU+ IONOZATION, 5= E-CUTTED MUONS,
C                6=HADRON IONIZATION, 7=E-CUTTED HADRONS, 8=NEUTRINO,
C                9=SUM OF DEPOSITS, 10=DUMMY,
C                11=ANGL. CUTTED GAMMAS, 12=DUMMY, 13=ANGL. CUTTED EM,
C                14=DUMMY, 15=ANGL. CUTTED MUONS, 16=DUMMY,
C                17=ANGL. CUTTED HADRONS, 18=ANGL. CUTTED NEUTRINOS,
C                19=DUMMY
C  ELONG(I,K)  = LONGITUDINAL ENERGY DISTRIBUTIONS PER SHOWER IN I
C                BINS FOR K= GAMMAS, POSITRONS, ELECTRONS, MU+, MU-,
C                HADRONS, CHARGED, NUCLEI, CHERENKOV PHOTONS, NEUTRINOS
C  HLONG(I)    = THE HEIGHT VALUES IN CM FOR THE LEVELS IN G/CM**2
C  PLONG(I,K)  = LONGITUDINAL PARTICLE DISTRIBUTIONS PER SHOWER IN I
C                BINS FOR K= GAMMAS, POSITRONS, ELECTRONS, MU+, MU-,
C                HADRONS, CHARGED, NUCLEI, CHERENKOV PHOTONS, NEUTRINOS
C  SDLONG(I,K) = STANDARD DEVIATION OF DLONG
C  SELONG(I,K) = STANDARD DEVIATION OF ELONG
C  SPLONG(I,K) = STANDARD DEVIATION OF PLONG
C  THSTEP      = STEP WIDTH IN G/CM**2 FOR LONGITUDINAL DISTRIBUTION
C  THSTPI      = 1/THSTEP
C  LHEIGH      = STEP NUMBER AT INTERACTION POINT
C  NSTEP       = NUMBER OF STEPS FOR LONGITUDINAL DISTRIBUTION
C  LLONGI      = LOGICAL TO STEER THE SAMPLING OF LONGITUDINAL DISTRIBUTION
C  FLGFIT      = LOGICAL TO ENABLE/DISABLE FIT TO CHARGED PART. LONG. DISTR.
C
#if __SLANT__
C - - - - - - - /CRSLANT/ - - - - - - - - - - - -
C  RLONG(.)    = ARRAY FOR DISTANCES TO PLANE NORMAL TO SHOWER AXIS
C  THCKRL(.)   = ARRAY FOR THICKNESS TO PLANE NORMAL TO SHOWER AXIS
C  CTH         = COSINE OF PRIMARY FOR PLANE NORMAL TO SHOWER AXIS
C  STHCPH      = SINTHE*COSPHI OF PRIMARY FOR PLANE NORM. TO SHOWER AXIS
C  STHSPH      = SINTHE*SINPHI OF PRIMARY FOR PLANE NORM. TO SHOWER AXIS
C  RLOFF       = OFFSET OF PLANE NORMAL TO SHOWER AXIS
C
#endif
C --------------/CRMAGANG/-----------------------
C  ARRANG      = ANGLE (DEG) ARRAY X-DIRECTION AND MAGNETIC NORD
C  ARRANR      = ANGLE (RAD) ARRAY X-DIRECTION AND MAGNETIC NORD
C  COSANG      = COSINE OF ARRANR
C  SINANG      = SIN OF ARRANR
C
C --------------/CRMAGNET/-----------------------
C  BX          = MAGNET FIELD STRENGTH COMPONENT TO NORTH [MICROTESLA]
C  BZ          = MAGNET FIELD STRENGTH COMPONENT DOWNWARD [MICROTESLA]
C  BVAL        = SQUARED MAGNET FIELD STRENGTH
C  BNORMC      = MAGNETIC DEFLECTION CONSTANT [GEV/CM]
C  BNORM       = MAGNETIC DEFLECTION CONSTANT [MEV/CM]
C  COSB        = COS OF INCLINATION ANGLE
C  SINB        = SIN OF INCLINATION ANGLE
C  BLIMIT      = LIMIT FACTOR FOR STEP SIZE OF ELECTRONS IN MAGN.FIELD
C
C --------------/CRMEDIA/------------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRMEDIAC/------------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRMISC/--------------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRMPARTI/-----------------------
C  MPARTO(.)   = ARRAY FOR MEAN # OF PARTICLES
C  MPHOTO(20)  = MEAN # OF GAMMAS WRITTEN TO TAPE PER LEVEL
C  MPOSIT(20)  = MEAN # OF E+ WRITTEN TO TAPE PER LEVEL
C  MELECT(20)  = MEAN # OF E- WRITTEN TO TAPE PER LEVEL
C  MNU(20)     = MEAN # OF NEUTRINOS WRITTEN TO TAPE PER LEVEL
C  MMUP(20)    = MEAN # OF MU+ WRITTEN TO TAPE PER LEVEL
C  MMUM(20)    = MEAN # OF MU- WRITTEN TO TAPE PER LEVEL
C  MPI0(20)    = MEAN # OF PI(0) WRITTEN TO TAPE PER LEVEL
C  MPIP(20)    = MEAN # OF PI+ WRITTEN TO TAPE PER LEVEL
C  MPIM(20)    = MEAN # OF PI- WRITTEN TO TAPE PER LEVEL
C  MK0L(20)    = MEAN # OF K0L WRITTEN TO TAPE PER LEVEL
C  MKPL(20)    = MEAN # OF K + WRITTEN TO TAPE PER LEVEL
C  MKMI(20)    = MEAN # OF K - WRITTEN TO TAPE PER LEVEL
C  MNEUTR(20)  = MEAN # OF NEUTRONS WRITTEN TO TAPE PER LEVEL
C  MPROTO(20)  = MEAN # OF PROTONS WRITTEN TO TAPE PER LEVEL
C  MPROTB(20)  = MEAN # OF ANTIPROTONS WRITTEN TO TAPE PER LEVEL
C  MK0S(20)    = MEAN # OF K0S WRITTEN TO TAPE PER LEVEL
C  MHYP(20)    = MEAN # OF STRANGE BARYONS WRITTEN TO TAPE PER LEVEL
C  MDEUT(20)   = MEAN # OF DEUTERONS WRITTEN TO TAPE PER LEVEL
C  MTRIT(20)   = MEAN # OF TRITONS WRITTEN TO TAPE PER LEVEL
C  MHELI3(20)  = MEAN # OF 3HELIUM WRITTEN TO TAPE PER LEVEL
C  MALPHA(20)  = MEAN # OF ALPHAS WRITTEN TO TAPE PER LEVEL
C  MCHRMM(20)  = MEAN # OF CHARMED MESONS WRITTEN TO TAPE PER LEVEL
C  MCHRMB(20)  = MEAN # OF CHARMED BARYONS WRITTEN TO TAPE PER LEVEL
C  MOTHER(20)  = MEAN # OF OTHER PARTICLES WRITTEN TO TAPE PER LEVEL
C  MMUOND      = MEAN # OF MUONS DECAYED TO ELECTRONS/POSITRONS
C  MNEUTB(20)  = MEAN # OF ANTINEUTRONS WRITTEN TO TAPE PER LEVEL
C  MMUONE      = MEAN # OF MUONS ELIMINATED BECAUSE OF ENERGY/ANGULAR CUT
C
C --------------/CRMULT/-------------------------
C  EKINL       = ENERGY FOR ENERGY-MULTIPLICITY MATRIX
C  MSMM        = MULTIPLICITY FOR ENERGY-MULTIPLICITY MATRIX
C  MULTMA(.)   = ENERGY-MULTIPLICITY MATRIX FOR SHOWER
C  MULTOT(.)   = ENERGY-MULTIPLICITY MATRIX FOR SHOWER GROUP
C
#if __MULTITHIN__
C --------------/CRMULTHIN/-----------------------
C  EMFRACTH(6) = ENERGY FRACTION OF NULTITHIN MODE
C  EMTHNNG(6)  = ENERGY THRESHOLD FOR HADRONIC MULTITHIN MODE
C  EMTHNN(6)   = ENERGY THRESHOLD FOR EM MULTITHIN MODE
C  WMMAX0(6)   = WEIGHT LIMIT FOR HADRONIC MULTITHIN MODE
C  WMMAX(6)    = ACTUAL WEIGHT LIMIT FOR HADRONIC MULTITHIN MODE
C  WMMAXEM0(6) = WEIGHT LIMIT FOR EM MULTITHIN MODE
C  WMMAXEM(6)  = ACTUAL WEIGHT LIMIT FOR EM MULTITHIN MODE
C  THNMRTH(6)  = RATIO ETHIN_EM/ETHIN_HAD FOR MULTITHIN MODE
C  WTRATMH(6)  = RATIO WEIGHTLIM_EM/WEIGHTLIM_HAD FOR MULTITHIN MODE
C  NMTHIN      = # OF MULTITHIN MODES
C
#endif
C --------------/CRMULTS/-------------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRMUMULT/-----------------------
C  CHC         = CONSTANT CHI_C   FOR MUOMN MULTIPLE SCATTERING
C  OMC         = CONSTANT OMEGA_C FOR MUOMN MULTIPLE SCATTERING
C  PHISCT      = AZIMUTAL ANGLE OF MUON MULTIPLE SCATTERING
C  CPHISCT     = COSINE OF AZIMUTAL ANGLE OF MUON MULTIPLE SCATTERING
C  SPHISCT     = SINE   OF AZIMUTAL ANGLE OF MUON MULTIPLE SCATTERING
C  STEPL       = STEP LENGTH FOR MUON TRANSPORT STEP
C  VSCAT       = POLAR ANGLE OF MUON MULTIPLE SCATTERING
C  FMOLI       = FLAG INDICATING MOLIERE (T) OR GAUSS (F) SCATTERING
C
C --------------/CRMUON/-------------------------
C  PRRMMU      = REST MASS OF MUON (EGS4)
C  RMMUT4      = 4 * REST MASS OF MUON (EGS4)
C
C --------------/CRMUPART/-----------------------
C  AMUPAR(0:..)= REGISTER FOR MUON PARTICLE ADDITIONAL INFO
C  BCUT        = CUT-OFF ENERGY FOR MUON/TAU BREMSSTRAHLUNG
C  CMUON(11)   = CONSTANTS FOR MUON BREMSSTRAHLUNG CALCULATION
C  CTAU(11)    = CONSTANTS FOR TAU  BREMSSTRAHLUNG CALCULATION
C  AATOM       = NUCLEONS IN TARGET FOR MUON/TAU INTERACTIONS
C  CONSTKINE   = KINEMATIC CONSTANT FOR MUON/TAU INTERACTIONS
C  EBYMU       = MASS RATION ELECT. MASS / MUON MASS
C  EBYTAU      = MASS RATION ELECT. MASS / TAU  MASS
C  EE          = TOTAL ENERGY OF MUON/TAU FOR INTERACTIONS
C  SE          = SQUARE ROOT OF E_NEPER
C  VFRAC       = ENERGY FRACTION FOR SECONDARY IN MUON/TAU INTERACTION
C  VMAX        = MAX. VALUE OF ENERGY FRACTION FOR MUON/TAU INTERACT.
C  VMIN        = MIN. VALUE OF ENERGY FRACTION FOR MUON/TAU INTERACT.
C  ZATOM       = ATOMIC NUMBER OF TARGET FOR MUON/TAU INTERACTIONS
C  MT          = FLAG INDICATING MU(=1) OR TAU(=2)
C  FMUBRM      = FLAG TO INDICATE MUON/TAU HAS TO UNDERGO BREMSSTRAHLUNG
C  FMUNUC      = FLAG TO INDICATE MUON/TAU HAS TO UNDERGO NUCL.INTERACT.
C  FMUORG      = FLAG TO INDICATE WHETHER MUON BELONGS TO AMUPAR(.)
C
C --------------/CRNCSNCS/-----------------------
C  SIGN30(.)   = ARRAY FOR CROSS-SECTIONS NITROGEN
C  SIGN45(.)   = ARRAY FOR CROSS-SECTIONS NITROGEN
C  SIGN60(.)   = ARRAY FOR CROSS-SECTIONS NITROGEN
C  SIGO30(.)   = ARRAY FOR CROSS-SECTIONS OXYGEN
C  SIGO45(.)   = ARRAY FOR CROSS-SECTIONS OXYGEN
C  SIGO60(.)   = ARRAY FOR CROSS-SECTIONS OXYGEN
C  SIGA30(.)   = ARRAY FOR CROSS-SECTIONS ARGON
C  SIGA45(.)   = ARRAY FOR CROSS-SECTIONS ARGON
C  SIGA60(.)   = ARRAY FOR CROSS-SECTIONS ARGON
C  PNOA30(.)   = ARRAY FOR PROBABILITY OF # OF INTERACTIONS
C  PNOA45(.)   = ARRAY FOR PROBABILITY OF # OF INTERACTIONS
C  PNOA60(.)   = ARRAY FOR PROBABILITY OF # OF INTERACTIONS
C  SIG30A(.)   = ARRAY FOR CROSS-SECTIONS AIR
C  SIG45A(.)   = ARRAY FOR CROSS-SECTIONS AIR
C  SIG60A(.)   = ARRAY FOR CROSS-SECTIONS AIR
C
C --------------/CRNEWPAR/-----------------------
C  EA(3000)    = ENERGY            OF SECONDARY PARTICLE IN HDPM
C  PT2(3000)   = PT**2             OF SECONDARY PARTICLE IN HDPM
C  PX(3000)    = PT IN X DIRECTION OF SECONDARY PARTICLE IN HDPM
C  PY(3000)    = PT IN Y DIRECTION OF SECONDARY PARTICLE IN HDPM
C  TMAS(3000)  = TRANSVERSE MASS   OF SECONDARY PARTICLE IN HDPM
C  YR(3000)    = RAPIDITY          OF SECONDARY PARTICLE IN HDPM
C  ITYP(3000)  = PARTICLE TYPE     OF SECONDARY PARTICLE IN HDPM
C  IA1 ... IJ1 = LOWER BOUNDARY OF PARTICLE SPECIES
C  IA2 ... II2 = UPPER BOUNDARY OF PARTICLES 3RD STRING
C  NTOT        = TOTAL NUMBER OF PARTICLES
C
#if __NEXUS__ || __EPOS__
C --------------/CRNEXLIN/-----------------------
C  IDTABL(.)   = CONVERSION TABLE CORSIKA CODE TO NEXUS CODE
C
C --------------/CRNEXPAR/-----------------------
C  NEXPRM      = LUN FOR NEXUS PARAMETER SCRATCH FILE
C  NNPARM      = NUMBER OF NEXUS PARAMETERS READ BY DATAC
C  IRAND(3)    = RANDOM GENERATOR STATUS AT BEGIN OF NEXUS INTERACTION
C
C --------------/CRNEXSGM/-----------------------
C  XFRACN(..)  = NITROGEN        FRACTION OF HADR.-AIR CROSS-SECTION
C  XFRANO(..)  = NITROGEN+OXYGEN FRACTION OF HADR.-AIR CROSS-SECTION
C  SIGNAIR(..) = HADRON-AIR CROSS-SECTION
C  SIGNHN(..)  = HADRON-NUCLEON CROSS-SECTION
C
C --------------/CRNEXUS/------------------------
C  ISH0N       = PARAMETER TO STEER AMOUNT OF NEXUS DEBUG OUTPUT
C  IVERNX      = NEXUS VERSION *1000 AS INTEGER
C  NEXVER      = NUMBER OF NEXUS VERSION
C  FNEXUS      = FLAG TO ACTIVATE NEXUS ROUTINES
C  FNEXSG      = FLAG TO ACTIVATE NEXUS CROSS-SECTIONS
C
#endif
C --------------/CRNKGI/-------------------------
C  SEL(10)     = USED FOR AVERAGING OF SL(10)
C  SELLG(10)   = USED FOR LOGARITHMIC AVERAGING OF SL(10)
C  STH(10)     = AGE IN STEPS OF 100 G/CM**2, SUM OVER ALL SHOWERS
C  ZEL(10)     = USED FOR FLUCTUATION OF SEL(10)
C  ZELLG(10)   = USED FOR FLUCTUATION OF SELLG(10)
C  ZSL(10)     = USED FOR FLUCTUATION OF STH(10))
C  DIST(10)    = DISTANCES FROM CORE IN CM (USED BY AVAGE)
C  DISX(.)     = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN X  (IN CM)
C  DISY(.)     = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN Y  (IN CM)
C  DISXY(.)    = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN XY (IN CM)
C  DISYX(.)    = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN YX (IN CM)
C  DLAX(.)     = USED FOR AVERAGING OF CZX
C  DLAY(.)     = USED FOR AVERAGING OF CZY
C  DLAXY(.)    = USED FOR AVERAGING OF CZXY
C  DLAYX(.)    = USED FOR AVERAGING OF CZYX
C  OBSATI(2)   = OBSERVATION LEVELS IN CM (USED IN NKG) (MAX. 2)
C  RADNKG      = RADIUS RANGE FOR NKG ELECTRON DENSITIES IN CM
C  RMOL(1)     = MOLIERE RADIUS IN AIR IN CM AT LOWER LEVEL
C  RMOL(2)     = MOLIERE RADIUS IN AIR IN CM AT HIGHER LEVEL
C  TLEV(10)    = LEVELS IN NKG IN G/CM**2
C  TLEVCM(10)  = LEVELS IN NKG IN CM
C  IALT(2)     = # OF LEVELS IN NKG FOR WHICH ELECT.DENSITIES ARE CALCUL
C
C --------------/CRNKGS/-------------------------
C  CZX(.)      = LATERAL DIST. OF ELECTRONDENSITY IN X (NKG) (/CM**2)
C  CZY(.)      = LATERAL DIST. OF ELECTRONDENSITY IN Y (NKG) (/CM**2)
C  CZXY(.)     = LATERAL DIST. OF ELECTRONDENSITY IN XY (NKG) (/CM**2)
C  CZYX(.)     = LATERAL DIST. OF ELECTRONDENSITY IN YX (NKG) (/CM**2)
C  SAH(10)     = AGE IN STEPS OF 100 G/CM**2
C  SL(10)      = NUMBER OF ELECTRONS IN STEPS OF 100 G/CM**2
C  ZNE(10)     = PARAMETER USED FOR LONGITUDINAL AGE CALCULATION
C
C --------------/CRNKGSUB/-----------------------
C  XXOLD       = COORDINATE OF EM PARTICLE FOR SUBTRACT. FROM NKG (EGS4)
C  YYOLD       = COORDINATE OF EM PARTICLE FOR SUBTRACT. FROM NKG (EGS4)
C  ZZOLD       = COORDINATE OF EM PARTICLE FOR SUBTRACT. FROM NKG (EGS4)
C
C --------------/CRNPARTI/-----------------------
C  NPARTO(.)   = ARRAY CONTAINING  # OF PARTICLES AT OBSERVATION LEVEL
C  NPART2(.)   = ARRAY CONTAINING  # OF PARTICLES AT OBSERVATION LEVEL
C  NPHOTO(20)  = # OF GAMMAS WRITTEN TO TAPE PER LEVEL
C  NPOSIT(20)  = # OF E+ WRITTEN TO TAPE PER LEVEL
C  NELECT(20)  = # OF E- WRITTEN TO TAPE PER LEVEL
C  NNU(20)     = # OF NEUTRINOS WRITTEN TO TAPE PER LEVEL
C  NMUP(20)    = # OF MU+ WRITTEN TO TAPE PER LEVEL
C  NMUM(20)    = # OF MU- WRITTEN TO TAPE PER LEVEL
C  NPI0(20)    = # OF PI(0) WRITTEN TO TAPE PER LEVEL
C  NPIP(20)    = # OF PI+ WRITTEN TO TAPE PER LEVEL
C  NPIM(20)    = # OF PI- WRITTEN TO TAPE PER LEVEL
C  NK0L(20)    = # OF K0L WRITTEN TO TAPE PER LEVEL
C  NKPL(20)    = # OF K+ WRITTEN TO TAPE PER LEVEL
C  NKMI(20)    = # OF K- WRITTEN TO TAPE PER LEVEL
C  NNEUTR(20)  = # OF NEUTRONS WRITTEN TO TAPE PER LEVEL
C  NPROTO(20)  = # OF PROTONS WRITTEN TO TAPE PER LEVEL
C  NPROTB(20)  = # OF ANTIPROTONS WRITTEN TO TAPE PER LEVEL
C  NK0S(20)    = # OF K0S WRITTEN TO TAPE PER LEVEL
C  NHYP(20)    = # OF STR. BARYONS WRITTEN TO TAPE PER LEVEL
C  NDEUT(20)   = # OF DEUTERONS WRITTEN TO TAPE PER LEVEL
C  NTRIT(20)   = # OF TRITONS WRITTEN TO TAPE PER LEVEL
C  NHELI3(20)  = # OF 3HELIUM WRITTEN TO TAPE PER LEVEL
C  NALPHA(20)  = # OF ALPHAS WRITTEN TO TAPE PER LEVEL
C  NCHRMM(20)  = # OF CHARMED MESONS WRITTEN TO TAPE PER LEVEL
C  NCHRMB(20)  = # OF CHARMED BARYONS WRITTEN TO TAPE PER LEVEL
C  NOTHER(20)  = # OF OTHER PARTICLES WRITTEN TO TAPE PER LEVEL
C  NMUOND      = # OF MUONS DECAYED TO ELECTRONS/POSITRONS
C  NNEUTB(20)  = # OF ANTINEUTRONS WRITTEN TO TAPE PER LEVEL
C  NMUONE      = # OF MUONS ELIMINATED BECAUSE OF ENERGY/ANGULAR CUT
C
#if __NUPRIM__
C --------------/CRNUPROC/-----------------------
C  JPROC       = TYPE OF PROCESS IN FIRST NEUTRINO INTERACTION
C  NUSLCT      = SELECTS CC OR NC INTERACTIONS OF NEUTRINOS
C
#endif
C --------------/CROBSPAR/-----------------------
C  OBSLEV(..)  = OBSERVATION LEVELS (CM)
C  THCKOB(..)  = LAYER THICKNESS AT OBSERVATION LEVEL (G/CM**2)
C  XOFF(..)    = OFFSET OF X COOR. FOR INCLINED SHOWERS AT OBS. LEVEL
C  YOFF(..)    = OFFSET OF Y COOR. FOR INCLINED SHOWERS AT OBS. LEVEL
C  HEIGHP      = HEIGHT OF FIRST INTERACTION
C  THETAP      = ACTUAL THETA OF PRIMARY PARTICLE IN RADIAN
C  PHIP        = ACTUAL PHI OF PRIMARY PARTICLE IN RADIAN
C  THETPR(2)   = RANGE OF THETA OF PRIMARY PARTICLE IN RADIAN
C  PHIPR(2)    = RANGE OF PHI OF PRIMARY PARTICLE IN RADIAN
#if __CURVED__
C  CORRXY      = CORRECTION FOR CURVOUT OPTION
#endif
#if __AUGERHIST__
C  COSPHIP     = COSIN OF AZIMUTH OF PRIMARY
C  HEIGHTP     = HEIGHT OF FIRST INTERACTION
C  SAMPTH      = THICKNESS OF LAYER AT OBSERVATION LEVEL
C  SINPHIP     = SIN OF AZIMUTH OF PRIMARY
C  TANTEP      = TANGENS OF ZENITH OF PRIMARY
#endif
#if __VIEWCONE__
C  VUECON(2)   = RANGE OF VIEWING CONE AROUND FIXED THETA+PHI IN RADIAN
#endif
C  NOBSLV      = # OF OBSERVATION LEVELS
C
C --------------/CRPAM/--------------------------
C  PAMA(6000)  = MASS OF PARTICLE (GEV)
C  SIGNUM(6000)= SIGN AND CHARGE OF PARTICLES
C  RESTMS(6000)= RELEASABLE KINETIC ENERGY OF PARTICLE
C  DECTIM(200) = LIFE TIME AT REST OF UNSTABLE PARTICLES
C
C --------------/CRPARPAR/-----------------------
C..CURRENT PARTICLE AND EQUIVALENCED QUANTITIES
C  CURPAR(0)   = PARTICLE TYPE
C  CURPAR(1)   = GAMMA,  LORENTZ FACTOR IN LAB
C  CURPAR(2)   = COSTHE, DIRECTION COSINE Z-DIRECTION
C  CURPAR(3)   = PHIX,   DIRECTION COSINE X-DIRECTION
C  CURPAR(4)   = PHIY,   DIRECTION COSINE Y-DIRECTION
C  CURPAR(5)   = H,      HEIGHT (TRUE HEIGHT)
C  CURPAR(6)   = T,      ACCUMULATED TIME IN SEC
C  CURPAR(7)   = X,      X-POSITION
C  CURPAR(8)   = Y,      Y-POSITION
C  CURPAR(9)   = CHI,    PENETRATED MATERIAL UNTIL DECAY OR REACTION
C                (G/CM**2)  CALCULATED IN BOX2
C  CURPAR(10)  = BETA,   V/C, CALCULATED IN BOX2
C  CURPAR(11)  = GCM,    GAMMA  IN CM, CALCULATED IN NUCINT
C  CURPAR(12)  = ECM,    ENERGY IN CM, CALCULATED IN NUCINT
#if __THIN__
C  CURPAR(13)  = WEIGHT, WEIGHT FOR THINNING
#endif
#if __CURVED__
C  CURPAR(14)  = HAPP,   APPARENT HEIGHT  IN CARTESIAN COORDINATE SYSTEM
C  CURPAR(15)  = COSTAP, APPARENT ZENITH ANGLE IN CART.COORDINATE SYSTEM
C  CURPAR(16)  = COSTEA, ANGLE PARTICLE TO MID DETECT AT CENTER EARTH
#endif
#if __INTTEST__
C  CURPAR(17)  = TRANSVERSE MOMENTUM
#endif
#if __EHISTORY__
C  CURPAR(17)  = PARTICLE ID          FOR MOTHER PARTICLE
C  CURPAR(18)  = GAMMA RSP. ENERGY    FOR MOTHER PARTICLE
C  CURPAR(19)  = COSTHE               FOR MOTHER PARTICLE
C  CURPAR(20)  = PHIX                 FOR MOTHER PARTICLE
C  CURPAR(21)  = PHIY                 FOR MOTHER PARTICLE
C  CURPAR(22)  = H                    FOR MOTHER PARTICLE
C  CURPAR(23)  = TIME                 FOR MOTHER PARTICLE
C  CURPAR(24)  = X                    FOR MOTHER PARTICLE
C  CURPAR(25)  = Y                    FOR MOTHER PARTICLE
C  CURPAR(26)  = WEIGHT FOR THINNING  FOR MOTHER PARTICLE
C  CURPAR(27)  = COMP. SECPAR(27)
C  ......
C  CURPAR(37)  = COMP. SECPAR(37)
#endif
#if __PARALLEL__
C  CURPAR(39)  = ECTFLG  FLAG FOR WHETHER OR NOT THIS PARTICLE WILL BE CUT
#endif
#if __MULTITHIN__
C  CURPAR(41-46) = WEIGHTS FOR THINNING MODES
#endif
C..SECONDARY PARTICLE
C  SECPAR(..)  = PARTICLE FIELD FOR SECONDARY PARTICLE (COMP. CURPAR)
C  SECPAR(9)   = GENERATION OF PARTICLE
C  SECPAR(10)  = LEVEL OF LAST INTERACTION
C  SECPAR(11)  = POLARIZATION DIRECTION: COS(THETA) FOR MUONS
C  SECPAR(12)  = POLARIZATION DIRECTION: PHI FOR MUONS
#if __THIN__
C  SECPAR(13)  = WEIGHT FOR THINNING
#endif
#if __CURVED__
C  SECPAR(14)  = APPARENT HEIGHT  IN CARTESIAN COORDINATE SYSTEM
C  SECPAR(15)  = APPARENT ZENITH ANGLE OF PARTICLE POSITION IN CART.COORDINATE SYSTEM
C  SECPAR(16)  = ANGLE PARTICLE TO MID DETECT AT CENTER EARTH
#endif
#if __INTTEST__
C  SECPAR(17)  = TRANSVERSE MOMENTUM
#endif
#if __PARALLEL__
C  SECPAR(18)  = SEED OF 6TH SEQUENCE FOR NEXT CUT PARTICLES
#endif
#if __EHISTORY__
C  SECPAR(17)  = PARTICLE ID          FOR MOTHER PARTICLE
C  SECPAR(18)  = GAMMA RSP. ENERGY    FOR MOTHER PARTICLE
C  SECPAR(19)  = COSTHE               FOR MOTHER PARTICLE
C  SECPAR(20)  = PHIX                 FOR MOTHER PARTICLE
C  SECPAR(21)  = PHIY                 FOR MOTHER PARTICLE
C  SECPAR(22)  = H                    FOR MOTHER PARTICLE
C  SECPAR(23)  = TIME                 FOR MOTHER PARTICLE
C  SECPAR(24)  = X                    FOR MOTHER PARTICLE
C  SECPAR(25)  = Y                    FOR MOTHER PARTICLE
C  SECPAR(26)  = WEIGHT FOR THINNING  FOR MOTHER PARTICLE
C  SECPAR(27)  = 
C  SECPAR(28)  = PARTICLE ID          FOR GRANDMOTHER PARTICLE
C  SECPAR(29)  = GAMMA RSP. ENERGY    FOR GRANDMOTHER PARTICLE
C  SECPAR(30)  = COSTHE               FOR GRANDMOTHER PARTICLE
C  SECPAR(31)  = PHIX                 FOR GRANDMOTHER PARTICLE
C  SECPAR(32)  = PHIY                 FOR GRANDMOTHER PARTICLE
C  SECPAR(33)  = H                    FOR GRANDMOTHER PARTICLE
C  SECPAR(34)  = TIME                 FOR GRANDMOTHE RPARTICLE
C  SECPAR(35)  = GEN                  FOR GRANDMOTHER PARTICLE
C  SECPAR(36)  = CHI PENETRATION BEFORE LAST INTERACTION (= 0 FOR EM-PARTICLE)
C  SECPAR(37)  = WEIGHT FOR THINNING  FOR GRANDMOTHER PARTICLE
C  SECPAR(38)  = 
#endif
#if __PARALLEL__
C  SECPAR(39)  = ECTFLG  FLAG FOR WHETHER OR NOT THIS PARTICLE WILL BE CUT
#endif
#if __MULTITHIN__
C  SECPAR(41-46) = WEIGHTS FOR THINNING MODES
#endif
C..PRIMARY PARTICLE
C  PRMPAR(..)  = PARTICLE FIELD FOR PRIMARY PARTICLE (COMP. CURPAR)
C..PARTICLE TO BE WRITTEN TO TAPE
C  OUTPAR(..)  = PARTICLE FIELD FOR OUTPUT PARTICLE (COMP. SECPAR)
#if __PARALLEL__
C..CUT PARTICLE
C  CUTPAR(..)  = PARTICLE FIELD FOR CUT PARTICLES (COMP. SECPAR)
C  CUTPAR(18)  = SEED OF 6TH SEQUENCE FOR NEXT CUT PARTICLES
#endif
#if __MULTITHIN__
C  CUTPAR(41-46) = WEIGHTS FOR THINNING MODES
#endif
C  C(.)        = PHYSICAL CONSTANSTS
C  C(1)        = EARTH'' RADIUS (CM)
C  C(2)        = MAX DISTANCE IN LOCAL COORDINATE SYSTEM AT SEA LEVEL
C  C(3)        = MAX DISTANCE IN LOCAL COORD. SYSTEM AT TOP OF ATMOSPH.
C  C(4)        = CONSTANT FOR MAX DIST IN LOCAL COORD. SYSTEM (SEE START)
C  C(6)        = (MASS OF MUON+/MASS OF KAON+)**2       (SEE START)
C  C(7)        = (MASS OF MUON+/MASS OF PION+)**2       (SEE START)
C  C(8)        = (PAMA(5)**2 + PAMA(2)**2)/(2*PAMA(5))  (SEE START)
C  C(9)        = MAX DISTANCE IN LOCAL COORDINATE SYSTEM (CHIMAX/RHO)
C  C(10)       = CUTOFF LORENTZ FACTOR FOR RECOIL NUCLEON
C  C(11)       = CUTOFF LORENTZ FACTOR FOR RECOIL PION
C  C(12)       = PEAK POSITION FOR PT DISTRIBUTION (IN PTRANS)
C  C(15)       = 1. + (MASS OF ELECTRON/MASS OF MUON)**2 (SEE START)
C  C(16)       = 2. * MASS OF ELECTRON / MASS OF MUON    (SEE START)
C  C(17)       = 1. + (MASS OF ELECTRON/MASS OF TAU)**2  (SEE START)
C  C(18)       = 2. * MASS OF ELECTRON / MASS OF TAU     (SEE START)
C  C(21)       = COULOMB SCATTERING LENGTH (G/CM**2)
C  C(22)       = CONSTANT FOR SPECIFIC IONISATION LOSS IN AIR
C  C(23)       = CONSTANT FOR SPECIFIC IONISATION LOSS IN AIR
C  C(24)       = (SPECIFIC IONIS. LOSS IN AIR FOR MIN.ION. PARTICLES)
C  C(25)       = SPEED OF LIGHT (CM/SEC)
C  C(26)       = CUT IN     THETA  FOR ANGLES TO BE ADDED
C  C(27)       = CUT IN COS(THETA) FOR ANGLES TO BE ADDED
C  C(28)       = CUT IN     THETA  FOR ALL PARTICLES, CUTS UPWARD GOING
C  C(29)       = CUT IN COS(THETA) FOR ALL PARTICLES, CUTS UPWARD GOING
C  C(30)       = PARAMETER FOR COULOMB SCATTERING OF MUONS
C  C(34)       = CUTOFF FOR PT IN SUBROUT. PTRANS
C  C(45)       = 2 * PAMA(14) * PAMA(8)             INTERNALLY COMPUTED
C  C(46)       = PAMA(14)**2 + PAMA(8)**2           INTERNALLY COMPUTED
C  C(48)       = (PAMA(8)**2 + PAMA(5)**2) /(2.D0*PAMA(8)*PAMA(5))
C  C(49)       = SQRT(C(48)**2 - 1.D0) / C(48)      INTERNALLY COMPUTED
C  C(50)       = FINE STRUCTURE CONSTANT
C  E00         = ENERGY OF PRIMARY
C  E00PN       = ENERGY OF PRIMARY PER NUCLEON
C  PTOT0       = TOTAL MOMENTUM OF PRIMARY
C  PTOT0N      = TOTAL MOMENTUM OF PRIMARY PER NUCLEON
C  THICKH      = THICK(H) MASS OVERBURDEN OF ACTUAL PARTICLE ALTITUDE
C  ITYPE       = CURPAR(0)  PARTICLE TYPES ACCORDING TO GEANT
C                IN ADDITION : A*100+Z=HEAVY NUCLEI (FOR PRIMARIES ONLY)
C  LEVL        = LEVEL # OF PARTICLE WRITTEN TO TAPE
#if __ICECUBE1__
C  energy_interesting = ENERGY ABOVE WHICH PARTICLES ARE INTERESTING
C  n_interesting      = NUMBER OF INTERESTING PARTICLES
C  n_interesting_nu   = NUMBER OF INTERESTING NEUTRINOS
C  still_interesting  = FLAG INDICATING IF AN EVENT IS STILL INTERESTING
#endif
C
#if __NUPRIM__
C --------------/CRPARTFI/-----------------------
C  JSTCKFI     = STACK FOR PRIMARY HERWIG PRODUCT PARTICLES
C
#endif
C --------------/CRPATHCM/------------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRPHOTIN/------------------------
C  (SEE EGS4 MANUAL)
C
C --------------/CRPION/--------------------------
C  PI0MSQ      = MASS OF PI(0) SQUARED (EGS4)
C  PITHR       = THRESHOLD ENERGY FOR PHOTONUCLEAR INTERACT. (EGS4)
C  PICMAS      = MASS OF CHARGED PION (EGS4)
C  PI0MAS      = MASS OF PI(0) (EGS4)
C  AMASK0      = MASS OF NEUTRAL KAON (EGS4)
C  AMASKC      = MASS OF CHARGED KAON (EGS4)
C  AMASPR      = MASS OF PROTON (EGS4)
C  AMASNT      = MASS OF NEUTRON (EGS4)
C
#if __PLOTSH2__
C --------------/CRPLOTSH2/----------------------
C  PLX1        = LOWER VALUE OF X AXIS RANGE FOR TRACK PROJECTION MAP
C  PLX2        = UPPER VALUE OF X AXIS RANGE FOR TRACK PROJECTION MAP
C  PLY1        = LOWER VALUE OF Y AXIS RANGE FOR TRACK PROJECTION MAP
C  PLY2        = UPPER VALUE OF Y AXIS RANGE FOR TRACK PROJECTION MAP
C  PLZ1        = LOWER VALUE OF Z AXIS RANGE FOR TRACK PROJECTION MAP
C  PLZ2        = UPPER VALUE OF Z AXIS RANGE FOR TRACK PROJECTION MAP
C  PLCUT       = ENERGY CUTS FOR PLOTTING PARTICLE TRACKS (SEE 'ECUTS')
C  PLTCUT      = UPPER TIME LIMIT FOR PARTICLE TRACKS
C  XCONST      = NUMBER OF PIXELS PER CM IN X AXIS (FOR PLOTTING)
C  YCONST      = NUMBER OF PIXELS PER CM IN Y AXIS (FOR PLOTTING)
C  ZCONST      = NUMBER OF PIXELS PER CM IN Z AXIS (FOR PLOTTING)
C  PLMAPXY     = X-Y-PROJECTION MAP OF DIMENSION (IXRES TIMES IYRES)
C  PLMAPXZ     = X-Z-PROJECTION MAP OF DIMENSION (IXRES TIMES IZRES)
C  PLMAPYZ     = Y-Z-PROJECTION MAP OF DIMENSION (IYRES TIMES IZRES)
C  TRID        = ID OF PARTICLE CURRENTLY TRACKED
C  TRE         = ENERGY OF PARTICLE CURRENTLY TRACKED
C  TRX1        = X COORDINATE OF STARTING POINT OF PARTICLE TRACK
C  TRY1        = Y COORDINATE OF STARTING POINT OF PARTICLE TRACK
C  TRZ1        = Z COORDINATE OF STARTING POINT OF PARTICLE TRACK
C  TRT1        = TIME OF STARTING POINT OF PARTICLE TRACK
C  TRX2        = X COORDINATE OF END POINT OF PARTICLE TRACK
C  TRY2        = Y COORDINATE OF END POINT OF PARTICLE TRACK
C  TRZ2        = Z COORDINATE OF END POINT OF PARTICLE TRACK
C  TRT2        = TIME OF ENDPOINT OF PARTICLE TRACK
C  FBOXCUT     = FLAG DETERMINING DRAWING OF TRACKS ONLY INSIDE 3D-BOX
C  IXRES       = RESOLUTION OF PROJECTION MAPS IN X DIRECTION
C  IYRES       = RESOLUTION OF PROJECTION MAPS IN Y DIRECTION
C  IZRES       = RESOLUTION OF PROJECTION MAPS IN Z DIRECTION
C
#endif
C --------------/CRPOLAR/------------------------
C  POLART      = COS(THETA) ; POLARIZATION DIRECTION OF MUON
C  POLARF      = PHI        ; POLARIZATION DIRECTION OF MUON
C
C --------------/CRPRIMSP/-----------------------
C  PSLOPE      = SLOPE OF PRIMARY DIFFERENTIAL ENERGY SPECTRUM
C                IF PRIMARY ENERGY IS TO BE COMPUTED FROM A SPECTRUM
C  LLIMIT      = LOWER LIMIT OF ENERGY SECTION FOR PRIMARY (GEV)
C  ULIMIT      = UPPER LIMIT OF ENERGY SECTION FOR PRIMARY (GEV)
C  LL          = USED FOR PRIMARY ENERGY SELECTION
C  UL          = USED FOR PRIMARY ENERGY SELECTION
C  SLEX        = EXPONENT OF SLOPE OF PRIMARY SPECTRUM
C  ISPEC       = 0 FOR FIXED ENERGY   = 1 FOR ENERGY SPECTRUM
C
#if __CHARM__ || __TAULEP__ || __SIBYLL__
C --------------/CRPYTLIN/-----------------------
C  IPTABL(.)   = CONVERSION TABLE CORSIKA CODE TO PYTHIA CODE
C  IFLGPYE     = ERROR FLAG FOR PYTHIA ERROR OUTPUT (1=0N, 0=OFF)
C  IFLGPYW     = WARNING FLAG FOR PYTHIA WARNING OUTPUT (1=0N, 0=OFF)
C
#endif
#if __QGSJET__
C --------------/CRQGSC/-------------------------
C  LEVLDQ      = LEVEL OF DEBUG OUTPUT IN CASE OF DEBUGGIUNG
C  IQGSVER     = QGSJET VERSION NUMBER * 10
C  FQGS        = FLAG TO ACTIVATE QGSJET INTERACTION ROUTINES
C  FQGSSG      = FLAG TO ACTIVATE QGSJET CROSS-SECTIONS
C
C --------------/CRQGSDEB/-----------------------
C  E000        = ENERGY/NUCLEON OF PROJECTILE BEFORE COLLISION
C  IRAND(3)    = RANDOM GENERATOR STATUS AT BEGIN OF QGSJET INTERACTION
C  ICPP        = PROJECTILE TYPE
C  IAPP        = NUMBER OF NUCLEONS IN PROJECTILE NUCLEUS
C  IATT        = NUMBER OF NUCLEONS IN TARGET NUCLEUS
C
C --------------/CRQGSLIN/-----------------------
C  ICTABL(..)  = TABLE TO CONVERT PARTICLE TYPE FROM CORSIKA TO QGSJET
C  IQTABL(..)  = TABLE TO CONVERT PARTICLE TYPE FROM QGSJET TO CORSIKA
C
C --------------/CRQGSSGM/-----------------------
C  QFRACN(..)  = TABULATED VALUES OF HADRON 14N CROSS-SECTIONS (QGSJET)
C  QFRANO(..)  = TABUL. VALUES OF HADRON 14N+16O CROSS-SECTIONS (QGSJET)
C  SIGQAIR(..) = TABULATED VALUES OF HADRON AIR CROSS-SECTIONS (QGSJET)
C  SIGQHN(..)  = TABULATED VALUES OF HADR. NUCL.CROSS-SECTIONS (QGSJET)
C
#endif
C --------------/CRRANDPA/-----------------------
C  RD(3000)    = ARRAY (DOUBLE PRECISION) FOR RANDOM NUMBERS
C  FAC         = VARIABLE OF SUBROUT. RANNOR
C  U1          = VARIABLE OF SUBROUT. RANNOR
C  U2          = VARIABLE OF SUBROUT. RANNOR
C  NSEQ        = # OF RANDOM GENERATOR SEQUENCE
C  ISEED(.,.)  = RANDOM GENERATOR SEED
C  KNOR        = FLAG TO STEER GENERATION OF NORMAL DISTRIBUTED RANDOMS
C
C --------------/CRRANMA3/-----------------------
C  KSEQ        = PARAMETER DEFINING MAX. NUMBER OF INDEPENDENT SEQUENCES
C  CD          = STARTING NUMBER FOR RANDOM GENERATOR
C  CINT        = STARTING NUMBER FOR RANDOM GENERATOR
C  CM          = STARTING NUMBER FOR RANDOM GENERATOR
C  TWOM24      = 2**-24 (MANTISSA SINGLE PRECISION)
C  TWOM48      = 2**-48 (MANTISSA DOUBLE PRECISION)
C  MODCNS      = MODULUS (NOTOT * MODCNS = NTOT2) FOR RANDOM GENERATOR
C
C --------------/CRRANMA4/-----------------------
C  C(.)        = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  U(.)        = ARRAY(97,KSEQ) FOR RANDOM GENERATOR
C  IJKL(.)     = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  I97(.)      = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  J97(.)      = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  NTOT(.)     = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  NTOT2(.)    = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  JSEQ        = ACTUAL SEQUENCE NUMBER
C  UNI         = FINAL RANDOM NUMBER
C
C --------------/CRRATIOS/-----------------------
C  RPI0R       = RATIO # PI(0) / # ALL NEUTRAL PARTICLES
C  RPIER       = RATIO # PI(0)+ETA / # ALL NEUTRAL PARTICLES
C  RPEKR       = RATIO # PI(0)+ETA+KA0/ # ALL NEUTRAL PARTICLES
C  RPEKNR      = RATIO # PI(0)+ETA+KA0+NEUTR/ # ALL NEUTRAL PARTICLES
C  PPICH       = RATIO # PI+(+-) / # ALL CHARGED PARTICLES
C  PPINCH      = RATIO # PI+(+-)+PROTON / # ALL CHARGED PARTICLES
C  PPNKCH      = RATIO # PI+(+-)+PROTON+K(+-) / # ALL CHARGED PARTICLES
C  ISEL        = INDICATOR FOR LOW MULTIPLICITY OF SECONDARY PARTICLES
C  NEUTOT      = TOTAL # OF NEUTRAL PARTICLES  IN HDPM
C  NTOTEM      = TOTAL #OF SECONDARY PARTICLES IN HDPM
C
C --------------/CRRECORD/-----------------------
C  IRECOR      = # WORDS WRITTEN ON PARTICLE TAPE RECORDS
C
C --------------/CRREJECT/-----------------------
C  AVNREJ(..)  = AVERAGE NUMBER OF REJECTED ELECTRONS IN EGS
C  ALTMIN(..)  = MINIMUM ALTITUDE FOR REJECTION OF ELECTRONS AT OBS.LEVL
C  ANEXP(..)   = AVERAGE NUMBER OF ELECTRONS TO BE EXPECTED AT OBS.LEVEL
C  THICKA(..)  = THICKNESS OF AIR LAYER
C  THICKD(..)  = THICKNESS OF AIR LAYER BELOW OBSERVATION LEVEL
C  CUTLN       = LOGARITHM OF CUTTING ENERGY FOR REJECT IN EGS
C  EONCUT      = CUTTING ENERGY (IN MEV) FOR REJECT IN EGS
#if __THIN__
C  EFRCTHN     = THINNING BELOW ENERGY FRACTION OF PRIMARY(=EPSILON)
C  ETHINN      = THINNING BELOW ENERGY ETHINN  IN MEV FOR EM-PARTICLES
C  ETHINNG     = THINNING BELOW ENERGY ETHINNG IN GEV FOR HADR.PARTICLES
C  THINRAT     = ENERGY RATIO (EPSILON_EM)/(EPSILON)
C  THINRATH    = ENERGY RATIO (EPSILON_HADR)/(EPSILON)
C  WEITRAT     = WEIGHT LIMIT RATIO (WMAX_EM)/(WMAX)
C  WEITRATH    = WEIGHT LIMIT RATIO (WMAX_HADR)/(WMAX)
C  EEFRTHN     = THINNING EM ENERGY FRACTION OF PRIMARY(=EPSILON_EM)
#endif
C  FNPRIM      = FLAG INDICATING THE PRIMARY PARTICLE IN EGS
C
C --------------/CRRESON/------------------------
C  RDRES(2)    = RANDOM NUMBERS FOR RESONANCE DECAYS
C  RESRAN(.)   = RANDOM NUMBERS FOR RESONANCE DECAYS
C  IRESPAR     = POINTER FOR ARRAY RESRAN
C
C --------------/CRREST/-------------------------
C  CONTNE(3)   = FRACTION OF NEUTRONS IN TARGET LIT
C  TAR         = NUMBER OF NUCLEONS IN TARGET
C  LIT         = INDEX FOR INTERACTING TARGET (1=N, 2=O, 3=AR)
C
#if __CERENKOV__&&__CURVED__
C --------------/CRRTABLE/-----------------------
C  MHEIGH      = PARAMETER NUMBER OF VALUES IN HEIGHT
C  NTHETA      = PARAMETER NUMBER OF VALUES IN THETA
C
C  DISTEF(.,.) = CHANGE OF CORE DISTANCE FOR CHERENKOV PHOTON
C  TOF(.,.)    = TIME OF FLIGHT OF CHERENKOV PHOTON
C
#endif
C --------------/CRRUNPAR/-----------------------
C  FIXHEI      = HEIGHT OF FIRST INTERACTION IF TAKEN FIXED (CM)
C  THICK0      = HEIGHT OF START OF PRIMARY (IN G/CM**2)
C  HILOECM     = ENERGY THRESHOLD FOR HIGH ENERGY MODEL IN CM
C  HILOELB     = ENERGY THRESHOLD FOR HIGH ENERGY MODEL IN LAB
C  SIG1I       = CROSS-SECTION FOR FIRST INTERACTION
C  TARG1I      = TARGET OF FIRST INTERACTION
C  STEPFC      = STEP LENGTH FACTOR FOR ELECTRON MULTIPLE SCATTERING
C  RCUT        = RADIUS WITHIN WHICH PARTICLES ARE DISCARDED FROM OUTPUT
C  RCUT2       = RCUT**2
#if __CHARM__ || __SIBYLL__
C  SIGMAQ      = CROSS SECTION FOR CHARMED AND BOTTOM PARTICLES
#endif
#if __CURVED__&&__UPWARD__
C  HIMPACT(2)  = RANGE OF MINIMAL HEIGHT (IMPACT) FOR SKIMMING PRIMARY
C  HIMPCT      = ACTUAL IMPACT PARAMTER FOR SKIMMING PRIMARY
#endif
C  NRRUN       = # OF RUN
C  NSHOW       = # OF SHOWERS TO GENERATE
C  MPATAP      = LUN OF DATASET FOR PARTICLE OUTPUT
C  MONIIN      = LUN OF CARD READER
C  MONIOU      = LUN OF LINE PRINTER
C  MDEBUG      = LUN OF DEBUG OUTPUT
C  NUCNUC      = LUN OF CROSS-SECTION FILE
C  MTABOUT     = LUN OF TABLE OUTPUT FOR CHARGED PARTICLES
C  MLONGOUT    = LUN OF LONGITUDINAL TABLE OUTPUT
#if __PARALLEL__
C  MPACUT      = LUN OF ECUT PARTICLES OUTPUT FILE
C  MPAINP      = LUN OF STEERING FILE FOR INPUT
C  MPAJOB      = LUN OF JOB LIST FILE
#endif
#if __CHARM__ 
C  PROPMOD     = FLAG FOR USE OF STANDARD INTERACTION(0) OR HEPARIN(1)
#endif
#if __URQMD__
C  IUDEBUG     = ACTUAL DEBUG LEVEL FOR URQMD
C  IUDEBG0     = PRESET DEBUG LEVEL FOR URQMD
#endif
#if __CERENKOV__
C  MCETAP      = LUN OF DATASET FOR CHERENKOV PHOTONS OUTPUT
C  NOCERB      = COUNTER FOR CHERENKOV BUNCHES WRITTEN TO TAPE
#if __CEFFIC__
C  MCERABS     = LUN FOR READ IN OF ATMOSPHERIC ABSORPTION OF CHERENKOV
C  MCERQEF     = LUN FOR READ IN OF QUANTUM EFFICIENCY OF CHERENKOV
C  MCERMIR     = LUN FOR READ IN OF MIRROR REFLECTIVITY OF CHERENKOV
#endif
#endif
#if __INTTEST__
C  LUNPLT      = LUN OF HBOOK HISTOGRAM OUTPUT
C  ISHWW       = INDEX OF SHOWER COUNTER FOR INTTEST
#endif
C  LSTCK       = LUN OF PARTICLE PARAMETERS INPUT/OUTPUT FILE
#if !__STACKIN__ && !__CONEX__
C  LSTCK1      = LUN OF FIRST INT PARTICLE PARAMETERS HEADER
C  LSTCK2      = LUN OF FIRST INT PARTICLE PARAMETERS LIST
#endif
c#if __ANAHIST__||__AUGERHIST__||__MUONHIST__
cC  LUNHST      = LUN OF HBOOK HISTOGRAM OUTPUT
c#endif
C  ISHOWNO     = # OF ACTUAL SHOWER
C  ISHW        = INDEX OF SHOWER LOOP
C  NOPART      = COUNTER FOR PARTICLES WRITTEN TO TAPE
C  NRECS       = # OF BIG   BLOCKS PUT OUT (FOR TP)
C  NBLKS       = # OF SMALL BLOCKS PUT OUT (FOR TP)
C  MAXPRT      = MAXIMUM NUMBER OF EVENTS TO BE PRINTED
C  NDEBDL      = NUMBER OF MAPPED PARTICLE THAT ACTIVATES DELAYED DEBUG
C  N1STTR      = NUMBER OF FIXED FIRST TARGET 0=RANDOM, 1=N, 2=O, 3=AR
C  MDBASE      = LUN OF DATABASE FILE
#if __PLOTSH__
C  NPLEM       = NUMBER OF TRACKS OF EM PARTICLES FOR PLOT
C  NPLMU       = NUMBER OF TRACKS OF MUONS        FOR PLOT
C  NPLHAD      = NUMBER OF TRACKS OF HADRONS      FOR PLOT
#endif
C  DEBDEL      = FLAG TO STEER DELAYED ACTIVATION OF DEBUG
C  DEBUG       = FLAG TO STEER PRINTOUT FOR DEBUGGING
C  FDECAY      = FLAG INDICATING PARTICLE UNDERGOES DECAY
C  FEGS        = FLAG FOR USE OF EGS4
#if __EHISTORY__
C  FEMADD      = FLAG TO INDICATE ADDITIONAL EM OUTPUT ON MPATAP
C  FNUADD      = FLAG TO INDICATE ADDITIONAL NEUTRINO OUTPUT ON MPATAP
#endif
#if __CURVED__
C  FFLATOUT    = FLAG INDICATING PARTICLE OUTPUT TYPE (FLAT OR SPHERE)
#endif
C  FIRSTI      = FLAG INDICATING FIRST INTERACTION IN HDPM
C  FIXINC      = FLAG TO KEEP ANGLES OF INCIDENCE FIXED
C  FIXTAR      = FLAG TO INDICATE FIXED TARGET FOR FIRST INTERACTION
C  FIX1I       = FLAG TO KEEP HEIGHT OF FIRST INTERACTION FIXED
C  FMUADD      = FLAG TO INDICATE ADDITIONAL MUON OUTPUT ON MPATAP
C  FNKG        = FLAG FOR USE OF NKG FORMULAS
C  FPRINT      = LOGICAL VARIABLE TO STEER PRINTING
C  FDBASE      = FLAG FOR WRITING SUMMARY FILE FOR DATABASE
C  FPAROUT     = FLAG INDICATING PARTICLE OUTPUT
C  FTABOUT     = FLAG INDICATING TABLE OUTPUT
C  FLONGOUT    = FLAG INDICATING LONGITUDINAL OUTPUT
#if !__STACKIN__ && !__CONEX__
C  FOUTFILE    = FLAG INDICATING FIRST INTERACTION STACK OUTPUT
C  IFINAM      = # PART. PRODUCED IN FIRST INTERACTION
#endif
C  GHEISH      = FLAG TO ACTIVATE GHEISHA ROUTINES
C  GHESIG      = FLAG TO INDICATE THAT GHEISHA CROSS-SECTION IS USED
C  GHEISDB     = FLAG TO ACTIVATE GHEISHA DEBUG OUTPUT
C  USELOW      = FLAG INDICATING LOW ENERGY HADRONIC INTERACTION
C  TMARGIN     = FLAG INDICATING ARR. TIME ZERO AT ENTRANCE INTO ATMOSPHERE
#if __PARALLEL__
C  ECTCUT      = THRESHOLD ENERGY FOR PARTICLES IN 2ND STACK
C  ECTMAX      = MAXIMUM ENERGY FOR A COMPLETE SUBSHOWER
C  MPIID       = JOB NUMBER
C  FECTOUT     = FLAG INDICATING THE PARTICLE TO BE WRITTEN OUT
C  FECTEGS     = FLAG INDICATING THE PARTICLE TO BE WRITTEN OUT IN EGS4
C  FPRIM       = PRIMARY INTERACTION (T) OR NOT (F)
C  I1CUTPAR    = FIRST INDICE OF PARTICULE TO READ FROM CFILINP
C  I2CUTPAR    = LAST INDICE OF PARTICULE TO READ FROM CFILINP
C  CFILINP     = CUTFILE NAME TO READ TO FILL 2ND STACK
C  CFILOUT     = SCREEN OUTFILE FILE NAME
#endif
#if __CURVED__&&__UPWARD__
C  FIMPCT      = FLAG INDICATING SKIMMING PRIMARY (IMPACT)
#endif
#if __FLUKA__
C  FFLUDB      = FLAG INDICATING DEBUG OF FLUKA
C  FFLUKA      = FLAG INDICATING USE OF FLUKA
C  FFLUSIG     = FLAG INDICATING THAT FLUKA SIGMA IS AVAILABLE
#elif __URQMD__
C  FURQMD      = FLAG INDICATING USE OF URQMD
C  FURQSG      = FLAG INDICATING THAT URQMD SIGMA IS AVAILABLE
#endif
#if __COMPACT__
C  COMOUT      = FLAG INDICATING COMPACT OUTPUT
#endif
#if __PLOTSH__
C  PLOTSH      = FLAG TO ENABLE/DISABLE PRODUCTION OF FILES FOR PLOTS
#endif
#if __ICECUBE2__
C  pipe_output = FLAG INDICATING THAT OUTPUT SHOULD BE WRITTEN TO A FIFO
C  gzip_output = FLAG INDICATING THAT OUTPUT SHOULD BE GZIPPED
#endif
C
C --------------/CRRUNPAC/-----------------------
C  DSN         = DATA SET NAME OF PARTICLE OUTPUT
C  DSNTAB      = DATA SET NAME OF TABLE OUTPUT
C  DSNLONG     = DATA SET NAME OF LONGITUDINAL OUTPUT
C  HOST        = NAME OF HOST COMPUTER IN USE
C  USER        = NAME OF USER
C  DATDIR      = DIRECTORY OF INPUT DATA TABLES
#if __PARALLEL__
C  DSNCUT      = DATA SET NAME FOR CUTTED PARTICLE OUTPUT
C  DSNINP      = DATA SET NAME FOR STEERING FILE
C  DSNJOB      = DATA SET NAME FOR JOB LIST FILE
#endif
#if __UNIX__
C  LSTDSN      = DATA SET NAME OF LIST OUTPUT
#endif
#if __FLUKA__
C  DSNFLOUT    = DATA SET NAME OF FLUKA LIST OUTPUT
C  DSNFLERR    = DATA SET NAME OF FLUKA ERROR OUTPUT
#endif
#if __ANAHIST__||__AUGERHIST__||__MUONHIST__
C  DSNHST      = DATA SET NAME OF HISTOGRAM OUTPUT
#endif
#if __STACKIN__
C  FILINP      = DATA SET NAME OF STACKIN PARTICLE FILE INPUT
#elif !__CONEX__
C  FILOUT      = DATA SET NAME OF STACK OF FIRST INTERACTION OUTOUT FILE
#endif
#if __PLOTSH__
C  CPLOT       = DATA SET NAME OF OUTPUT FILES FOR PLOTSH
#endif
#if __PLOTSH2__
C  CPLOT2      = DATA SET NAME OF OUTPUT FILES FOR PLOTSH2
#endif
#if __INTTEST__
C  HISTDS(.)   = DATA SET NAME OF HISTOGRAM OUTPUT OF INTTEST VERSION
#endif
C
#if __ANAHIST__ || __CONEX__
C --------------/CRSFRONT/-----------------------
C  HEIGHPS     = HEIGHT OF FIRST INTERACTION
C  XOFFS       = OFFSET FOR OBSERVATIN LEVEL
C  YOFFS       = OFFSET FOR OBSERVATIN LEVEL
C  HEITH       = (MASS OVERLAY OF FIRST INTERACTION)
C  RMAXS       = MAX RADIUS FOR RADIAL THINNING (M)
C  TCEN        = ARRIVAL TIME OF SHOWER CORE AT OBSERVATION LEVEL
C  PROFAK1     = FACTOR FOR PROJECTION INTO PLANE PERPEND. TO SHOWER AXIS
C  PROFAK2     = FACTOR FOR PROJECTION INTO PLANE PERPEND. TO SHOWER AXIS
C  PROFAK3     = FACTOR FOR PROJECTION INTO PLANE PERPEND. TO SHOWER AXIS
C  CCLA        = LETTERING OF HISTOGRAM
C
#endif
#if __SIBYLL__
C --------------/CRSIBDBG/-----------------------
C  ISIBDB      = ACTUAL      DEBUG LEVEL FOR SIBYLL
C  ISDEBUG     = PRESELECTED DEBUG LEVEL FOR SIBYLL
C
C --------------/CRSIBLIN/-----------------------
C  ICTABL(.)   = TABLE TO CONVERT PARTICLE TYPE FROM CORSIKA TO SIBYLL
C  ISTABL(.)   = TABLE TO CONVERT PARTICLE TYPE FROM SIBYLL TO CORSIKA
C
C --------------/CRSIBYLC/-----------------------
C  FSIBYL      = FLAG TO ACTIVATE SIBYLL ROUTINES
C  FSIBSG      = FLAG TO ACTIVATE SIBYLL CROSS-SECTIONS
C  FSIBCH      = FLAG TO ACTIVATE CHARM PRODUCTION IN SIBYLL				
C
#endif
C --------------/CRSIGM/-------------------------
C  SIGMA       = INELASTIC CROSS-SECTION FOR HADRON NUCLEON COLLISION
C  SIGANN      = NUCLEON ANNIHILATION CROSS-SECTION
C  SIGAIR      = INELASTIC CROSS-SECTION IN AIR
C  FRACTN      = NITROGEN FACTION OF INELASTIC AIR CROSS-SECTION
C  FRCTNO      = NITROGEN+OXYGEN FACTION OF INELASTIC AIR CROSS-SECTION
C  SIGAIRS     = INELASTIC CROSS-SECTION IN AIR FOR SIBYLL PRINTOUT
C
C --------------/CRSIGMU/-------------------------
C  BREMSTAB    = TABLE OF MUON/TAU BREMSSTRAHLUNG CROSS-SECTIONS
C  NUCTAB      = TABLE OF MUON/TAU NUCLEAR INTERACTION CROSS-SECTIONS
C  PAIRTAB     = TABLE OF MUON/TAU PAIR PRODUCTION CROSS-SECTIONS
C  DEDXMU      = TABLE OF MUON/TAU ENEGY LOSS IN DIFFERENT MATERIALS
C  DEDXM       = TABLE OF MUON/TAU ENEGY LOSS IN AIR
C
C --------------/CRSTACKE/-----------------------
C  E(NP)       = ENERGY OF PARTICLE ON EGS STACK
C  TIM(NP)     = TIME OF PARTICLE ON EGS STACK
C  U(NP)       = X DIRECTION COSINE OF PARTICLE ON EGS STACK
C  V(NP)       = Y DIRECTION COSINE OF PARTICLE ON EGS STACK
C  W(NP)       = Z DIRECTION COSINE OF PARTICLE ON EGS STACK
C  X(NP)       = X COORDINATE OF PARTICLE ON EGS STACK
C  Y(NP)       = Y COORDINATE OF PARTICLE ON EGS STACK
C  Z(NP)       = Z COORDINATE OF PARTICLE ON EGS STACK
C  DNEAR       = DISTANCE TO NEXT LAYER BOUNDARY OF PART. ON EGS STACK
#if __THIN__
C  WT(NP)      = WEIGHT IN CASE OF THINNING (EGS)
#endif
#if __CURVED__
C  ZAP(NP)     = APPARENT HEIGHT IN CARTESIAN COORDINATE SYSTEM (EGS)
C  WAP(NP)     = APPARENT ZENITH ANGLE IN CART.COORDINATE SYSTEM (EGS)
C  WA(NP)      = ANGLE PARTICLE TO MID DETECT AT CENTER EARTH (EGS)
#if __COASTUSERLIB__
C  XXXX(NP)    = X COORDINATE IN DETECTOR SYSTEM (CURVED)
C  YYYY(NP)    = Y COORDINATE IN DETECTOR SYSTEM (CURVED)
#endif
#endif
#if __SLANT__
C  TSLAN(NP)   = SLANT DEPTH OF PARTICLE ON EGS STACK
#endif
#if __MULTITHIN__
C  WTM(6,NP)   = WEIGHTS FOR MULTITHIN
#endif
C  IQ(NP)      = PARTICLE IDENTIFIER (EGS)
C  IGEN(NP)    = GENERATION COUNTER OF PARTICLE ON EGS STACK
C  IR(NP)      = ACTUAL ATMOSPHERIC LAYER OF PARTICLE ON EGS STACK
C  IOBS(NP)    = # OF NEXT OBSERVATION LEVEL FOR PARTICLE ON EGS STACK
C  LPCTE(NP)   = INDEX OF LONGITUDINAL LAYER FOR PARTICLE ON EGS STACK
C  NP          = STACK POINTER OF PARTICLE ON EGS STACK
C
C --------------/CRSTACKF/-----------------------
C  MAXSTK      = PARAMETER FOR MAXIMAL STACK SIZE
#if __MULTITHIN__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 25000 PARTICLES A 47 WORDS
C  STACKJ(MAXSTK) = 2ND PARTICLE STACK FOR 2 * 25000 PARTICLES A 47 WORDS
#else
#if __PARALLEL__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 25000 PARTICLES A 40 WORDS
C  STACKJ(MAXSTK) = 2ND PARTICLE STACK FOR 2 * 25000 PARTICLES A 40 WORDS
#else
#if __INTEST__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 256 PARTICLES A 18 WORDS
#else
#if __EHISTORY__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 256 PARTICLES A 39 WORDS
#else
#if __CURVED__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 256 PARTICLES A 17 WORDS
#else
#if __THIN__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 312 PARTICLES A 14 WORDS
#else
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 340 PARTICLES A 13 WORDS
#endif
#endif
#endif
#endif
#endif
#endif
C  MSTACKP     = STACK POINTER
C  MEXST       = LUN OF SCRATCH DSN FOR EXTERNAL STACK
C  NSHIFT      = # OF STACK SHIFTS
C  NOUREC      = # OF STACK OUTPUT RECORDS
C  NOURECMAX   = MAX # OF STACK OUTPUT RECORDS
C  ICOUNT      = POSITION OF PARTICLE WITHIN STACK
C  NTO         = # OF PARTICLES WRITTEN TO STACK
C  NFROM       = # OF PARTICLES READ FROM STACK
#if __PARALLEL__
C  MSTACKPJ    = 2ND STACK POINTER
C  MEXSTJ      = LUN OF SCRATCH DSN FOR EXTERNAL STACK
C  NSHIFTJ     = # OF 2ND STACK SHIFTS
C  NOURECJ     = # OF OUTPUT RECORDS in 2ND STACK
C  JCOUNT      = POSITION OF PARTICLE WITHIN 2ND STACK
C  NTOJ        = # OF PARTICLES WRITTEN TO 2ND STACK
C  NFROMJ      = # OF PARTICLES READ FROM 2ND STACK
C  NTOC        = # OF PARTICLES WRITTEN TO CUTFILE
#endif
C
C --------------/CRSTATI/-------------------------
C  SABIN(40)   = LOW  EDGE OF KIN. ENERGY FOR INTERACTION-ENERGY TABLE
C  SBBIN(40)   = HIGH EDGE OF KIN. ENERGY FOR INTERACTION-ENERGY TABLE
C  INBIN(40)   = COUNTER FOR NUCLEON TABLE FOR SHOWER
C  IPBIN(40)   = COUNTER FOR PION TABLE FOR SHOWER
C  IKBIN(40)   = COUNTER FOR KAON TABLE FOR SHOWER
C  IHBIN(40)   = COUNTER FOR STRANGE BARYON TABLE FOR SHOWER
C
C --------------/CRSTRBAR/-----------------------
C  CSTRBA(5)   = BRANCHING RATIO FOR DECAY OF LAMDA
C  CSTRBA(6)   = BRANCHING RATIO FOR DECAY OF SIGMA(+)
C  CSTRBA(10)  = BRANCHING RATIO FOR DECAY OF OMEGA(-)
C  CSTRBA(11)  = BRANCHING RATIO FOR DECAY OF OMEGA(-)
C
C --------------/CRTABLES/-----------------------
C  IEBIN       = PARAMETER # OF ENERGY BINS
C  ITBIN       = PARAMETER # OF ARRIVAL TIME BINS
C  IDBIN       = PARAMETER # OF DISTANCE BINS
C  G_ARRAY     = ARRAY FOR GAMMAS IN BINS IN ENERGY, TIME, CORE DISTANCE
C  E_ARRAY     = ARRAY FOR ELECTRONS IN BINS IN ENERGY, TIME, CORE DIST.
C  M_ARRAY     = ARRAY FOR MUONS IN BINS IN ENERGY, TIME, CORE DISTANCE
C  EBOFF       = ENERGY       OFFSET         FOR BINNING
C  EBFAC       = ENERGY       SCALING FACTOR FOR BINNING
C  TBOFF       = ARRIVAL TIME OFFSET         FOR BINNING
C  TBFAC       = ARRIVAL TIME SCALING FACTOR FOR BINNING
C  DBOFF       = DISTSANCE    OFFSET         FOR BINNING
C  DBFAC       = DISTSANCE    SCALING FACTOR FOR BINNING
C  EBMIN       = PARAMETER: MINIMUM ENERGY FOR ENERGY TABLE
C  EBMAX       = PARAMETER: MAXIMUM ENERGY FOR ENERGY TABLE
C  TBMIN       = PARAMETER: MINIMUM ARRIVAL TIME FOR TIME TABLE
C  TBMAX       = PARAMETER: MAXIMUM ARRIVAL TIME FOR TIME TABLE
C  DBMIN       = PARAMETER: MINIMUM DISTANCE FOR DISTANCE TABLE
C  DBMAX       = PARAMETER: MAXIMUM DISTANCE FOR DISTANCE TABLE
C
C --------------/CRTHNVAR/-----------------------
C  MAXICOUNT   = PARAMETER FOR MAXIMAL INTERMEDIATE STACK SIZE
C  STACKINT(,) = INTERMEDIATE STACK OF PARTICLE COORDINATES
#if __THIN__ || __MULTITHIN__
C  EEPP(.)     = ENERGY OF PARTICLE ON INTERMEDIATE STACK
C  ELIM        = ENERGY LIMIT FOR THINNING
#endif
#if __THIN__
C  RMAX        = MAX. RADIUS FOR RADIAL THINNING
C  RMAX2       = RMAX**2
C  WMAX        = MAX. ACTUAL WEIGHT FOR WEIGHT LIMITATION (HADR.)
C  WMAX0       = MAX. WEIGHT FOR WEIGHT LIMITATION (HADR.)
C  WMAXE       = MAX. ACTUAL WEIGHT FOR WEIGHT LIMITATION (EM)
C  WMAXE0      = MAX. WEIGHT FOR WEIGHT LIMITATION (EM)
C  WMAXEM      = MAX. WEIGHT LIMIT (EM-PARTICLES) FOR WEIGHT LIMITATION
#endif
C  INT_ICOUNT  = POINTER FOR INTERMEDIATE PARTICLE STACK
C  MODETHN     = MODE FOR READING IN THIN VARIABLES
C  THINNING    = FLAG INDICATING THINNING FOR CURRENT INTERACTION
#if __THIN__
C  RLIM        = FLAG INDICATING THAT RADIAL THINNING IS ACTIVE
C  WLIM        = FLAG INDICATING THAT WEIGHT LIMITATION IS ACTIVE
#endif
C
#if __TRAJECT__
C --------------/CRTRAJEC/-----------------------
C  DECL        = DECLINATIN OF SOURCE TO BE FOLLOWED
C  RA          = RIGHT ASCENSION OF SOURCE TO BE FOLLOWED
C  GEODECL     = GEOGRAPHIC DECLINATION OF TELESCOPE
C  TLATDGR     = TELESCOPE POSITION LATERAL DEGREE
C  TLATMIN     = TELESCOPE POSITION LATERAL MINUTES
C  TLATSEC     = TELESCOPE POSITION LATERAL SECONDS
C  TLONGDGR    = TELESCOPE POSITION LONGITUDINAL DEGREE
C  TLONGMIN    = TELESCOPE POSITION LONGITUDINAL MINUTES
C  TLONGSEC    = TELESCOPE POSITION LONGITUDINAL SECONDS
C  TRAD        = PRODUCE EVENTS WITHIN RADIUS TRAD AROUND SOURCE POSITION
C  TYEAR       = OBSERVATION START TIME YEAR
C  TMONTH      = OBSERVATION START TIME MONTH
C  TDAY        = OBSERVATION START TIME DAY
C  THOUR       = OBSERVATION START TIME HOUR
C  TMINUTE     = OBSERVATION START TIME MINUTE
C  TSECOND     = OBSERVATION START TIME SECOND
C  TDURATION   = OBSERVATION DURATION
C  TLATDIR     = TELESCOPE POSITION LATERAL DIRECTION (N OR S)
C  TLONGDIR    = TELESCOPE POSITION LONGITUDINAL DIRECTION (W OR E)
C  TLOGIC      = FLAG TO ENABLE TRAJECTORY MODE
C
#endif
C --------------/CRTHRESH/-----------------------
C  (SEE EGS4 MANUAL)
C
#if __CURVED__
C --------------/CRTIMLIM/-----------------------
C  DSTLIM      = DISTANCE LIMIT (DOWNSTREAM DETECTOR) FOR TIME LIMIT
C  TIMLIM      = TIME LIMIT FOR PARTICLE SINCE 1. INTERACT (SEC)
C  LTMLMPR     = FLAG FOR PRINTING OF PARTICLE EXCEEDS TIME LIMIT
C
#endif
#if __INTTEST__
C --------------/CRTSTINT/-----------------------
C  HMA(.)      = PARTICLE MASS                        FOR HISTOGRAMMING
C  HENL(.)     = PARTICLE ENERGY IN LABORATORY        FOR HISTOGRAMMING
C  HEN(.)      = PARTICLE ENERGY                      FOR HISTOGRAMMING
C  HTH(.)      = PARTICLE ANGLE THETA                 FOR HISTOGRAMMING
C  HST(.)      = PARTICLE SIN(THETA)                  FOR HISTOGRAMMING
C  HCT(.)      = PARTICLE COS(THETA)                  FOR HISTOGRAMMING
C  HPP(.)      = PARTICLE TOTAL MOMENTUM              FOR HISTOGRAMMING
C  HPL(.)      = PARTICLE LONGITUDINAL MOMENTUM       FOR HISTOGRAMMING
C  HPT(.)      = PARTICLE TRANSVERERSE MOMENTUM       FOR HISTOGRAMMING
C  HPT2(.)     = SQUARED  TRANSVERERSE MOMENTUM       FOR HISTOGRAMMING
C  HPX(.)      = X-DIRECTION TRANSVERSE MOMENTUM      FOR HISTOGRAMMING
C  HPY(.)      = Y-DIRECTION TRANSVERSE MOMENTUM      FOR HISTOGRAMMING
C  HXF(.)      = PARTICLE FEYNMAN X                   FOR HISTOGRAMMING
C  HXFL(.)     = PARTICLE FEYNMAN X (LOG)             FOR HISTOGRAMMING
C  HXFCM(.)    = PARTICLE FEYNMAN X IN CM SYSTEM      FOR HISTOGRAMMING
C  HYR(.)      = PARTICLE RAPIDITY                    FOR HISTOGRAMMING
C  HPR(.)      = PARTICLE PSEUDO RAPIDITY             FOR HISTOGRAMMING
C  HPHI(.)     = PARTICLE PHI ANGLE                   FOR HISTOGRAMMING
C  HSPEC(.)    = +-1 IF SPECTATOR                     FOR HISTOGRAMMING
C  PTAV(.)     = AVERAGE TRANSVERSE MOMENTUM
C  PT2AV(.)    = AVERAGE SQUARED TRANSVERSE MOMENTUM
C  PLAV(.)     = AVERAGE LONGITUDINAL MOMENTUM
C  XFAV(.)     = AVERAGE FEYNMAN X
C  RAPAV(.)    = AVERAGE RAPIDITY
C  PRAPAV(.)   = AVERAGE PSEUDORAPIDITY
C  CRD(.)      = CENTRAL PSEUDO RAPIDITY DENSITY      FOR HISTOGRAMMING
C  INEL(.)     = INELASTICITY                         FOR HISTOGRAMMING
C  XFLAV       = AVERAGE LOG(FEYNMAN X)
C  HILI(.)     = BIN WIDTH                            FOR HISTOGRAMMING
C  GACM        = GAMMA IN CENTER OF MASS SYSTEM
C  BECM        = BETA  IN CENTER OF MASS SYSTEM
C  ECMEFF      = ENERGY IN CENTER OF MASS SYSTEM INCL. TARGET NUCLEONS
C  HIT(.)      = PARTICLE TYPE                        FOR HISTOGRAMMING
C  PARCLA(I,K) = PARTICLE CLASS POINTERS              FOR HISTOGRAMMING
C                I=1,..5   THE CLASSES TO WHICH THE PARTICLE K BELONGS,
C                ALL PARTICLES ARE IN ADDITION IN CLASS 1
C                ALL PARTICLES WITH CODES >200 ARE CHARGED AND NUCLEI
C  MCLA(.)     = ENTRIES PER PARTICLE CLASS           FOR HISTOGRAMMING
C  NNI         = TOTAL # OF PARTICLES FROM INTERACT   FOR HISTOGRAMMING
C  ITPRO       = PARTICLE TYPE OF PROJECTILE          FOR HISTOGRAMMING
C  ITTAR       = TARGET TYPE                          FOR HISTOGRAMMING
C  MCM         = FLAG FOR CM CALCULATIONS             FOR HISTOGRAMMING
C  NDIF        = FLAG FOR DIFFRACTION/NON DIFFRACTION
C  LPI0        = FLAG FOR DECAY OF PI0
C  LETA        = FLAG FOR DECAY OF ETA
C  LHYP        = FLAG FOR DECAY OF HYPERONS
C  LK0S        = FLAG FOR DECAY OF K0S
C  LSPEC       = FLAG FOR USE OF SPECTATOR NUCLEONS
C
C --------------/CRUPHIOT/-----------------------
C  (SEE EGS4 MANUAL)
C
#endif
#if __URQMD__
C --------------/CRURQCLC/-----------------------
C  MAXCLU      = PARAMETER MAXIMUM CLUSTERS
C  MAXENT      = PARAMETER MAXIMUM ?
C
C  NCLUSTER    =
C  NCLUENT     =
C  NCLUST      =
C
C --------------/CRURQSIG/-----------------------
C  MAXA        = MAXIMUM NUCLEON NUMBER FOR PROJECTILE NUCLEUS
C  MAXS        = MAXIMUM PARTICLE  NUMBER FOR PROJECTILE
C  MAXZ        = MAXIMUM ATOMIC NUMBER FOR PROJECTILE NUCLEUS
C  URCRNU      = CROSS-SECTION FOR NUCLEUS-AIR COLLISION
C  URCRSP      = CROSS-SECTION FOR HADRON-AIR COLLISION
C
#endif
C --------------/CRUSEFUL/-----------------------
C  (SEE EGS4 MANUAL)
C
#if __VENUS__
C --------------/CRVENLIN/-----------------------
C  PTQ1        = MEAN TRANSVERSE MOMENTUM COEFFICIENT
C  PTQ2        = MEAN TRANSVERSE MOMENTUM COEFFICIENT
C  PTQ3        = MEAN TRANSVERSE MOMENTUM COEFFICIENT
C  QMUST1      = MULTISTRING PARAMETER COEFFICIENT
C  QMUST2      = MULTISTRING PARAMETER COEFFICIENT
C  QMUST3      = MULTISTRING PARAMETER COEFFICIENT
C  IDTABL(.)   = CONVERSION TABLE CORSIKA CODE TO VENUS CODE
C
C --------------/CRVENPAR/-----------------------
C  PARVAL(.)   = VENUS PARAMETER VALUE SPECIFIED BY PARCHA
C  NPARAM      = NUMBER OF VENUS PARAMETERS READ BY DATAC
C  PARCHA(.)   = CODE WORD SPECIFYING VENUS PARAMETER
C
C --------------/CRVENSSG/-----------------------
C  FRNVKL(11)  = TABLE OF LOGARITHM OF KAON 14N     CROSS-SECTION
C  FRNVPIL(11) = TABLE OF LOGARITHM OF PION 14N     CROSS-SECTION
C  FRNVPL(11)  = TABLE OF LOGARITHM OF NUCLEON 14N  CROSS-SECTION
C  FRNOVKL(11) = TABLE OF LOGARITHM OF KAON 14N+16O CROSS-SECTION
C  FRNOVPIL(11)= TABLE OF LOGARITHM OF PION 14N+16O CROSS-SECTION
C  FRNOVPL(11) = TABLE OF LOGARITHM OF NUCL 14N+16O CROSS-SECTION
C  SGVKL(11)   = TABLE OF LOGARITHM OF KAON    AIR  CROSS-SECTION
C  SGVPIL(11)  = TABLE OF LOGARITHM OF PION    AIR  CROSS-SECTION
C  SGVPL(11)   = TABLE OF LOGARITHM OF NUCLEON AIR  CROSS-SECTION
C  SVPPL(11)   = TABLE OF LOGARITHM OF NUCLEON NUCLEON CROSS-SECTION
C
C --------------/CRVENUS/------------------------
C  ISH00       = PARAMETER TO STEER AMOUNT OF VENUS DEBUG OUTPUT
C  IVERVN      = VENUS VERSION *1000 AS INTEGER
C  MTAR99      = INDICATOR FOR TARGET IN VENUS WITH INTERACTIONTEST
C  FVENUS      = FLAG TO ACTIVATE VENUS ROUTINES
C  FVENSG      = FLAG TO ACTIVATE VENUS CROSS-SECTIONS
C
#endif
C --------------/CRVERS/-------------------------
C  VERNUM      = VERSION NUMBER OF CORSIKA
C  MVDATE      = DATE OF VERSION AS INTEGER (YYYYMMDD)
C  VERDAT(.)   = DATE OF RELEASE OF VERSION
C
C --------------/CRVKIN/-------------------------
C  BETACM      = BETA IN CENTER OF MASS
C
C --------------/CRWGHTMA/-----------------------
C  MWGHMA(,)   = WEIGHT MATRIX OF SINGLE SHOWER
C  MWGHTOT(,)  = TOTALIZED WEIGHT MATRIX OF ALL SHOWERS
C
#if __CONEX__
C --------------/CXCONVE/-----------------------
C  CXXCONV     = X COORDINATE OF AXIS ORIGIN TO CONVERT FROM CONEX TO CORSIKA
C  CXYCONV     = Y COORDINATE OF AXIS ORIGIN TO CONVERT FROM CONEX TO CORSIKA
C  CXTCONV     = TIME COORDINATE OF AXIS ORIGIN TO CONVERT FROM CONEX TO CORSIKA
C
C --------------/CXINPUT/------------------------
C  CXTHR(3)    = THRESHOLD CONEX MC -> CE
C  CXMCC(3)    = THRESHOLD CONEX CE -> CORSIKA MC
C  CXWMX(3)    = MAXIMUM WEIGHT FOR SAMPLED PARTICLES
C  CXMCS       = MAXIMAL VERTICAL DEPTH OF LOW ENERGY MC FOR EM PARTICLES
C  DZCNX       = RATIO OF SLANT DEPTH BIN SIZE BETWEEN CONEX AND CORSIKA
C  INLUN       = INPUT UNIT FOR CONEX
C  OUTLUN      = OUTPUT UNIT FOR CONEX
C  IDCX        = ID OF PRIMARY PARTICLE FOR CONEX
C  ISX0        = CONEX DEBUG LEVEL AT START
C  FINCNX      = FLAG TO USE CONEX RANDOM SEED SEQUENCE IN HADRONIC MODELS
C  FCORS       = FLAG TO RUN CORSIKA MC
C  FCXGHE      = FLAG TO FORCE CONEX TO USE GHEISHA TO HAVE NO LOW HAD MC
C  FCXWMX      = FLAG TO USE CONEX MAXIMUM WEIGHT DEFINITION
C  FCXCE       = FLAG TO FAKE LOW ENERGY CASCADE BY MC WITH HIGH WEIGHT
C
#endif
#if __NUPRIM__
C --------------/HWCRSK/-------------------------
C  RNAMCOR     = CHARACTER*8 ARRAY WITH PARTICLE NAMES
C
#endif
C=======================================================================
C
C  DESCRIPTION OF GLOBAL VARIABLES USED IN THE COMMONS OF THE PROGRAM
C  ==================================================================
C  (IN ALPHABETIC ORDER OF THE VARIABLE NAMES)
C
C  AATM(5)     = ACTUAL COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  AATM0(5,..) = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
#if __CONEX__
C  AATMCRS(5)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
#endif
C  AATOM       = NUCLEONS IN TARGET FOR MUON/TAU INTERACTIONS
#if __CERENKOV__
C  ACERX       = CHERENKOV DETECTOR SIZE IN X DIRECTION IN CM
C  ACERY       = CHERENKOV DETECTOR SIZE IN Y DIRECTION IN CM
#endif
C  ACOMP       = ATOMIC WEIGHT OF COMPONENT (GHEISHA)
C  ADLONG(I,K) = AVERAGE OF DLONG OVER ALL SHOWERS
C  AELONG(I,K) = AVERAGE OF ELONG OVER ALL SHOWERS
C  ALEVEL      = LEVEL OF LAST HADRONIC INTERACTION
C  ALTMIN(..)  = MINIMUM ALTITUDE FOR REJECTION OF ELECTRONS AT OBS.LEVL
C  AMUPAR(0:..)= REGISTER FOR MUON PARTICLE ADDITIONAL INFO
C  ANEXP(..)   = AVERAGE NUMBER OF ELECTRONS TO BE EXPECTED AT OBS.LEVEL
C  APLONG(I,K) = AVERAGE OF PLONG OVER ALL SHOWERS
C  ARRANG      = ANGLE (DEG) ARRAY X-DIRECTION AND MAGNETIC NORD
C  ARRANR      = ANGLE (RAD) ARRAY X-DIRECTION AND MAGNETIC NORD
C  ARRAYLONG( )= BUFFER FOR LONGITUDINAL PARTICLE DISTRIBUTION
#if __CERENKOV__&&__CEFFIC__
C  ATEOBS      = ARRAY WITH ATM. ABS. COEFF. FOR OBSERVATION LEVEL
C  ATMABS      = ARRAY WITH ATM. ABSORPTION COEFFICIENTS
#endif
C  AVCH        = AVERAGE # OF CHARGED PARTICLES IN HDPM
C  AVCH3       = AVERAGE # OF CHARGED PARTICLES IN 3RD STRING IN HDPM
C  AVERAW      = AVERAGE ATOMIC WEIGHT OF AIR
C  AVNREJ(..)  = AVERAGE NUMBER OF REJECTED ELECTRONS IN EGS
C  AVOGDR      = AVOGADROS NUMBER * MILLIBARN/CM**2
C  AVPE        = AVERAGE TRANSVERSE MOMENTUM FOR ETAS
C  AVPH        = AVERAGE TRANSVERSE MOMENTUM FOR STRANGE BARYONS
C  AVPK        = AVERAGE TRANSVERSE MOMENTUM FOR KAONS
C  AVPN        = AVERAGE TRANSVERSE MOMENTUM FOR NUCLEONS
C  AVPT        = AVERAGE TRANSVERSE MOMENTUM FOR PIONS
C
C  BETA2       = VELOCITY OF ELECTRON SQUARED
C  BATM(5)     = ACTUAL COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  BATM0(5,..) = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
#if __CONEX__
C  BATMCRS(5)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
#endif
C  BCUT        = CUT-OFF ENERGY FOR MUON/TAU BREMSSTRAHLUNG
#if __INTTEST__
C  BECM        = BETA  IN CENTER OF MASS SYSTEM
#endif
C  BETA        = CURPAR(10)
C  BETACM      = BETA IN CENTER OF MASS
C  BLIMIT      = LIMIT FACTOR FOR STEP SIZE OF ELECTRONS IN MAGN.FIELD
C  BNORM       = MAGNETIC DEFLECTION CONSTANT [MEV/CM]
C  BNORMC      = MAGNETIC DEFLECTION CONSTANT [GEV/CM]
C  BOUND       = BOUNDARIES OF ATMOSPHERIC LAYERS (EGS4)
C  BREMSTAB    = TABLE OF MUON/TAU BREMSSTRAHLUNG CROSS-SECTIONS
C  BVAL        = SQUARED MAGNET FIELD STRENGTH
C  BX          = MAGNET FIELD STRENGTH COMPONENT TO NORTH [MICROTESLA]
C  BZ          = MAGNET FIELD STRENGTH COMPONENT DOWNWARD [MICROTESLA]
C
C  C(.)  PHYSICAL CONSTANSTS
C  C(1)        = EARTH'' RADIUS (CM)
C  C(2)        = MAX DISTANCE IN LOCAL COORDINATE SYSTEM AT SEA LEVEL
C  C(3)        = MAX DISTANCE IN LOCAL COORD. SYSTEM AT TOP OF ATMOSPH.
C  C(4)        = CONSTANT FOR MAX DIST IN LOCAL COORD. SYSTEM (SEE START)
C  C(6)        = (MASS OF MUON+/MASS OF KAON+)**2
C  C(7)        = (MASS OF MUON+/MASS OF PION+)**2
C  C(8)        = (PAMA(5)**2 + PAMA(2)**2)/(2*PAMA(5))
C  C(9)        = MAX DISTANCE IN LOCAL COORDINATE SYSTEM (CHIMAX/RHO)
C  C(10)       = CUTOFF LORENTZ FACTOR FOR RECOIL NUCLEON
C  C(11)       = CUTOFF LORENTZ FACTOR FOR RECOIL PION
C  C(12)       = PEAK POSITION FOR PT DISTRIBUTION (IN PTRANS)
C  C(15)       = 1. + (MASS OF ELECTRON/MASS OF MUON)**2 (SEE START)
C  C(16)       = 2. * MASS OF ELECTRON / MASS OF MUON (SEE START)
C  C(17)       = 1. + (MASS OF ELECTRON/MASS OF TAU)**2 (SEE START)
C  C(18)       = 2. * MASS OF ELECTRON / MASS OF TAU (SEE START)
C  C(21)       = COULOMB SCATTERING LENGTH (G/CM**2)
C  C(22)       = CONSTANT FOR SPECIFIC IONISATION LOSS IN AIR
C  C(23)       = CONSTANT FOR SPECIFIC IONISATION LOSS IN AIR
C  C(24)       = (SPECIFIC IONIS. LOSS IN AIR FOR MIN.ION. PARTICLES)
C  C(25)       = SPEED OF LIGHT (CM/SEC)
C  C(26)       = CUT IN     THETA  FOR ANGLES TO BE ADDED
C  C(27)       = CUT IN COS(THETA) FOR ANGLES TO BE ADDED
C  C(28)       = CUT IN     THETA  FOR ALL PARTICLES, CUTS UPWARD GOING
C  C(29)       = CUT IN COS(THETA) FOR ALL PARTICLES, CUTS UPWARD GOING
C  C(30)       = PARAMETER FOR COULOMB SCATTERING OF MUONS
C  C(34)       = CUTOFF FOR PT IN SUBROUT. PTRANS
C  C(35)       = MEAN FOR PION LONG. MOMENTUM COMING FROM FORW. ISOBAR
C  C(36)       = MEAN FOR PION LONG. MOMENTUM COMING FROM FORW. ISOBAR
C  C(45)       = 2 * PAMA(14) * PAMA(8) INTERNALLY COMPUTED
C  C(46)       = PAMA(14)**2 + PAMA(8)**2 INTERNALLY COMPUTED
C  C(48)       = (PAMA(8)**2 + PAMA(5)**2) /(2.D0*PAMA(8)*PAMA(5))
C  C(49)       = SQRT(C(48)**2 - 1.D0) / C(48) INTERNALLY COMPUTED
C  C(50)       = FINE STRUCTURE CONSTANT
C  C(.)        = ARRAY(KSEQ) FOR RANDOM GENERATOR
#if __CERENKOV__
C  CARTIM      = ARRIVAL TIME OF CHERENKOV PHOTONS
#endif
C  CATM(5)     = ACTUAL COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
C  CATM0(5,..) = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE
#if __CONEX__
C  CATMCRS(5)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
#endif
#if __SLANT__
C  CCATM(5)    = LOG( BATM(I)/CATM(I) )
#endif
#if __ANAHIST__
C  CCLA        = LETTERING OF HISTOGRAM
#endif
C  CD          = STARTING NUMBER FOR RANDOM GENERATOR
#if __CERENKOV__
#if __CEFFIC__
C  CERATA      = FLAG FOR ATM. ABSORPTION
#endif
C  CERBUF(...) = MAPPING OF CHERENKOV TELESCOPE ID TO OUTPUT BUFFER 
C                (CHERENKOV FILE/BUFFER)
C  CERCNT      = CHERENKOV PHOTON COUNTER
C  CERDIST     = DISTANCE CHERENKOV EMISSION POINT TO DETECTOR MIDDLE
C  CERELE      = CHERENKOV PHOTONS FROM ELECTRONS
C  CERHAD      = CHERENKOV PHOTONS FROM HADRONS
C  CERNOR      = NORMALISATION FACTOR FOR CALC. OF WAVELENGTH OF C-PHOTONS
#if __CEFFIC__
C  CERMIR      = FLAG FOR MIRROR REFLECTIVITY
C  CERQEF      = FLAG FOR QUANTUM EFFICIENCY
#endif
C  CERTELID(10)= ID OF CERENKOV TELESCOPE
C  CERTELR(10) = RADIUS OF SPHERE AROUND CHERENKOV TELESCOPE
C  CERTELX(10) = X POSITION OF CHERENKOV TELESCOPE 
C  CERTELY(10) = Y POSITION OF CHERENKOV TELESCOPE
C  CERTELZ(10) = Z POSITION OF CHERENKOV TELESCOPE
C  CERSIZ      = MAXIMAL NUMBER OF PHOTONS IN ONE BUNCH
C  CERXOS(I)   = X OFFSETS OF SHOWER CORE FOR THE MULTIPLE EVENTS IN CM
C  CERYOS(I)   = Y OFFSETS OF SHOWER CORE FOR THE MULTIPLE EVENTS IN CM
#endif
C  CETA(1)     = BRANCHING RATIO FOR ETA DECAY
C  CETA(2)     = BRANCHING RATIO FOR ETA DECAY
C  CETA(3)     = BRANCHING RATIO FOR ETA DECAY
C  CETA(4)     = ASYMMETRY TERM    IN DECAY  ETA-->PI(+) + PI(-) + PI(0)
C  CETA(5)     = MAXIMUM AMPLITUDE IN DECAY  ETA-->PI(+) + PI(-) + PI(0)
#if __PARALLEL__
C  CFILINP     = CUTFILE NAME TO READ TO FILL 2ND STACK
C  CFILOUT     = SCREEN OUTFILE FILE NAME
#endif
C  CHAPAR      = ARRAY OF PARTICLE NUMBERS FOR LONGIT. DISTRIBUTION
C  CHC         = CONSTANT CHI_C   FOR MUOMN MULTIPLE SCATTERING
C  CHI         = CURPAR(9)
C  CINT        =STARTING NUMBER FOR RANDOM GENERATOR
C  CKA(.)  PHYSICAL CONSTANTS FOR KAONS
C  CKA(2)      = MEAN FOR KAON LONG. MOMENTUM COMING FROM VHMESO
C  CKA(23)     = BRANCH RATIO K(+,-) DECAY
C  CKA(24)     = BRANCH RATIO K0S DECAY
C  CKA(25)     = BRANCH RATIO K0L DECAY
C  CKA(26)     = BRANCH RATIO K0L DECAY
C  CKA(27)     = BRANCH RATIO K0L DECAY
C  CKA(47)     = BRANCH RATIO K(+,-) DECAY
C  CKA(48)     = BRANCH RATIO K(+,-) DECAY
C  CKA(49)     = BRANCH RATIO K(+,-) DECAY
C  CKA(50)     = BRANCH RATIO K(+,-) DECAY
C  CKA(51)     = G     OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(52)     = H     OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(53)     = K     OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(54)     = AMPMX OF K+,- ===> PI+,- + PI+,- + PI-,+
C  CKA(55)     = G     OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(56)     = H     OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(57)     = K     OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(58)     = AMPMX OF K+,- ===> PI0 + PI0 + PI+,-
C  CKA(59)     = G,H,K OF K0L ===> PI0 + PI0 + PI0
C  CKA(60)     = AMPMX OF K0L ===> PI0 + PI0 + PI0
C  CKA(61)     = G     OF K0L ===> PI+ + PI- + PI0
C  CKA(62)     = H     OF K0L ===> PI+ + PI- + PI0
C  CKA(63)     = K     OF K0L ===> PI+ + PI- + PI0
C  CKA(64)     = AMPMX OF K0L ===> PI+ + PI- + PI0
C  CKA(65)     = LAMBDA-PLUS OF K+,- ===> PI0 + E + NU
C  CKA(66)     = LAMBDA-ZERO OF K+,- ===> PI0 + E + NU
C  CKA(67)     = AMPMX       OF K+,- ===> PI0 + E + NU
C  CKA(68)     = LAMBDA-PLUS OF K+,- ===> PI0 + MU + NU
C  CKA(69)     = LAMBDA-ZERO OF K+,- ===> PI0 + MU + NU
C  CKA(70)     = AMPMX       OF K+,- ===> PI0 + MU + NU
C  CKA(71)     = LAMBDA-PLUS OF K0L ===> PI + E + NU
C  CKA(72)     = LAMBDA-ZERO OF K0L ===> PI + E + NU
C  CKA(73)     = AMPMX       OF K0L ===> PI + E + NU
C  CKA(74)     = LAMBDA-PLUS OF K0L ===> PI + MU + NU
C  CKA(75)     = LAMBDA-ZERO OF K0L ===> PI + MU + NU
C  CKA(76)     = AMPMX       OF K0L ===> PI + MU + NU
C  CM          =STARTING NUMBER FOR RANDOM GENERATOR
C  CMUON(11)   = CONSTANTS FOR MUON BREMSSTRAHLUNG CALCULATION
#if __COMPACT__
C  COMOUT      = FLAG INDICATING COMPACT OUTPUT
#endif
C  COMPOS(3)   = COMPOSITION OF AIR, ATOMIC FRACTIONS OF N, O, AR
#if __ICECUBE2__
C  gzip_output = FLAG INDICATING THAT OUTPUT SHOULD BE GZIPPED
#endif
C  CONSTKINE   = KINEMATIC CONSTANT FOR MUON/TAU INTERACTIONS
C  CONTNE(3)   = FRACTION OF NEUTRONS IN TARGET LIT
#if __CURVED__
C  CORRXY      = CORRECTION FOR CURVOUT OPTION
#endif
C  COSANG      = COSINE OF ARRANR
#if __AUGERHIST__
C  COSPHIP     = COSIN OF AZIMUTH OF PRIMARY
#endif
#if __CURVED__
C  COSTAP      = CURPAR(15) APPARENT ZENITH ANGLE OF PARTICLE POSITION IN CART.COORD. SYSTEM
C  COSTEA      = CURPAR(16) ANGLE PARTICLE TO MID DETECTOR AT CENTER EARTH
#endif
C  COSTHE      = CURPAR(2)
C  COSB        = COS OF INCLINATION ANGLE MAGNETIC FIELD
C  COS345(3)   = COSINE THETA OF PARTICLE EMERGING FROM 3 BODY DECAY
C  CPHISCT     = COSINE OF AZIMUTAL ANGLE OF MUON MULTIPLE SCATTERING
C  CPHI345(3)  = COSINE PHI   OF PARTICLE EMERGING FROM 3 BODY DECAY
#if __PLOTSH__
C  CPLOT       = DATA SET NAME OF OUTPUT FILES FOR PLOTSH
#endif
#if __PLOTSH2__
C  CPLOT2      = DATA SET NAME OF OUTPUT FILES FOR PLOTSH2
#endif
#if __INTTEST__
C  CRD(.)      = CENTRAL PSEUDO RAPIDITY DENSITY      FOR HISTOGRAMMING
#endif
C  CSTRBA(5)   = BRANCHING RATIO FOR DECAY OF LAMDA
C  CSTRBA(6)   = BRANCHING RATIO FOR DECAY OF SIGMA(+)
C  CSTRBA(10)  = BRANCHING RATIO FOR DECAY OF OMEGA(-)
C  CSTRBA(11)  = BRANCHING RATIO FOR DECAY OF OMEGA(-)
C  CTAU(11)    = CONSTANTS FOR TAU  BREMSSTRAHLUNG CALCULATION
#if __SLANT__
C  CTH         = COSINE OF PRIMARY FOR PLANE NORMAL TO SHOWER AXIS
#endif
C..CURRENT PARTICLE AND EQUIVALENCED QUANTITIES
C  CURPAR(0)   = PARTICLE TYPE
C  CURPAR(1)   = GAMMA,  LORENTZ FACTOR IN LAB
C  CURPAR(2)   = COSTHE, DIRECTION COSINE Z-DIRECTION
C  CURPAR(3)   = PHIX,   DIRECTION COSINE X-DIRECTION
C  CURPAR(4)   = PHIY,   DIRECTION COSINE Y-DIRECTION
C  CURPAR(5)   = H,      HEIGHT
C  CURPAR(6)   = T,      ACCUMULATED TIME IN SEC
C  CURPAR(7)   = X,      X-POSITION
C  CURPAR(8)   = Y,      Y-POSITION
C  CURPAR(9)   = CHI,    PENETRATED MATERIAL UNTIL DECAY OR REACTION
C                (G/CM**2)  CALCULATED IN BOX2
C  CURPAR(10)  = BETA,   V/C, CALCULATED IN BOX2
C  CURPAR(11)  = GCM,    GAMMA  IN CM, CALCULATED IN NUCINT
C  CURPAR(12)  = ECM,    ENERGY IN CM, CALCULATED IN NUCINT
#if __THIN__
C  CURPAR(13)  = WEIGHT, WEIGHT FOR THINNING
#endif
#if __CURVED__
C  CURPAR(14)  = HAPP,   APPARENT HEIGHT  IN CARTESIAN COORDINATE SYSTEM
C  CURPAR(15)  = COSTAP, APPARENT ZENITH ANGLE  OF PARTICLE POSITION IN CART.COORDINATE SYSTEM
C  CURPAR(16)  = COSTEA, ANGLE PARTICLE TO MID DETECTOR AT CENTER EARTH
#endif
#if __INTTEST__
C  CURPAR(17)  = TRANSVERSE MOMENTUM
#endif
#if __EHISTORY__
C  CURPAR(17)  = PARTICLE ID          FOR MOTHER PARTICLE
C  CURPAR(18)  = GAMMA RSP. ENERGY    FOR MOTHER PARTICLE
C  CURPAR(19)  = COSTHE               FOR MOTHER PARTICLE
C  CURPAR(20)  = PHIX                 FOR MOTHER PARTICLE
C  CURPAR(21)  = PHIY                 FOR MOTHER PARTICLE
C  CURPAR(22)  = H                    FOR MOTHER PARTICLE
C  CURPAR(23)  = TIME                 FOR MOTHER PARTICLE
C  CURPAR(24)  = X                    FOR MOTHER PARTICLE
C  CURPAR(25)  = Y                    FOR MOTHER PARTICLE
C  CURPAR(26)  = WEIGHT FOR THINNING  FOR MOTHER PARTICLE
C  CURPAR(27)  = COMP. SECPAR(27)
C  ......
C  CURPAR(37)  = COMP. SECPAR(37)
#endif
#if __PARALLEL__
C  CURPAR(39)  = ECTFLG  FLAG FOR WHETHER OR NOT THIS PARTICLE WILL BE CUT
#endif
#if __MULTITHIN__
C  CURPAR(41-46) = WEIGHTS FOR THINNING MODES
#endif
C  CUTLN       = LOGARITHM OF CUTTING ENERGY FOR REJECT IN EGS
#if __PARALLEL__
C..CUT PARTICLE
C  CUTPAR(..)  = PARTICLE FIELD FOR CUT PARTICLES (COMP. SECPAR)
C  CUTPAR(18)  = SEED OF 6TH SEQUENCE FOR NEXT CUT PARTICLES
#endif
#if __AUGERHIT__
C  CUTRAD      = RADIUS OF DET. SATURATION AROUND SHOWER CORE (IN METER)
#endif
#if __CONEX__
C  CXMCC(3)    = THRESHOLD CONEX CE -> CORSIKA MC
C  CXMCS       = MAXIMAL VERTICAL DEPTH OF LOW ENERGY MC FOR EM PARTICLES
C  CXTHR(3)    = THRESHOLD CONEX MC -> CE
C  CXWMX(3)    = MAXIMUM WEIGHT FOR SAMPLED PARTICLES
C  CXXCONV     = X COORDINATE OF AXIS ORIGIN TO CONVERT FROM CONEX TO CORSIKA
C  CXYCONV     = Y COORDINATE OF AXIS ORIGIN TO CONVERT FROM CONEX TO CORSIKA
C  CXTCONV     = TIME COORDINATE OF AXIS ORIGIN TO CONVERT FROM CONEX TO CORSIKA
#endif
#if __CERENKOV__
C  CYIELD      = CHERENKOV YIELD FACTOR
#endif
C  CZX(.)      = LATERAL DIST. OF ELECTRONDENSITY IN X (NKG) (/CM**2)
C  CZY(.)      = LATERAL DIST. OF ELECTRONDENSITY IN Y (NKG) (/CM**2)
C  CZXY(.)     = LATERAL DIST. OF ELECTRONDENSITY IN XY (NKG) (/CM**2)
C  CZYX(.)     = LATERAL DIST. OF ELECTRONDENSITY IN YX (NKG) (/CM**2)
C
C  DATAB(MAXBUF)= BUFFER FOR DATA
#if __CERENKOV__
C  DATAB2(273) = BUFFER FOR DATA FOR CHERENKOV OUTPUT
#endif
C  DATDIR      = DIRECTORY OF INPUT DATA TABLES
C  DATM(5)     = 1. / CATM(I) ACT. COEFFICIENT FOR PARAM. OF ATMOSPHERE
#if __CONEX__
C  DATMCRS(5)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
#endif
C  DBFAC       = DISTSANCE    SCALING FACTOR FOR BINNING
C  DBMAX       = MAXIMUM DISTANCE FOR DISTANCE TABLE
C  DBMIN       = MINIMUM DISTANCE FOR DISTANCE TABLE
C  DBOFF       = DISTSANCE    OFFSET         FOR BINNING
#if __CERENKOV__
C  DCERX       = GRID SPACING IN X DIRECTION IN CM
C  DCERY       = GRID SPACING IN Y DIRECTION IN CM
C  DCERXI      = INVERSE OF GRID SPACING IN X DIRECTION
C  DCERYI      = INVERSE OF GRID SPACING IN Y DIRECTION
#endif
C  DC0         = AVERAGE DENSITY AT CENTRE OF RAPIDITY (HDPM)
C  DEBDEL      = FLAG TO STEER DELAYED ACTIVATION OF DEBUG
C  DEBUG       = FLAG TO STEER PRINTOUT FOR DEBUGGING
#if __TRAJECT__
C  DECL        = DECLINATIN OF SOURCE TO BE FOLLOWED
#endif
C  DECTIM(...) = LIFE TIME AT REST OF UNSTABLE PARTICLES
C  DEDXMU      = TABLE OF MUON/TAU ENEGY LOSS IN DIFFERENT MATERIALS
C  DEDXM       = TABLE OF MUON/TAU ENEGY LOSS IN AIR
C  DEP         = ARRAY OF DEPTH VALUES FOR LONGITUDINAL DISTRIBUTION
#if __AUGERHIT__
C  DETDIS      = DISTANCE BETWEEN AUGER DETECTORS (IN METER)
#endif
#if __VOLUMECORR__
C  DETCFG      = DETEDTOR CONFIGURATION  HEIGHT/DIAMETER
#endif
#if __CERENKOV__&&__CURVED__
C  DETSYS      = FLAG FOR DETECTOR FRAME(TRUE, IF WE ARE ALREADY IN DS)
C  DISTEF(.,.) = CHANGE OF CORE DISTANCE FOR CHERENKOV PHOTON
#endif
#if __CURVED__
C  DIAG        = DISTANCE BETWEEN STARTING POINT AND MIDDLE OF DETECTOR
#endif
C  DIST(10)    = DISTANCES FROM CORE IN CM (USED BY AVAGE)  (NKG)
C  DISX(.)     = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN X  (IN CM)
C  DISXY(.)    = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN XY (IN CM)
C  DISY(.)     = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN Y  (IN CM)
C  DISYX(.)    = DISTANCES OF BINS FOR RADIAL DISTRIBUTION IN YX (IN CM)
C  DLAX(.)     = USED FOR AVERAGING OF CZX
C  DLAXY(.)    = USED FOR AVERAGING OF CZXY
C  DLAY(.)     = USED FOR AVERAGING OF CZY
C  DLAYX(.)    = USED FOR AVERAGING OF CZYX
C  DLOGS       = LOG OF DIFFRACTIVE MASS SQUARED  (HDPM)
C  DLONG(I,K)  = LONGITUDINAL ENERGY DEPOSITS PER SHOWER IN I BINS FOR
C                1=ABSORBED GAMMAS, 2=EM-IONIZATION, 3=E-CUTTED EM,
C                4=MU-& MU+ IONOZATION, 5= E-CUTTED MUONS,
C                6=HADRON IONIZATION, 7=E-CUTTED HADRONS, 8=NEUTRINO,
C                9=SUM OF DEPOSITS, 10=DUMMY,
C                11=ANGL. CUTTED GAMMAS, 12=DUMMY, 13=ANGL. CUTTED EM,
C                14=DUMMY, 15=ANGL. CUTTED MUONS, 16=DUMMY,
C                17=ANGL. CUTTED HADRONS, 18=ANGL. CUTTED NEUTRINOS,
C                19=DUMMY
C  DMLOG       = LOG(ECMDIF**2 - MASS PI(0)**2 - MASS DIFFR.PART.**2)
C  DNEAR(NP)   = DISTANCE TO NEXT LAYER BOUNDARY OF PART. ON EGS STACK
C  DSN(.)      = DATA SET NAME OF PARTICLE OUTPUT
#if __AUGERHIT__
C  DRADIUS     = EFFECTIVE RADIUS (HEXAGON) OF AUGER DETECTOR (IN METER)
#endif
#if __PARALLEL__
C  DSNCUT      = DATA SET NAME FOR CUTTED PARTICLE OUTPUT
C  DSNINP      = DATA SET NAME FOR STEERING FILE
C  DSNJOB      = DATA SET NAME FOR JOB LIST FILE
#endif
#if __FLUKA__
C  DSNFLERR    = DATA SET NAME OF FLUKA ERROR OUTPUT
C  DSNFLOUT    = DATA SET NAME OF FLUKA LIST OUTPUT
#endif
#if __ANAHIST__||__AUGERHIST__||__MUONHIST__
C  DSNHST      = DATA SET NAME OF HISTOGRAM OUTPUT
#endif
C  DSNLONG     = DATA SET NAME OF LONGITUDINAL OUTPUT
C  DSNTAB      = DATA SET NAME OF TABLE OUTPUT
#if __CURVED__
C  DSTLIM      = DISTANCE LIMIT (DOWNSTREAM DETECTOR) FOR TIME LIMIT
#endif
#if __CONEX__
C  DZCNX       = RATIO OF SLANT DEPTH BIN SIZE BETWEEN CONEX AND CORSIKA
#endif
C
C  E(NP)       = ENERGY OF PARTICLE ON EGS STACK
C  EA(3000)    = ENERGY OF SECONDARY PARTICLE IN HDPM
#if __CONEX__
C  EATMCRS(6)  = COEFFICIENTS FOR PARAMETRIZATION OF ATMOSPHERE FOR CONEX
#endif
C  EBFAC       = ENERGY       SCALING FACTOR FOR BINNING
C  EBMAX       = MAXIMUM ENERGY FOR ENERGY TABLE
C  EBMIN       = MINIMUM ENERGY FOR ENERGY TABLE
C  EBOFF       = ENERGY       OFFSET         FOR BINNING
C  EBYMU       = MASS RATION ELECT. MASS / MUON MASS
C  EBYTAU      = MASS RATION ELECT. MASS / TAU  MASS
C  ECM         = CURPAR(12)
#if __INTTEST__
C  ECMEFF      = ENERGY IN CENTER OF MASS SYSTEM INCL. TARGET NUCLEONS
#endif
C  ECMDIF      = DIFFRACTIVE MASS FOR HDPM
C  ECMDPM      = C.M. ENERGY FOR HDPM
#if __PARALLEL__
C  ECTCUT      = THRESHOLD ENERGY FOR PARTICLES IN 2ND STACK
C  ECTMAX      = MAXIMUM ENERGY FOR A COMPLETE SUBSHOWER
C  ECTFLG      = CURPAR(39) 
#endif
C  ECTMAP      = CUT TO PRINT OUT PARTICLES
C  EDEP        = ENERGY DEPOSITED ALONG STEP
C  EE          = TOTAL ENERGY OF MUON/TAU FOR INTERACTIONS
#if __THIN__
C  EEFRTHN     = THINNING EM ENERGY FRACTION OF PRIMARY(=EPSILON_EM)
#endif
#if __THIN__ || __MULTITHIN__
C  EEPP(.)     = ENERGY OF PARTICLE ON INTERMEDIATE STACK
#endif
#if __THIN__
C  EFRCTHN     = THINNING BELOW ENERGY FRACTION OF PRIMARY
#endif
C  EKE         = KINETIC ENERGY OF ELECTRON
C  EKINL       = ENERGY FOR ENERGY-MULTIPLICITY MATRIX
C  ELAB        = LAB ENERGY OF INCOMING PARTICLE IN SDPM/HDPM
C  ELAST       = ELASTICITY OF FIRST REACTION
C  ELCUT(.)    = CUT ON KINETIC ENERGY OF PARTICLES
C  ELEFT       = SUMMED ENERGY OF PARTICLES ON STACK
#if __PARALLEL__
C  ELEFTJ      = SUMMED INDIVIDUAL ENERGY OF PARTICLES ON 2ND STACK
#endif
#if __THIN__ || __MULTITHIN__
C  ELIM        = ENERGY LIMIT FOR THINNING
#endif
C  ELKE        = LOGARITHM OF ELECTRON KINETIC ENERGY
C  ELMEAA(.)   = MEAN ELASTICITY FOR ENERGY BINS FOR ALL SHOWERS
C  ELMEAN(.)   = MEAN ELASTICITY FOR ENERGY BINS PER SHOWER
C  ELONG(I,K)  = LONGITUDINAL ENERGY DISTRIBUTIONS PER SHOWER IN I
C                BINS FOR K= GAMMAS, POSITRONS, ELECTRONS, MU+, MU-,
C                HADRONS, CHARGED, NUCLEI, AND CHERENKOV PHOTONS
#if __MULTITHIN__
C  EMFRACTH(6) = ENERGY FRACTION OF NULTITHIN MODE
C  EMTHNNG(6)  = ENERGY THRESHOLD FOR HADRONIC MULTITHIN MODE
C  EMTHNN(6)   = ENERGY THRESHOLD FOR EM MULTITHIN MODE
#endif
C  ENEPER      = 2.718281828 (EULER''S CONSTANT)
#if __ICECUBE1__
C  energy_interesting = ENERGY ABOVE WHICH PARTICLES ARE INTERESTING
#endif
C  ENEW        = ENERGY AT END OF STEP
#if __NUPRIM__
C  ENU         = NEUTRINO ENERGY FOR HERWIG INTERACTIONS
#endif
C  EOLD        = ENERGY AT BEGIN OF STEP
C  EONCUT      = CUTTING ENERGY (IN MEV) FOR REJECT IN EGS
#if __CERENKOV__
C  EPSX        = HALF COVERAGE RATIO IN X DIRECTION
C  EPSY        = HALF COVERAGE RATIO IN Y DIRECTION
#endif
C  ERR         = ARRAY OF ERRORS OF PARTICLE NUMBERS IN LONG. DIST.
#if __CERENKOV__
C  ETADSN      = CORRECTION FACTOR FOR REFRACTIVE INDEX CALCULATION
#endif
#if __THIN__
C  ETHINN      = THINNING BELOW ENERGY ETHINN  IN MEV FOR EM-PARTICLES
C  ETHINNG     = THINNING BELOW ENERGY ETHINNG IN GEV FOR HADR.PARTICLES
#endif
#if __NUPRIM__
C  ETLAB       = TOTAL ENERGY (LAB) OF NEUTRINO INDUCED HERWIG EVENT
#endif
C  EVTE(MAXBUF)= BUFFER FOR EVENT END
C  EVTH(MAXBUF)= BUFFER FOR EVENT HEADER
C  E00         = ENERGY OF PRIMARY NEEDED FOR REJECT IN EGS
C  E00PN       = ENERGY OF PRIMARY PER NUCLEON
#if __DPMJET__||__QGSJET__
C  E000        = ENERGY/NUCLEON OF PROJECTILE BEFORE COLLISION
#endif
C  E_ARRAY     = ARRAY FOR ELECTRONS IN BINS IN ENERGY, TIME, CORE DIST.
C
C  FAC         = VARIABLE OF SUBROUT. RANNOR
#if __AUGERHIT__
C  FANYMODE    = FLAG INDICATING HIT OF ANY THIN MODE IS ENABLED
#endif
#if __PLOTSH2__
C  FBOXCUT     = FLAG DETERMINING DRAWING OF TRACKS ONLY INSIDE 3D-BOX
#endif
#if __CERENKOV__
C  FCERX       = OFFSET FOR A ODD/EVEN NUMBER OF CHEREKOV DETECTORS IN X
C  FCERY       = OFFSET FOR A ODD/EVEN NUMBER OF CHEREKOV DETECTORS IN Y
#endif
#if __CONEX__
C  FCORS       = FLAG TO RUN CORSIKA MC
C  FCXCE       = FLAG TO FAKE LOW ENERGY CASCADE BY MC WITH HIGH WEIGHT
C  FCXGHE      = FLAG TO FORCE CONEX TO USE GHEISHA TO HAVE NO LOW HAD MC
C  FCXWMX      = FLAG TO USE CONEX MAXIMUM WEIGHT DEFINITION
#endif
C  FDBASE      = FLAG FOR WRITING SUMMARY FILE FOR DATABASE
C  FDECAY      = FLAG INDICATING PARTICLE UNDERGOES DECAY
#if __DPMJET__
C  FDPMJT      = FLAG TO ACTIVATE DPMJET INTERACTION ROUTINES
C  FDPJSG      = FLAG TO ACTIVATE DPMJET CROSS-SECTIONS
#endif
#if __PARALLEL__
C  FECTOUT     = FLAG INDICATING THE PARTICLE TO BE WRITTEN OUT
C  FECTEGS     = FLAG INDICATING THE PARTICLE TO BE WRITTEN OUT IN EGS4
#endif
C  FEGS        = FLAG FOR USE OF EGS4
C  FEGSDB      = DEBUG FALG FOR EGS-DEBUGGING
#if __EHISTORY__
C  FEMADD      = FLAG TO INDICATE ADDITIONAL EM OUTPUT ON MPATAP
#endif
#if __CURVED__
C  FFLATOUT    = FLAG INDICATING PARTICLE OUTPUT TYPE (FLAT OR SPHERE)
#endif
#if __FLUKA__
C  FFLUDB      = FLAG INDICATING DEBUG OF FLUKA
C  FFLUKA      = FLAG INDICATING USE OF FLUKA
C  FFLUSIG     = FLAG INDICATING THAT FLUKA SIGMA IS AVAILABLE
#endif
#if __STACKIN__
C  FILINP      = DATA SET NAME OF STACKIN PARTICLE FILE INPUT
#elif !__CONEX__
C  FILOUT      = DATA SET NAME OF STACK OF FIRST INTERACTION OUTOUT FILE
#endif
#if __CURVED__&&__UPWARD__
C  FIMPCT      = FLAG INDICATING SKIMMING PRIMARY (IMPACT)
#endif
#if __CONEX__
C  FINCNX      = FLAG TO USE CONEX RANDOM SEED SEQUENCE IN HADRONIC MODELS
#endif
C  FIRSTI      = FLAG INDICATING FIRST INTERACTION IN HDPM
C  FIXHEI      = HEIGHT OF FIRST INTERACTION IF TAKEN FIXED (CM)
C  FIXINC      = FLAG TO KEEP ANGLES OF INCIDENCE FIXED
C  FIXTAR      = FLAG TO INDICATE FIXED TARGET FOR FIRST INTERACTION
C  FIX1I       = FLAG TO KEEP HEIGHT OF FIRST INTERACTION FIXED
C  FLGFIT      = LOGICAL TO ENABLE/DISABLE FIT TO CHARGED PART. LONG. DISTR.
C  FLONGOUT    = FLAG INDICATING LONGITUDINAL OUTPUT
C  FMOLI       = FLAG INDICATING MOLIERE (T) OR GAUSS (F) SCATTERING
C  FMUADD      = FLAG TO INDICATE ADDITIONAL MUON OUTPUT ON MPATAP
C  FMUBRM      = FLAG TO INDICATE MUON/TAU HAS TO UNDERGO BREMSSTRAHLUNG
C  FMUNUC      = FLAG TO INDICATE MUON/TAU HAS TO UNDERGO NUCL.INTERACT.
C  FMUORG      = FLAG TO INDICATE WHETHER MUON BELONGS TO AMUPAR(.)
C  FNEUT       = # OF NEUTRAL PARTICLES (ALL 3 STRINGS)  WITH FLUCTUAT
C  FNEUT2      = # OF NEUTRAL PARTICLES (1ST+2ND STRING) WITH FLUCTUAT
#if __NEXUS__  || __EPOS__
C  FNEXUS      = FLAG TO ACTIVATE NEXUS ROUTINES
C  FNEXSG      = FLAG TO ACTIVATE NEXUS CROSS-SECTIONS
#endif
C  FNKG        = FLAG FOR USE OF NKG FORMULAS
C  FNPRIM      = FLAG INDICATING THE PRIMARY PARTICLE IN EGS
#if __EHISTORY__
C  FNUADD      = FLAG TO INDICATE ADDITIONAL NEUTRINO OUTPUT ON MPATAP
#endif
#if !__STACKIN__ && !__CONEX__
C  FOUTFILE    = FLAG INDICATING FIRST INTERACTION STACK OUTPUT
#endif
C  FPAROUT     = FLAG INDICATING PARTICLE OUTPUT
C  FPRINT      = LOGICAL VARIABLE TO STEER PRINTING
#if __PRESHOWER__
C  FPRSTP      = FLAG TO STOP EVENT IF NO PRESHOWERING
#endif
#if __QGSJET__
C  FQGS        = FLAG TO ACTIVATE QGSJET INTERACTION ROUTINES
C  FQGSSG      = FLAG TO ACTIVATE QGSJET CROSS-SECTIONS
#endif
C  FRACTN      = NITROGEN FACTION OF INELASTIC AIR CROSS-SECTION
C  FRCTNO      = NITROGEN+OXYGEN FACTION OF INELASTIC AIR CROSS-SECTION
#if __ATMEXT__
C  FREFRX      = FLAG INDICATING REFRACTIVE INDEX IS TAKEN
#endif
#if __VENUS__
C  FRNOVKL(11) = TABLE OF LOGARITHM OF KAON 14N+16O CROSS-SECTION
C  FRNOVPIL(11)= TABLE OF LOGARITHM OF PION 14N+16O CROSS-SECTION
C  FRNOVPL(11) = TABLE OF LOGARITHM OF NUCL 14N+16O CROSS-SECTION
C  FRNVKL(11)  = TABLE OF LOGARITHM OF KAON 14N     CROSS-SECTION
C  FRNVPIL(11) = TABLE OF LOGARITHM OF PION 14N     CROSS-SECTION
C  FRNVPL(11)  = TABLE OF LOGARITHM OF NUCLEON 14N  CROSS-SECTION
#endif
#if __SIBYLL__
C  FSIBSG      = FLAG TO ACTIVATE SIBYLL CROSS-SECTIONS
C  FSIBYL      = FLAG TO ACTIVATE SIBYLL ROUTINES
C  FSIBCH      = FLAG TO ACTIVATE CHARM PRODUCTION IN SIBYLL  
#endif
C  FTABOUT     = FLAG INDICATING TABLE OUTPUT
#if __AUGERHIT__
C  FTANKSHADW  = FLAG INDICATING TANK SHADOW HIT IS ENABLED
#endif
#if __URQMD__
C  FURQMD      = FLAG INDICATING USE OF URQMD
C  FURQSG      = FLAG INDICATING THAT URQMD SIGMA IS AVAILABLE
#endif
#if __VENUS__
C  FVENUS      = FLAG TO ACTIVATE VENUS ROUTINES
C  FVENSG      = FLAG TO ACTIVATE VENUS CROSS-SECTIONS
#endif
C
#if __INTTEST__
C  GACM        = GAMMA IN CENTER OF MASS SYSTEM
#endif
C  GAMMA       = CURPAR(1)
C  GAM345(3)   = GAMMA FACTOR OF PARTICLE EMERGING FROM 3 BODY DECAY
C  GCM         = CURPAR(11)
C  GEN         = GENERATION OF PARTICLE
#if __TRAJECT__
C  GEODECL     = GEOGRAPHIC DECLINATION OF TELESCOPE
#endif
C  GHEISDB     = FLAG TO ACTIVATE GHEISHA DEBUG OUTPUT
C  GHEISH      = FLAG TO ACTIVATE GHEISHA ROUTINES
C  GHESIG      = FLAG TO INDICATE THAT GHEISHA CROSS-SECTION IS USED
#if __PRESHOWER__
C  GLATI       = GEOGRAPHICAL LATITUDE  OF EXPERIMENT POSITION
C  GLONG       = GEOGRAPHICAL LONGITUDE OF EXPERIMENT POSITION
#endif
C  GLE         = LOGARITHM OF GAMMA ENERGY
C  GNU         = # OF COLLISIONS IN TARGET (HDPM)
#if __PRESHOWER__
C  GRFYEAR     = YEAR OF EXPERIMENT
#endif
C  G_ARRAY     = ARRAY FOR GAMMAS IN BINS IN ENERGY, TIME, CORE DISTANCE
C
C  H           = CURPAR(5)
C  HBARO       = BAROMETRIC EXPONENT OF ATMOSPHERIC LAYER (EGS4)
C  HBAROI      = INVERSE OF BAROMETRIC EXP. OF ATMOSPHERIC LAYER (EGS4)
C  HEIGHP      = HEIGHT OF FIRST INTERACTION
#if __CURVED__
C  HAPP        = CURPAR(14) APPARENT HEIGHT IN CARTESIAN COORD. SYSTEM
#endif
#if __INTTEST__
C  HCT(.)      = PARTICLE COS(THETA)                  FOR HISTOGRAMMING
C  HEN(.)      = PARTICLE ENERGY                      FOR HISTOGRAMMING
C  HENL(.)     = PARTICLE ENERGY IN LABORATORY        FOR HISTOGRAMMING
#endif
#if __ANAHIST__
C  HEIGHPS     = HEIGHT OF FIRST INTERACTION
C  HEITH       = (MASS OVERLAY OF FIRST INTERACTION)
#endif
#if __AUGERHIST__
C  HEIGHTP     = HEIGHT OF FIRST INTERACTION
#endif
#if __SLANT__
C  HGROUND     = ALTITUDE OF GROUND (= OBSLEV(1))
#endif
#if __INTTEST__
C  HILI(.)     = BIN WIDTH                            FOR HISTOGRAMMING
#endif
C  HILOECM     = ENERGY THRESHOLD FOR HIGH ENERGY MODEL IN CM
C  HILOELB     = ENERGY THRESHOLD FOR HIGH ENERGY MODEL IN LAB
#if __CURVED__&&__UPWARD__
C  HIMPACT(2)  = RANGE OF MINIMAL HEIGHT (IMPACT) FOR SKIMMING PRIMARY
C  HIMPCT      = ACTUAL IMPACT PARAMTER FOR SKIMMING PRIMARY
#endif
#if __INTTEST__
C  HISTDS(.)   = DATA SET NAME OF HISTOGRAM OUTPUT OF INTTEST VERSION
C  HIT(.)      = PARTICLE TYPE                        FOR HISTOGRAMMING
#endif
C  HLAY(6)     = ALTITUDE OF ACTUAL ATMOSPHERIC LAYER BOUNDARIES
#if __SLANT__
C  HLAYC(6)    = LAYER BOUNDARY (CM) FOR SLANT DEPTH CALCULATION
C  HLAYS(6)    = SLANT PATH FROM TOP OF ATMOSPHERE TO LAYER BOUNDARY
#endif
C  HLAY0(5,..) = ALTITUDE OF ATMOSPHERIC LAYER BOUNDARIES
C  HLONG(I)    = THE HEIGHT VALUES IN CM FOR THE LEVELS IN G/CM**2
#if __INTTEST__
C  HMA(.)      = PARTICLE MASS                        FOR HISTOGRAMMING
#endif
C  HOST        = NAME OF HOST COMPUTER IN USE
#if __INTTEST__
C  HPHI(.)     = PARTICLE PHI ANGLE                   FOR HISTOGRAMMING
C  HPL(.)      = PARTICLE LONGITUDINAL MOMENTUM       FOR HISTOGRAMMING
C  HPP(.)      = PARTICLE TOTAL MOMENTUM              FOR HISTOGRAMMING
C  HPR(.)      = PARTICLE PSEUDO RAPIDITY             FOR HISTOGRAMMING
C  HPT(.)      = PARTICLE TRANSVERERSE MOMENTUM       FOR HISTOGRAMMING
C  HPT2(.)     = SQUARED  TRANSVERERSE MOMENTUM       FOR HISTOGRAMMING
C  HPX(.)      = X-DIRECTION TRANSVERSE MOMENTUM      FOR HISTOGRAMMING
C  HPY(.)      = Y-DIRECTION TRANSVERSE MOMENTUM      FOR HISTOGRAMMING
C  HSPEC(.)    = +-1 IF SPECTATOR                     FOR HISTOGRAMMING
C  HST(.)      = PARTICLE SIN(THETA)                  FOR HISTOGRAMMING
C  HTH(.)      = PARTICLE ANGLE THETA                 FOR HISTOGRAMMING
C  HXF(.)      = PARTICLE FEYNMAN X                   FOR HISTOGRAMMING
C  HXFL(.)     = PARTICLE FEYNMAN X (LOG)             FOR HISTOGRAMMING
C  HXFCM(.)    = PARTICLE FEYNMAN X IN CM SYSTEM      FOR HISTOGRAMMING
C  HYR(.)      = PARTICLE RAPIDITY                    FOR HISTOGRAMMING
#endif
C
C  IALT(2)     = # OF LEVELS IN NKG FOR WHICH ELECT.DENSITIES ARE CALCUL
#if __QGSJET__
C  IAPP        = NUMBER OF NUCLEONS IN PROJECTILE NUCLEUS
C  IATT        = NUMBER OF NUCLEONS IN TARGET NUCLEUS
#endif
#if __ATMEXT__
C  IATMOX      = MODTRAN ATMOSPHERIC MODEL NUMBER
#endif
C  IA1 ... IJ1 = LOWER BOUNDARY OF PARTICLE SPECIES IN HDPM
C  IA2 ... II2 = UPPER BOUNDARY OF PARTICLES 3RD STRING IN HDPM
#if __CERENKOV__
C  ICERML      = NUMBER OF MULTIPLE CHERENKOV ARRAYS
#endif
#if __FLUKA__
C  ICFTABL     = CONVERSION TABLE PARTICLE CODE CORSIKA TO FLUKA
#endif
C  ICOUNT      = POSITION OF PARTICLE WITHIN STACK
#if __QGSJET__
C  ICPP        = PROJECTILE TYPE
#endif
#if __DPMJET__
C  ICTABL(.)   = TABLE TO CONVERT PARTICLE TYPE FROM CORSIKA TO DPMJET
#endif
#if __QGSJET__
C  ICTABL(.)   = TABLE TO CONVERT PARTICLE TYPE FROM CORSIKA TO QGSJET
#endif
#if __SIBYLL__
C  ICTABL(.)   = TABLE TO CONVERT PARTICLE TYPE FROM CORSIKA TO SIBYLL
#endif
C  IDBIN       = PARAMETER # OF DISTANCE BINS
#if __CONEX__
C  IDCX        = ID OF PRIMARY PARTICLE FOR CONEX
#endif
C  IDIF        = DIFFRACTION FLAG IN HDPM
C  IDISC       = FLAG INDICATING PARTICLE IS TO BE DISCARDED
#if __DPMJET__
C  IDPMVER     = DPMJET VERSION NUMBER * 10
#endif
#if __NEXUS__ || __VENUS__  || __EPOS__
C  IDTABL(.)   = CONVERSION TABLE CORSIKA CODE TO NEXUS/VENUS CODE
#endif
C  IEBIN       = PARAMETER # OF ENERGY BINS
C  IELDPA(.)   = ELASTICITY STATISTICS IN DUAL PARTON MODELL FOR ALL
C  IELDPM(.)   = ELASTICITY STATISTICS IN DUAL PARTON MODELL FOR SHOWER
#if __SLANT__
C  IENDT       = LAST BIN FOR SLANT DEPTH INTERPOLATION
#endif
#if __FLUKA__
C  IFCTABL     = CONVERSION TABLE PARTICLE CODE FLUKA TO CORSIKA
#endif
#if !__STACKIN__ && !__CONEX__
C  IFINAM      = # PART. PRODUCED IN FIRST INTERACTION
#endif
C  IFINCM      = # CHARMED PART. PRODUCED IN FIRST INTERACTION
C  IFINET      = # ETAS PRODUCED IN FIRST INTERACTION
C  IFINHY      = # STRANG BARYONS PRODUCED IN FIRST INTERACTION
C  IFINKA      = # KAONS PRODUCED IN FIRST INTERACTION
C  IFINNU      = # NUCLEONS PRODUCED IN FIRST INTERACTION
C  IFINOT      = # OTHER HADRONS PRODUCED IN FIRST INTERACTION
C  IFINPI      = # PIONS PRODUCED IN FIRST INTERACTION
C  IFINRHO     = # RHO MESONS PRODUCED IN FIRST INTERACTION
#if __CHARM__ || __TAULEP__ || __SIBYLL__
C  IFLGPYE     = ERROR FLAG FOR PYTHIA ERROR OUTPUT
C  IFLGPYW     = WARNING FLAG FOR PYTHIA WARNING OUTPUT
#endif
C  IGEN(NP)    = GENERATION COUNTER OF PARTICLE ON EGS STACK
C  IHBIN(40)   = COUNTER FOR STRANGE BARYON TABLE FOR SHOWER
C  IHYCHI(124) = INTERACTION LENGTH STATISTICS FOR STRANGE BARYONS
C  IKACHI(124) = INTERACTION LENGTH STATISTICS FOR KAONS
C  IKBIN(40)   = COUNTER FOR KAON TABLE FOR SHOWER
C  IJKL(.)     = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  IMUCHI(124) = INTERACTION LENGTH STATISTICS FOR MUONS
C  INBIN(40)   = COUNTER FOR NUCLEON TABLE FOR SHOWER
C  INECHI(124) = INTERACTION LENGTH STATISTICS FOR NEUTRINOS
#if __INTTEST__
C  INEL(.)     = INELASTICITY                         FOR HISTOGRAMMING
#endif
#if __CONEX__
C  INLUN       = INPUT UNIT FOR CONEX
#endif
C  INNCHI(124) = INTERACTION LENGTH STATISTICS FOR NUCLEI
C  INT_ICOUNT  = POINTER FOR INTERMEDIATE PARTICLE STACK
C  INUCHI(124) = INTERACTION LENGTH STATISTICS FOR NUCLEONS
C  IOBS(NP)    = # OF NEXT OBSERVATION LEVEL FOR PARTICLE ON EGS STACK
C  IPBIN(40)   = COUNTER FOR PION TABLE FOR SHOWER
C  IPICHI(124) = INTERACTION LENGTH STATISTICS FOR PIONS
#if __PRESHOWER__
C  IPREPR      = PRESHOWER PRINT FLAG: 0=NEVER, 1=(MAXPRT), 2=EVER
C  IPRSTP      = FLAG ENABLING TO STOP EVENT IF NO PRESHOWERING
#endif
#if __CHARM__ || __TAULEP__ || __SIBYLL__
C  IPTABL(.)   = CONVERSION TABLE CORSIKA CODE TO PYTHIA CODE
#endif
C  IQ(NP)      = PARTICLE IDENTIFIER (EGS)
#if __QGSJET__
C  IQGSVER     = QGSJET VERSION NUMBER * 10
C  IQTABL      = TABLE TO CONVERT PARTICLE TYPE FROM QGSJET TO CORSIKA
#endif
C  IR(NP)      = ACTUAL ATMOSPHERIC LAYER OF PARTICLE ON EGS STACK
#if __DPMJET__ || __NEXUS__ || __QGSJET__  || __EPOS__
C  IRAND(3)    = RANDOM GENERATOR STATUS AT BEGIN OF HADR. INTERACTION
#endif
C  IRECOR      = # WORDS WRITTEN ON PARTICLE TAPE RECORDS
C  IRESPAR     = POINTER FOR ARRAY RESRAN
C  IRET1       = RETURN CODE; IRET1=1: PARTICLE CUTTED
C  IRET2       = RETURN CODE; IRET2=1: PARTICLE CUTTED IN UPDATE
C  IRETE       = RETURN CODE; IRETE=T: ENERGY CUT (LOGICAL) IN UPDATE
C  IRNEW       = INDEX OF NEW ATMOSPHERIC LAYER
C  IROLD       = INDEX OF OLD ATMOSPERIC LAYER
#if __SIBYLL__
C  ISDEBUG     = PRESELECTED DEBUG LEVEL FOR SIBYLL
#endif
C  ISEED(.,.)  = RANDOM GENERATOR SEED
C  ISEED1I(3)  = RANDOM GENERATOR SEED AFTER FIRST INTERACTION
C  ISEL        = INDICATOR FOR LOW MULTIPLICITY OF SEC.PARTICLES (HDPM)
C  ISHOWNO     = # OF ACTUAL SHOWER
C  ISHW        = INDEX OF SHOWER LOOP
#if __INTTEST__
C  ISHWW       = INDEX OF SHOWER COUNTER FOR INTTEST
#endif
#if __NEXUS__  || __EPOS__
C  ISH0N       = PARAMETER TO STEER AMOUNT OF NEXUS DEBUG OUTPUT
#endif
#if __VENUS__
C  ISH00       = PARAMETER TO STEER AMOUNT OF VENUS DEBUG OUTPUT
#endif
#if __SIBYLL__
C  ISIBDB      = ACTUAL      DEBUG LEVEL FOR SIBYLL
#endif
C  ISPEC       = 0 FOR FIXED ENERGY   = 1 FOR ENERGY SPECTRUM
#if __SIBYLL__
C  ISTABL(.)   = TABLE TO CONVERT PARTICLE TYPE FROM SIBYLL TO CORSIKA
#endif
#if __CONEX__
C  ISX0        = CONEX DEBUG LEVEL AT START
#endif
C  ITAR        = PARTICLE CODE OF TARGET NUCLEON IN HDPM
C  ITBIN       = PARAMETER # OF ARRIVAL TIME BINS
#if __INTTEST__
C  ITPRO       = PARTICLE TYPE OF PROJECTILE          FOR HISTOGRAMMING
C  ITTAR       = TARGET TYPE                          FOR HISTOGRAMMING
#endif
C  ITYP(3000)  = PARTICLE TYPE OF SECONDARY PARTICLE IN HDPM
C  ITYPE       = CURPAR(0)  PARTICLE TYPES ACCORDING TO GEANT
C                IN ADDITION : A*100+Z=HEAVY NUCLEI (FOR PRIMARIES ONLY)
#if __URQMD__
C  IUDEBUG     = ACTUAL DEBUG LEVEL FOR URQMD
C  IUDEBG0     = PRESET DEBUG LEVEL FOR URQMD
#endif
#if __VENUS__
C  IVERVN      = VENUS VERSION *1000 AS INTEGER
#endif
#if __PLOTSH2__
C  IXRES       = RESOLUTION OF PROJECTION MAPS IN X DIRECTION
C  IYRES       = RESOLUTION OF PROJECTION MAPS IN Y DIRECTION
C  IZRES       = RESOLUTION OF PROJECTION MAPS IN Z DIRECTION
#endif
#if _PARALLEL__ 
C  I1CUTPAR    = FIRST INDICE OF PARTICULE TO READ FROM CFILINP
C  I2CUTPAR    = LAST INDICE OF PARTICULE TO READ FROM CFILINP
#endif
C  I97(.)      = ARRAY(KSEQ) FOR RANDOM GENERATOR
C
C  JCLOCK      = PRESET COUNTER FOR EGS-DEBUG ACTIVATION
#if __PARALLEL__
C  JCOUNT      = POSITION OF PARTICLE WITHIN 2ND STACK
#endif
#if __NUPRIM__
C  JPROC       = TYPE OF PROCESS IN FIRST NEUTRINO INTERACTION
#endif
C  JSEQ        = ACTUAL SEQUENCE NUMBER
#if __NUPRIM__
C  JSTCKFI     = STACK FOR PRIMARY HERWIG PRODUCT PARTICLES
#endif
C  J97(.)      = ARRAY(KSEQ) FOR RANDOM GENERATOR
C
C  KK          = NUMBER OF TARGET COMPONENTS (GHEISHA)
C  KNOR        = FLAG TO STEER GENERATION OF NORMAL DISTRIBUTED RANDOMS
C  KSEQ        = PARAMETER DEFINING MAX. NUMBER OF INDEPENDENT SEQUENCES
C
C  LASTPI      = # OF CHARGED PIONS CREATED/DELETED BY CHARGE EXCHANGE
C  LAYNEW      = FLAG INDICATING NEW ATMOSPHERIC LAYER BOUNDARIES
C  LAYNO(..)   = POINTER OF ATMOSPHERE MODEL TO LAYER NUMBER
#if __CERENKOV__
C  LCERDB      = FLAG FOR DEBUG OUTPUT IN CHERENKOV PART
#endif
C  LEPAR1      = TYPE OF LEADING PARTICLE BEFORE / AFTER CHARGE EXCHANGE
C  LEPAR2      = TYPE OF TARGET  PARTICLE BEFORE / AFTER CHARGE EXCHANGE
#if __INTTEST__
C  LETA        = FLAG FOR DECAY OF ETA
#endif
C  LEVL        = LEVEL # OF PARTICLE WRITTEN TO TAPE
#if __DPMJET__
C  LEVLDB      = LEVEL OF DEBUG OUTPUT IN CASE OF DEBUGGIUNG
#endif
#if __QGSJET__
C  LEVLDQ      = LEVEL OF DEBUG OUTPUT IN CASE OF DEBUGGIUNG
#endif
C  LH          = BUFFER POINTER
#if __CERENKOV__
C  LHCER(..)   = CHERENKOV BUFFER POINTER
#endif
C  LHEIGH      = STEP NUMBER AT INTERACTION POINT
#if __INTTEST__
C  LHYP        = FLAG FOR DECAY OF HYPERONS
C  LK0S        = FLAG FOR DECAY OF K0S
#endif
C  LL          = USED FOR PRIMARY ENERGY SELECTION
C  LLIMIT      = LOWER LIMIT OF ENERGY SECTION FOR PRIMARY (GEV)
C  LLONGI      = LOGICAL TO STEER THE SAMPLING OF LONGITUDINAL DISTRIBUTION
C  LNGMAX      = MAXIMUM ARRAY LENGTH OF LONGI ARRAYS
C  LPCTE(NP)   = INDEX OF LONGITUDINAL LAYER FOR PARTICLE ON EGS STACK
#if __INTTEST__
C  LPI0        = FLAG FOR DECAY OF PI0
#endif
#if __PARALLEL__
C  FPRIM       = PRIMARY INTERACTION (T) OR NOT (F)
#endif
#if __INTTEST__
C  LSPEC       = FLAG FOR USE OF SPECTATOR NUCLEONS
#endif
C  LSTCK       = LUN OF PARTICLE PARAMETES INPUT/OUTPUT FILE
#if !__STACKIN__ && !__CONEX__
C  LSTCK1      = LUN OF FIRST INT PARTICLE PARAMETERS HEADER
C  LSTCK2      = LUN OF FIRST INT PARTICLE PARAMETERS LIST
#endif
C  LIT         = INDEX FOR INTERACTING TARGET (1=N, 2=0, 3=A)
#if __CURVED__
C  LTMLMPR     = FLAG FOR PRINTING OF PARTICLE EXCEEDS TIME LIMIT
#endif
c#if __ANAHIST__||__AUGERHIST__||__MUONHIST__
cC  LUNHST      = LUN OF HBOOK HISTOGRAM OUTPUT
c#endif
#if __INTTEST__
C  LUNPLT      = LUN OF HBOOK HISTOGRAM OUTPUT
#endif
C
C  MALPHA(20)  = MEAN # OF ALPHAS WRITTEN TO TAPE PER LEVEL
#if __AUGERHIT__
C  MAUGPOS     = NUMBER OF MULTIPLE AUGER ARRAYS
C  MAUGPS2     = NUMBER OF AUGER ARRAYS SET BY INPUT LINE
#endif
#if __URQMD__
C  MAXA        = MAXIMUM NUCLEON NUMBER FOR PROJECTILE NUCLEUS
#endif
#if __CERENKOV__
C  MAXBF2      = MAXIMUM BUFFER SIZE FOR CHERENKOV PHOTONS
#endif
C  MAXBUF      = PARAMETER FOR MAXIMAL BUFFER SIZE
#if __URQMD__
C  MAXCLU      = PARAMETER MAXIMUM CLUSTERS
C  MAXENT      = PARAMETER MAXIMUM
#endif
C  MAXICOUNT   = PARAMETER FOR MAXIMAL INTERMEDIATE STACK SIZE
C  MAXLEN      = PARAMETER FOR SIZE OF PARTICLE FIELDS
C  MAXPRT      = NUMBER OF SHOWERS TO BE PRINTED
#if __SLANT__
C  MAXSLANT    = # OF POINTS FOR SLANT THICKNSS FUNCTION
C  MAXSLANT2   = # OF POINTS FOR SLANT THICKNSS FUNCTION IN ATM. LAYER
#endif
C  MAXSTK      = PARAMETER FOR MAXIMAL STACK SIZE
#if __URQMD__
C  MAXS        = MAXIMUM PARTICLE  NUMBER FOR PROJECTILE
C  MAXZ        = MAXIMUM ATOMIC NUMBER FOR PROJECTILE NUCLEUS
#endif
#if __INTTEST__
C  MCLA(.)     = ENTRIES PER PARTICLE CLASS           FOR HISTOGRAMMING
C  MCM         = FLAG FOR CM CALCULATIONS             FOR HISTOGRAMMING
#endif
#if __CERENKOV__
C  MCERFI      = OUTPUT MODE STEERING FOR CHERENKOV PHOTONS
C  MCETAP      = LUN OF DATASET FOR CHERENKOV PHOTONS OUTPUT
#if __CEFFIC__
C  MCERABS     = LUN FOR READ IN OF ATMOSPHERIC ABSORPTION OF CHERENKOV
C  MCERQEF     = LUN FOR READ IN OF QUANTUM EFFICIENCY OF CHERENKOV
C  MCERMIR     = LUN FOR READ IN OF MIRROR REFLECTIVITY OF CHERENKOV
#endif
#endif
C  MCHRMM(20)  = MEAN # OF CHARMED MESONS WRITTEN TO TAPE PER LEVEL
C  MCHRMB(20)  = MEAN # OF CHARMED BARYONS WRITTEN TO TAPE PER LEVEL
C  MDBASE      = LUN OF DATABASE FILE
C  MDEBUG      = LUN OF DEBUG OUTPUT
C  MDEUT(20)   = MEAN # OF DEUTERONS WRITTEN TO TAPE PER LEVEL
C  MELECT(20)  = MEAN # OF E- WRITTEN TO TAPE PER LEVEL
C  MEXST       = LUN OF SCRATCH DSN FOR EXTERNAL STACK
#if __PARALLEL__
C  MEXSTJ      = LUN OF SCRATCH DSN FOR EXTERNAL STACK
#endif
#if __CERENKOV__&&__CURVED__
C  MHEIGH      = PARAMETER NUMBER OF VALUES IN HEIGHT
#endif
C  MHELI3(20)  = MEAN # OF 3HELIUM WRITTEN TO TAPE PER LEVEL
C  MHYP(20)    = MEAN # OF STRANGE BARYONS WRITTEN TO TAPE PER LEVEL
#if __CERENKOV__&&__CEFFIC__
C  MIRREF      = ARRAY WITH MIRROR REFLECTIVITIES AS FCT. OF LAMBDA
#endif
C  MKMI(20)    = MEAN # OF K - WRITTEN TO TAPE PER LEVEL
C  MKPL(20)    = MEAN # OF K + WRITTEN TO TAPE PER LEVEL
C  MK0L(20)    = MEAN # OF K0L WRITTEN TO TAPE PER LEVEL
C  MK0S(20)    = MEAN # OF K0S WRITTEN TO TAPE PER LEVEL
C  MLONGOUT    = LUN OF LONGITUDINAL TABLE OUTPUT
#if __NUPRIM__
C  MM          = # OF ACCEPTED HERWIG EVENTS
#endif
C  MMUM(20)    = MEAN # OF MU- WRITTEN TO TAPE PER LEVEL
C  MMUOND      = MEAN # OF MUONS DECAYED TO ELECTRONS/POSITRONS
C  MMUONE      = MEAN # OF MUONS ELIMINATED BECAUSE OF ENERGY/ANGULAR CUT
C  MMUP(20)    = MEAN # OF MU+ WRITTEN TO TAPE PER LEVEL
C  MNEUTB(20)  = MEAN # OF ANTINEUTRONS WRITTEN TO TAPE PER LEVEL
C  MNEUTR(20)  = MEAN # OF NEUTRONS WRITTEN TO TAPE PER LEVEL
C  MNU(20)     = MEAN # OF NEUTRINOS WRITTEN TO TAPE PER LEVEL
C  MODATM      = INDEX OF ATMOSPHERIC MODEL
C  MODCNS      = MODULUS (NOTOT * MODCNS = NTOT2) FOR RANDOM GENERATOR
#if __THIN__
C  MODETHN     = MODE FOR READING IN THIN VARIABLES
#endif
C  MONIIN      = LUN OF CARD READER
C  MONIOU      = LUN OF LINE PRINTER
C  MOTHER(20)  = MEAN # OF OTHER PARTICLES WRITTEN TO TAPE PER LEVEL
#if __PARALLEL__
C  MPACUT      = LUN OF ECUT PARTICLES OUTPUT FILE
C  MPAINP      = LUN OF STEERING FILES FOR INPUT
#endif
C  MPARTO(.)   = ARRAY FOR MEAN # OF PARTICLES
C  MPATAP      = LUN OF DATASET FOR PARTICLE OUTPUT
C  MPHOTO(20)  = MEAN # OF GAMMAS WRITTEN TO TAPE PER LEVEL
#if __PARALLEL__
C  MPIID       = JOB NUMBER
#endif
C  MPIM(20)    = MEAN # OF PI- WRITTEN TO TAPE PER LEVEL
C  MPIP(20)    = MEAN # OF PI+ WRITTEN TO TAPE PER LEVEL
C  MPI0(20)    = MEAN # OF PI(0) WRITTEN TO TAPE PER LEVEL
C  MPOSIT(20)  = MEAN # OF E+ WRITTEN TO TAPE PER LEVEL
C  MPROTB(20)  = MEAN # OF ANTIPROTONS WRITTEN TO TAPE PER LEVEL
C  MPROTO(20)  = MEAN # OF PROTONS WRITTEN TO TAPE PER LEVEL
C  MSMM        = MULTIPLICITY FOR ENERGY-MULTIPLICITY MATRIX
C  MSTACKP     = STACK POINTER
#if __PARALLEL__
C  MSTACKPJ    = 2ND STACK POINTER
#endif
C  MT          = FLAG INDICATING MU(=1) OR TAU(=2)
C  MTABOUT     = LUN OF TABLE OUTPUT FOR CHARGED PARTICLES
#if __VENUS__
C  MTAR99      = INDICATOR FOR TARGET IN VENUS/NEXUS WITH INTERACTIONTEST
#endif
C  MTRIT(20)   = MEAN # OF TRITONS WRITTEN TO TAPE PER LEVEL
C  MULTMA(.)   = ENERGY-MULTIPLICITY MATRIX FOR SHOWER
C  MULTOT(.)   = ENERGY-MULTIPLICITY MATRIX FOR SHOWER GROUP
C  MVDATE      = DATE OF VERSION AS INTEGER (YYYYMMDD)
#if __THIN__
C  MWGHMA(,)   = WEIGHT MATRIX OF SINGLE SHOWER
C  MWGHTOT(,)  = TOTALIZED WEIGHT MATRIX OF ALL SHOWERS
#endif
C  M_ARRAY     = ARRAY FOR MUONS IN BINS IN ENERGY, TIME, CORE DISTANCE
C
C  NALPHA(20)  = # OF ALPHAS WRITTEN TO TAPE PER LEVEL
C  NBLKS       = # OF SMALL BLOCKS PUT OUT (FOR TP)
#if __CERENKOV__
C  NCERBUF     = NUMBER OF CERBUF OUTPUT BUFFERS
C  NCERTEL     = # OF CHERENKOV TELESCOPES
C  NCERX       = NUMBER OF DETECTORS IN X DIRECTION
C  NCERY       = NUMBER OF DETECTORS IN Y DIRECTION
#endif
C  NCH         = # OF CHARGED PARTICLES (HDPM)
C  NCHRMM(20)  = # OF CHARMED MESONS WRITTEN TO TAPE PER LEVEL
C  NCHRMB(20)  = # OF CHARMED BARYONS WRITTEN TO TAPE PER LEVEL
C  NCLOCK      = ACTUAL ELECTRON COUNTER FOR EGS-DEBUG
#if __URQMD__
C  NCLUSTER    =
C  NCLUENT     =
C  NCLUST      =
#endif
C  NCPLUS      = POSITIVE CHARGE EXCESS BY RESONANCE/CHARGE EXCHANGE
C  NDEBDL      = NUMBER OF MAPPED PARTICLE THAT ACTIVATES DELAYED DEBUG
C  NDEUT(20)   = # OF DEUTERONS WRITTEN TO TAPE PER LEVEL
#if __INTTEST__
C  NDIF        = FLAG FOR DIFFRACTION/NON DIFFRACTION
#endif
C  NELECT(20)  = # OF ELECTRONS WRITTEN TO TAPE PER LEVEL
C  NET         = TOTAL # OF ETAS  (HDPM)
C  NETA(I,K)   = # OF ETAS  IN 1ST + 2ND / 3RD STRING (HDPM)
C                SEPARATELY DEFINED FOR EACH DECAY MODE K
C  NETAS(I)    = # OF ETAS                 IN 1ST + 2ND / 3RD STRING
C  NEUTOT      = TOTAL # OF NEUTRAL PARTICLES  IN HDPM
C  NEWOBS      = POINTER FOR NEXT OBSERVATIONLEVEL (EGS4)
#if __NEXUS__  || __EPOS__
C  NEXPRM      = LUN FOR NEXUS PARAMETER SCRATCH FILE
C  NEXVER      = NUMBER OF NEXUS VERSION
#endif
C  NFLAIN      = 0  RANDOM NUMBER OF INTERACTIONS IN AIR TARGET
C              = 1  FIXED  NUMBER OF INTERACTIONS IN AIR TARGET
C  NFLCHE      = 0  CHARGE EXCHANGE INTERACTION POSSIBLE
C              = 1  NO CHARGE EXCHANGE INTERACTION POSSIBLE
C  NFLDIF      = 0  NO DIFFRACTIVE INTERACTION IF NFLAIN = 0 AND MORE
C                   THAN 1 INTERACTION
C  NFLPIF      = 0  NO FLUCTUATION OF NUMBER OF PI0
C              = 1  FLUCTUATION OF NUMBER OF PI0 AS SEEN IN COLLIDER
C  NFLPI0      = 0  RAPIDITY OF PI0 TREATED ACCORDING TO COLLIDER DATA
C              = 1  RAPIDITY OF PI0 SAME AS THAT OF CHARGED
C  NFRAGM      = 0  TOTAL FRAGMENTATION OF PRIMARY NUCLEUS IN 1.INTERACT
C              = 1  NO FRAGMENTATION AND NO EVAPORATION
C              = 2  REALISTIC FRAGMENTATION OR EVAPORATION (PT AFTER JACEE)
C              = 3  REALISTIC FRAGMENTATION OR EVAPORATION (PT AFTER GOLDHABER)
C              = 4  REALISTIC FRAGMENTATION OR EVAPORATION WITH PT-0
C  NFROM       = # OF PARTICLES READ FROM STACK
#if __PARALLEL__
C  NFROMJ      = # OF PARTICLES READ FROM 2ND STACK
#endif
C  NHC         = # OF CHARGED STRANGE BARYON PAIRS  (HDPM)
C  NHELI3(20)  = # OF 3HELIUM WRITTEN TO TAPE PER LEVEL
C  NHN         = TOTAL # OF NEUTR.STR.BAR. PAIRS    (HDPM)
C  NHYP(20)    = # OF STR. BARYONS WRITTEN TO TAPE PER LEVEL
C  NHYPN(.)    = # OF NEUTR.STR.BAR.PAIRS  IN 1ST + 2ND / 3RD STRING
C  NKA0(.)     = # OF NEUTRAL KAON  PAIRS  IN 1ST + 2ND / 3RD STRING
C  NKC         = # OF CHARGED KAON  PAIRS  (HDPM)
C  NKMI(20)    = # OF K- WRITTEN TO TAPE PER LEVEL
C  NKN         = TOTAL # OF NEUTRAL KAON   PAIRS  (HDPM)
C  NKPL(20)    = # OF K+ WRITTEN TO TAPE PER LEVEL
C  NK0L(20)    = # OF K0L WRITTEN TO TAPE PER LEVEL
C  NK0S(20)    = # OF K0S WRITTEN TO TAPE PER LEVEL
#if __CERENKOV__
C  NMAXCERTEL  = MAX # OF CHERENKOV TELESCOPES
#endif
#if __MULTITHIN__
C  NMTHIN      = # OF MULTITHIN MODES
#endif
C  NMUM(20)    = # OF MU- WRITTEN TO TAPE PER LEVEL
C  NMUOND      = # OF MUONS DECAYED TO ELECTRONS/POSITRONS
C  NMUONE      = # OF MUONS ELIMINATED BECAUSE OF ENERGY/ANGULAR CUT
C  NMUP(20)    = # OF MU+ WRITTEN TO TAPE PER LEVEL
C  NNC         = # OF PROTON/ANTIPROTON PAIRS  (HDPM)
C  NNEUTB(20)  = # OF ANTINEUTRONS WRITTEN TO TAPE PER LEVEL
C  NNEUTR(20)  = # OF NEUTRONS WRITTEN TO TAPE PER LEVEL
#if __INTTEST__
C  NNI         = TOTAL # OF PARTICLES FROM INTERACT   FOR HISTOGRAMMING
#endif
C  NNN         = TOTAL # OF NEUTRON/ANTINEUTRON PAIRS (HDPM)
#if __NEXUS__  || __EPOS__
C  NNPARM      = NUMBER OF NEXUS PARAMETERS READ BY DATAC
#endif
C  NNU(20)     = # OF NEUTRINOS WRITTEN TO TAPE PER LEVEL
C  NNUCN(.)    = # OF NEUTRON PAIRS  IN 1ST + 2ND / 3RD STRING (HDPM)
C  NOBSLV      = # OF OBSERVATION LEVELS
#if __CERENKOV__
C  NOCERB      = COUNTER FOR CHERENKOV BUNCHES WRITTEN TO TAPE
#endif
C  NOPART      = COUNTER FOR PARTICLES WRITTEN TO TAPE
C  NOTHER(20)  = # OF OTHER PARTICLES WRITTEN TO TAPE PER LEVEL
C  NOUREC      = # OF STACK OUTPUT RECORDS
C  NOURECMAX   = MAX # OF STACK OUTPUT RECORDS
#if __PARALLEL__
C  NOURECJ     = # OF OUTPUT RECORDS in 2ND STACK
#endif
C  NP          = STACK POINTER OF PARTICLE ON EGS STACK
#if __VENUS__
C  NPARAM      = NUMBER OF VENUS PARAMETERS READ BY DATAC
#endif
C  NPARTO(.)   = ARRAY CONTAINING  # OF PARTICLES AT OBSERVATION LEVEL
C  NPART2(.)   = ARRAY CONTAINING  # OF PARTICLES AT OBSERVATION LEVEL
C  NPC         = # OF CHARGED PIONS (HDPM)
C  NPHOTO(20)  = # OF GAMMAS WRITTEN TO TAPE PER LEVEL
C  NPIM(20)    = # OF PI- WRITTEN TO TAPE PER LEVEL
C  NPIP(20)    = # OF PI+ WRITTEN TO TAPE PER LEVEL
C  NPIZER(.)   = # OF PI(0)S IN 1ST + 2ND / 3RD STRING (HDPM)
C  NPI0(20)    = # OF PI(0) WRITTEN TO TAPE PER LEVEL
#if __PLOTSH__
C  NPLEM       = NUMBER OF TRACKS OF EM PARTICLES FOR PLOT
C  NPLHAD      = NUMBER OF TRACKS OF HADRONS      FOR PLOT
C  NPLMU       = NUMBER OF TRACKS OF MUONS        FOR PLOT
#endif
C  NPN         = TOTAL # OF PI(0)S  (HDPM)
C  NPOSIT(20)  = # OF POSITRONS WRITTEN TO TAPE PER LEVEL
C  NPROTB(20)  = # OF ANTIPROTONS WRITTEN TO TAPE PER LEVEL
C  NPROTO(20)  = # OF PROTONS WRITTEN TO TAPE PER LEVEL
#if __CERENKOV__
C  NRECER      = COUNTER FOR DIRECT ACCESS OUTPUT OF CHERENKOV PHOTONS
#endif
C  NRECS       = # OF BIG BLOCKS PUT OUT (FOR TP)
C  NRESPC      = # OF CHARGED PIONS TO BE CREATED BY RESONANCE DECAY
C  NRESPN      = # OF NEUTRAL PIONS TO BE CREATED BY RESONANCE DECAY
C  NRRUN       = # OF RUN
C  NSEQ        = # OF RANDOM GENERATOR SEQUENCE
C  NSHIFT      = # OF STACK SHIFTS
#if __PARALLEL__
C  NSHIFTJ     = # OF 2ND STACK SHIFTS
#endif
C  NSHOW       = # OF SHOWERS TO GENERATE
C  NSTEP       = NUMBER OF STEPS FOR LONGITUDINAL DISTRIBUTION
C  NSTP        = NUMBER OF STEPS FOR LONGITUDINAL DIST. FIT
#if __CERENKOV__&&__CURVED__
C  NTHETA      = PARAMETER NUMBER OF VALUES IN THETA
#endif
C  NTO         = # OF PARTICLES WRITTEN TO STACK
#if __PARALLEL__
C  NTOC        = # OF PARTICLES WRITTEN TO CUTFILE
C  NTOJ        = # OF PARTICLES WRITTEN TO 2ND STACK
#endif
C  NTOT        = TOTAL NUMBER OF PARTICLES (HDPM)
C  NTOT(.)     = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  NTOTEM      = TOTAL #OF SECONDARY PARTICLES IN HDPM
C  NTOT2(.)    = ARRAY(KSEQ) FOR RANDOM GENERATOR
C  NTRIT(20)   = # OF TRITONS WRITTEN TO TAPE PER LEVEL
C  NUCNUC      = LUN OF CROSS-SECTION FILE
C  NUCTAB      = TABLE OF MUON/TAU NUCLEAR INTERACTION CROSS-SECTIONS
#if __NUPRIM__
C  NUSLCT      = SELECTS CC OR NC INTERACTIONS OF NEUTRINOS
#endif
C  N1STTR      = NUMBER OF FIXED FIRST TARGET 0=RANDOM, 1=N, 2=O, 3=AR
#if __ICECUBE1__
C  n_interesting    = NUMBER OF INTERESTING PARTICLES
C  n_interesting_nu = NUMBER OF INTERESTING NEUTRINOS
#endif
C
C  OBSATI(2)   = OBSERVATION LEVELS IN CM (USED IN NKG)(MAX. 2)
C  OBSLEV(..)  = OBSERVATION LEVELS (CM)
C  OBSLVL      = OBSERVATION LEVEL (EGS4)
C  OBSLV2      = OBSERVATION LEVEL - 1G/CM**2 (EGS4 AUGERHIST)
C  OB3         = ONE BY THREE = 1./3.
C  OMC         = CONSTANT OMEGA_C FOR MUOMN MULTIPLE SCATTERING
#if __CONEX__
C  OUTLUN      = OUTPUT UNIT FOR CONEX
#endif
C  ..PARTICLE TO BE WRITTEN TO TAPE
C  OUTPAR(..)  = PARTICLE FIELD FOR OUTPUT PARTICLE (COMP. SECPAR)
C
C  PAIRTAB     = TABLE OF MUON/TAU PAIR PRODUCTION CROSS-SECTIONS
C  PAMA(6000)  = MASS OF PARTICLE (GEV)
#if __VENUS__
C  PARCHA(.)   = CODE WORD SPECIFYING VENUS PARAMETER
#endif
#if __INTTEST__
C  PARCLA(I,K) = PARTICLE CLASS POINTERS              FOR HISTOGRAMMING
C                I=1,..5   THE CLASSES TO WHICH THE PARTICLE K BELONGS,
C                ALL PARTICLES ARE IN ADDITION IN CLASS 1
C                ALL PARTICLES WITH CODES >200 ARE CHARGED AND NUCLEI
#endif
#if __VENUS__
C  PARVAL(.)   = VENUS PARAMETER VALUE SPECIFIED BY PARCHA
#endif
#if __SLANT__
C  PATH1(.)    = SLANT PATH LENGTH
#endif
#if __COASTUSERLIB__
C  PHINCL      = PHI ANGLE OF THE NORMAL TO THE INCLINED OBSERVATION PLANE
#endif
C  PHIX        = CURPAR(3)
C  PHIY        = CURPAR(4)
C  PHIPR(2)    = RANGE PHI OF PRIMARY PARTICLE IN RADIAN
C  PHIP        = ACTUAL PHI OF PRIMARY PARTICLE IN RADIAN
C  PHISCT      = AZIMUTAL ANGLE OF MUON MULTIPLE SCATTERING
C  PHI345(3)   = ANGLE PHI OF PARTICLE EMERGING FROM 3 BODY DECAY
#if __CERENKOV__
C  PHOTCM      = NUMBER OF CHERENKOV PHOTONS EMITTED FROM PATH ELEMENT
#endif
C  PI          = 3.14159...     SET IN BLOCK DATA
C  PI2         = 2 * PI
C  PICMAS      = MASS OF CHARGED PION (EGS4)
#if __ICECUBE2__
C  pipe_output = FLAG INDICATING THAT OUTPUT SHOULD BE WRITTEN TO A FIFO
#endif
C  PITHR       = THRESHOLD ENERGY FOR PHOTONUCLEAR INTERACT. (EGS4)
C  PI0MAS      = MASS OF PI(0) (EGS4)
C  PI0MSQ      = MASS OF PI(0) SQUARED (EGS4)
C  PLAB        = MOMENTUM OF INCOMING PARTICLE IN LAB SYSTEM
#if __INTTEST__
C  PLAV(.)     = AVERAGE LONGITUDINAL MOMENTUM
#endif
#if __PLOTSH2__
C  PLCUT       = ENERGY CUTS FOR PLOTTING PARTICLE TRACKS (SEE 'ECUTS')
C  PLMAPXY     = X-Y-PROJECTION MAP OF DIMENSION (IXRES TIMES IYRES)
C  PLMAPXZ     = X-Z-PROJECTION MAP OF DIMENSION (IXRES TIMES IZRES)
C  PLMAPYZ     = Y-Z-PROJECTION MAP OF DIMENSION (IYRES TIMES IZRES)
#endif
C  PLONG(I,K)  = LONGITUDINAL PARTICLE DISTRIBUTIONS PER SHOWER IN I
C                BINS FOR K= GAMMAS, POSITRONS, ELECTRONS, MU+, MU-,
C                HADRONS, CHARGED, NUCLEI, AND CHERENKOV PHOTONS
#if __PLOTSH__
C  PLOTSH      = FLAG TO ENABLE/DISABLE PRODUCTION OF FILES FOR PLOTS
#endif
#if __PLOTSH2__
C  PLTCUT      = UPPER TIME LIMIT FOR PARTICLE TRACKS
C  PLX1        = LOWER VALUE OF X AXIS RANGE FOR TRACK PROJECTION MAP
C  PLX2        = UPPER VALUE OF X AXIS RANGE FOR TRACK PROJECTION MAP
C  PLY1        = LOWER VALUE OF Y AXIS RANGE FOR TRACK PROJECTION MAP
C  PLY2        = UPPER VALUE OF Y AXIS RANGE FOR TRACK PROJECTION MAP
C  PLZ1        = LOWER VALUE OF Z AXIS RANGE FOR TRACK PROJECTION MAP
C  PLZ2        = UPPER VALUE OF Z AXIS RANGE FOR TRACK PROJECTION MAP
#endif
C  PNOA30(.)   = ARRAY FOR PROBABILITY OF # OF INTERACTIONS
C  PNOA45(.)   = ARRAY FOR PROBABILITY OF # OF INTERACTIONS
C  PNOA60(.)   = ARRAY FOR PROBABILITY OF # OF INTERACTIONS
C  POLARF      = PHI        ; POLARIZATION DIRECTION OF MUON
C  POLART      = COS(THETA) ; POLARIZATION DIRECTION OF MUON
C  POSC2       = POSITION OF GAUSSIAN FOR 1ST+2ND STRING (CHARGED)
C  POSC3       = POSITION OF GAUSSIAN FOR 3RD     STRING (CHARGED)
C  POSN2       = POSITION OF GAUSSIAN FOR 1ST+2ND STRING (NEUTRAL)
C  POSN3       = POSITION OF GAUSSIAN FOR 3RD     STRING (NEUTRAL)
C  PPICH       = RATIO # PI+(+-) / # ALL CHARGED PARTICLES (HDPM)
C  PPINCH      = RATIO # PI+(+-)+PROTON / # ALL CHARGED PARTICLES (HDPM)
C  PPNKCH      = RATIO # PI+(+-)+PROTON+K(+-) / # ALL CHARGED PARTICLES
#if __INTTEST__
C  PRAPAV(.)   = AVERAGE PSEUDORAPIDITY
#endif
C  PRMPAR(..)  = PARTICLE FIELD FOR PRIMARY PARTICLE (COMP. CURPAR)
C  PROBTA(3)   = INTEGRATED ATOMIC FRACTIONS
#if __ANAHIST__
C  PROFAK1     = FACTOR FOR PROJECTION INTO PLANE PERPEND. TO SHOWER AXIS
C  PROFAK2     = FACTOR FOR PROJECTION INTO PLANE PERPEND. TO SHOWER AXIS
C  PROFAK3     = FACTOR FOR PROJECTION INTO PLANE PERPEND. TO SHOWER AXIS
#endif
#if __CHARM__
C  PROPMOD     = FLAG FOR USE OF STANDARD INTERACTION(0) OR HEPARIN(1)
#endif
C  PRRMMU      = REST MASS OF MUON (EGS4)
C  PSLOPE      = SLOPE OF PRIMARY DIFFERENTIAL ENERGY SPECTRUM
C                IF PRIMARY ENERGY IS TO BE COMPUTED FROM A SPECTRUM
C  PTOT0       = TOTAL MOMENTUM OF PRIMARY
C  PTOT0N      = TOTAL MOMENTUM OF PRIMARY PER NUCLEON
#if __VENUS__
C  PTQ1        = MEAN TRANSVERSE MOMENTUM COEFFICIENT
C  PTQ2        = MEAN TRANSVERSE MOMENTUM COEFFICIENT
C  PTQ3        = MEAN TRANSVERSE MOMENTUM COEFFICIENT
#endif
#if __INTTEST__
C  PTAV(.)     = AVERAGE TRANSVERSE MOMENTUM
C  PT2AV(.)    = AVERAGE SQUARED TRANSVERSE MOMENTUM
#endif
C  PT2(3000)   = PT**2             OF SECONDARY PARTICLE IN HDPM
C  PX(3000)    = PT IN X DIRECTION OF SECONDARY PARTICLE IN HDPM
C  PY(3000)    = PT IN Y DIRECTION OF SECONDARY PARTICLE IN HDPM
C
#if __CERENKOV__&&__CEFFIC__
C  QUAEFF      = ARRAY WITH QUANTUM EFFICIENCIES AS FCT. OF LAMBDA
#endif
#if __QGSJET__
C  QFRACN      = TABULATED VALUES OF HADRON 14N CROSS-SECTIONS (QGSJET)
C  QFRANO      = TABUL. VALUES OF HADRON 14N+16O CROSS-SECTIONS (QGSJET)
#endif
#if __VENUS__
C  QMUST1      = MULTISTRING PARAMETER COEFFICIENT
C  QMUST2      = MULTISTRING PARAMETER COEFFICIENT
C  QMUST3      = MULTISTRING PARAMETER COEFFICIENT
#endif
C
#if __TRAJECT__
C  RA          = RIGHT ASCENSION OF SOURCE TO BE FOLLOWED
#endif
#if __SLANT__
C  RADGRD      = RADIUS OF GROUND (= C(1) + HGROUND)
#endif
C  RADNKG      = RADIUS RANGE FOR NKG ELECTRON DENSITIES IN CM
#if __INTTEST__
C  RAPAV(.)    = AVERAGE RAPIDITY
#endif
C  RATIO       = RATIO TOTAL STEP LENGTH/SCATTERING LENGTH FOR ELECTRONS
C  RC3TO2      = RATIO (CHARGED OF 3RD STRING)/(CHARGED 1ST+2ND STRING)
C  RCUT        = RADIUS WITHIN WHICH PARTICLES ARE DISCARDED FROM OUTPUT
C  RCUT2       = RCUT**2
C  RD(3000)    = ARRAY (DOUBLE PRECISION) FOR RANDOM NUMBERS
C  RDRES(2)    = RANDOM NUMBERS FOR RESONANCE DECAYS
C  RESRAN(.)   = RANDOM NUMBERS FOR RESONANCE DECAYS
C  RESTMS(6000)= RELEASABLE KINETIC ENERGY OF PARTICLE
C  RHOFAC      = DENSITY FACTOR
#if __SLANT__
C  RHOSLT(.)   = DENSITY ALONG SLANT BIN
#endif
#if __SLANT__
C  RHOS(6)     = DENSITY AT LAYER BOUNDARY
C  RLOFF       = OFFSET OF PLANE NORMAL TO SHOWER AXIS
C  RLONG(.)    = ARRAY FOR DISTANCES TO PLANE NORMAL TO SHOWER AXIS
#endif
#if __THIN__
C  RLIM        = FLAG INDICATING THAT RADIAL THINNING IS ACTIVE
#endif
#if __THIN__
C  RMAX        = MAX. RADIUS FOR RADIAL THINNING
C  RMAX2       = RMAX**2
#endif
#if __ANAHIST__
C  RMAXS       = MAX RADIUS FOR RADIAL THINNING (M)
#endif
C  RMOL(1)     = MOLIERE RADIUS IN AIR IN CM AT LOWER LEVEL
C  RMOL(2)     = MOLIERE RADIUS IN AIR IN CM AT HIGHER LEVEL
C  RMMUT4      = 4 * REST MASS OF MUON (EGS4)
#if __NUPRIM__
C  RNAMCOR     = CHARACTER*8 ARRAY WITH PARTICLE NAMES
#endif
#if __AUGERHIT__
C  ROWDIS      = DISTANCE BETWEEN ROWS OF AUGER DETECTORS (IN METER)
#endif
C  RPEKNR      = RATIO # PI(0)+ETA+KA0+NEUTR/ # ALL NEUTRAL PARTICLES
C  RPEKR       = RATIO # PI(0)+ETA+KA0/ # ALL NEUTRAL PARTICLES (HDPM)
C  RPIER       = RATIO # PI(0)+ETA / # ALL NEUTRAL PARTICLES (HDPM)
C  RPI0R       = RATIO # PI(0) / # ALL NEUTRAL PARTICLES (HDPM)
C  RUNE(MAXBUF)= BUFFER FOR RUN   END
C  RUNH(MAXBUF)= BUFFER FOR RUN   HEADER
C
C  S           = C.M. ENERGY SQUARED  IN HDPM
C  SABIN(40)   = LOW  EDGE OF KIN. ENERGY FOR INTERACTION-ENERGY TABLE
C  SAH(10)     = AGE IN STEPS OF 100 G/CM**2
#if __AUGERHIST__
C  SAMPTH      = THICKNESS OF LAYER AT OBSERVATION LEVEL
#endif
C  SBBIN(40)   = HIGH EDGE OF KIN. ENERGY FOR INTERACTION-ENERGY TABLE
C  ..SECONDARY PARTICLE
C  SECPAR(..)  = PARTICLE FIELD FOR SECONDARY PARTICLE (COMP. CURPAR)
C  SECPAR(9)   = GENERATION OF PARTICLE
C  SECPAR(10)  = LEVEL OF LAST INTERACTION
C  SECPAR(11)  = POLARIZATION DIRECTION: COS(THETA) FOR MUONS
C  SECPAR(12)  = POLARIZATION DIRECTION: PHI FOR MUONS
#if __THIN__
C  SECPAR(13)  = WEIGHT FOR THINNING
#endif
#if __CURVED__
C  SECPAR(14)  = APPARENT HEIGHT  IN CARTESIAN COORDINATE SYSTEM
C  SECPAR(15)  = APPARENT ZENITH ANGLE OF PARTICLE POSITION IN CART.COORDINATE SYSTEM
C  SECPAR(16)  = ANGLE PARTICLE TO MID DETECT AT CENTER EARTH
#endif
#if __INTTEST__
C  SECPAR(17)  = TRANSVERSE MOMENTUM
#endif
#if __PARALLEL__
C  SECPAR(18)  = SEED OF 6TH SEQUENCE FOR NEXT CUT PARTICLES
#endif
#if __EHISTORY__
C  SECPAR(17)  = PARTICLE ID          FOR MOTHER PARTICLE
C  SECPAR(18)  = GAMMA RSP. ENERGY    FOR MOTHER PARTICLE
C  SECPAR(19)  = COSTHE               FOR MOTHER PARTICLE
C  SECPAR(20)  = PHIX                 FOR MOTHER PARTICLE
C  SECPAR(21)  = PHIY                 FOR MOTHER PARTICLE
C  SECPAR(22)  = H                    FOR MOTHER PARTICLE
C  SECPAR(23)  = TIME                 FOR MOTHER PARTICLE
C  SECPAR(24)  = X                    FOR MOTHER PARTICLE
C  SECPAR(25)  = Y                    FOR MOTHER PARTICLE
C  SECPAR(26)  = WEIGHT FOR THINNING  FOR MOTHER PARTICLE
C  SECPAR(27)  = 
C  SECPAR(28)  = PARTICLE ID          FOR GRANDMOTHER PARTICLE
C  SECPAR(29)  = GAMMA RSP. ENERGY    FOR GRANDMOTHER PARTICLE
C  SECPAR(30)  = COSTHE               FOR GRANDMOTHER PARTICLE
C  SECPAR(31)  = PHIX                 FOR GRANDMOTHER PARTICLE
C  SECPAR(32)  = PHIY                 FOR GRANDMOTHER PARTICLE
C  SECPAR(33)  = H                    FOR GRANDMOTHER PARTICLE
C  SECPAR(34)  = TIME                 FOR GRANDMOTHE RPARTICLE
C  SECPAR(35)  = GEN                  FOR GRANDMOTHER PARTICLE
C  SECPAR(36)  = CHI PENETRATION BEFORE LAST INTERACTION (= 0 FOR EM-PARTICLE)
C  SECPAR(37)  = WEIGHT FOR THINNING  FOR GRANDMOTHER PARTICLE
C  SECPAR(38)  = 
#endif
#if __PARALLEL__
C  SECPAR(39)  = ECTFLG  FLAG FOR WHETHER OR NOT THIS PARTICLE WILL BE CUT
#endif
#if __MULTITHIN__
C  SECPAR(41-46) = WEIGHTS FOR THINNING MODES
#endif
C  SDLONG(I,K) = STANDARD DEVIATION OF DLONG
C  SE          = SQUARE ROOT OF E_NEPER
C  SELONG(I,K) = STANDARD DEVIATION OF ELONG
C  SEL(10)     = USED FOR AVERAGING OF SL(10)   (NKG)
C  SELLG(10)   = USED FOR LOGARITHMIC AVERAGING OF SL(10)
C  SEUGF       = NUMBER OF GAMMAS (WITH FLUCTUATION) (HDPM)
C  SEUGP       = NUMBER OF GAMMAS (AVERAGE PARAMETRIZED) (HDPM)
C  SE14(.)     = ARRAY FOR COLLISION PROBABILITY
C  SE16(.)     = ARRAY FOR COLLISION PROBABILITY
C  SE40(.)     = ARRAY FOR COLLISION PROBABILITY
#if __VENUS__
C  SGVKL(20)   = TABLE OF LOGARITHM OF KAON    AIR CROSS-SECTION
C  SGVPIL(20)  = TABLE OF LOGARITHM OF PION    AIR CROSS-SECTION
C  SGVPL(20)   = TABLE OF LOGARITHM OF NUCLEON AIR CROSS-SECTION
#endif
C  SIGAIR      = INELASTIC CROSS-SECTION IN AIR
C  SIGAIRS     = INELASTIC CROSS-SECTION IN AIR FOR SIBYLL PRINTOUT
C  SIGANN      = NUCLEON ANNIHILATION CROSS-SECTION
C  SIGA30(.)   = ARRAY FOR CROSS-SECTIONS ARGON
C  SIGA45(.)   = ARRAY FOR CROSS-SECTIONS ARGON
C  SIGA60(.)   = ARRAY FOR CROSS-SECTIONS ARGON
C  SIGMA       = INELASTIC CROSS-SECTION FOR HADRON NUCLEON COLLISION
#if __CHARM__ || __SIBYLL__
C  SIGMAQ      = CROSS SECTION FOR CHARMED AND BOTTOM PARTICLES
#endif
#if __NEXUS__  || __EPOS__
C  SIGNAIR(..) = HADRON-AIR CROSS-SECTION
C  SIGNHN(..)  = HADRON-NUCLEON CROSS-SECTION
#endif
C  SIGNUM(6000) = SIGN AND CHARGE OF PARTICLES
C  SIGN30(.)   = ARRAY FOR CROSS-SECTIONS NITROGEN
C  SIGN45(.)   = ARRAY FOR CROSS-SECTIONS NITROGEN
C  SIGN60(.)   = ARRAY FOR CROSS-SECTIONS NITROGEN
C  SIGO30(.)   = ARRAY FOR CROSS-SECTIONS OXYGEN
C  SIGO45(.)   = ARRAY FOR CROSS-SECTIONS OXYGEN
C  SIGO60(.)   = ARRAY FOR CROSS-SECTIONS OXYGEN
#if __QGSJET__
C  SIGQAIR     = TABULATED VALUES OF HADRON AIR CROSS-SECTIONS (QGSJET)
C  SIGQHN      = TABULATED VALUES OF HADR. NUCL.CROSS-SECTIONS (QGSJET)
#endif
C  SIG1I       = CROSS-SECTION FOR FIRST INTERACTION
C  SIG30A(.)   = ARRAY FOR CROSS-SECTIONS AIR
C  SIG45A(.)   = ARRAY FOR CROSS-SECTIONS AIR
C  SIG60A(.)   = ARRAY FOR CROSS-SECTIONS AIR
C  SINANG      = SIN OF ARRANR
C  SINB        = SIN OF INCLINATION ANGLE MAGNETIC FIELD
#if __AUGERHIST__
C  SINPHIP     = SIN OF AZIMUTH OF PRIMARY
#endif
C  SL(10)      = NUMBER OF ELECTRONS IN STEPS OF 100 G/CM**2 (NKG)
C  SLEX        = EXPONENT OF SLOPE OF PRIMARY SPECTRUM
C  SLOG        = LOG OF C.M. ENERGY SQUARED  (HDPM)
C  SLOGSQ      = SQUARE OF LOG OF C.M. ENERGY SQUARED  (HDPM)
C  SMLOG       = LOG ( C.M. ENERGY SQUARED  - 2 * NUCL.MASS**2 ) (HDPM)
C  SPHISCT     = SINE   OF AZIMUTAL ANGLE OF MUON MULTIPLE SCATTERING
C  SPHI345(3)  = SINE   PHI   OF PARTICLE EMERGING FROM 3 BODY DECAY
C  SPLONG(I,K) = STANDARD DEVIATION OF PLONG
C  SQRT3       = SQRT(3.)
#if __MULTITHIN__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 25000 PARTICLES A 47 WORDS
C  STACKJ(MAXSTK) = 2ND PARTICLE STACK FOR 2 * 25000 PARTICLES A 47 WORDS
#else
#if __PARALLEL__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 25000 PARTICLES A 40 WORDS
C  STACKJ(MAXSTK) = 2ND PARTICLE STACK FOR 2 * 25000 PARTICLES A 40 WORDS
#else
#if __INTEST__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 256 PARTICLES A 18 WORDS
#else
#if __EHISTORY__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 256 PARTICLES A 39 WORDS
#else
#if __CURVED__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 256 PARTICLES A 17 WORDS
#else
#if __THIN__
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 312 PARTICLES A 14 WORDS
#else
C  STACKI(MAXSTK) = PARTICLE STACK FOR 2 * 340 PARTICLES A 13 WORDS
#endif
#endif
#endif
#endif
#endif
#endif
C  STACKINT(,) = INTERMEDIATE STACK OF PARTICLE COORDINATES
C  STEPFC      = STEP LENGTH FACTOR FOR ELECTRON MULTIPLE SCATTERING
C  STEPL       = STEP LENGTH FOR MUON TRANSPORT STEP
C  STERNCOR    = PARAMETER FOR STERNHEIMER CORRECTION (SEE SUBR. ELECTR)
C  STH(10)     = AGE IN STEPS OF 100 G/CM**2, SUM OVER ALL SHOWERS (NKG)
#if __SLANT__
C  STHCPH      = SINTHE*COSPHI OF PRIMARY FOR PLANE NORM. TO SHOWER AXIS
C  STHSPH      = SINTHE*SINPHI OF PRIMARY FOR PLANE NORM. TO SHOWER AXIS
#endif
#if __ICECUBE1__
C  still_interesting = FLAG INDICATING IF AN EVENT IS STILL INTERESTING
#endif
#if __VENUS__
C  SVPPL(20)   = TABLE OF LOGARITHM OF NUCLEON NUCLEON CROSS-SECTION
#endif
C
C  T           = CURPAR(6)
#if __AUGERHIST__
C  TANTEP      = TANGENS OF ZENITH OF PRIMARY
#endif
C  TAR         = NUMBER OF NUCLEONS IN TARGET (HDPM)
C  TARG1I      = TARGET OF FIRST INTERACTION
C  TBFAC       = ARRIVAL TIME SCALING FACTOR FOR BINNING
C  TBMAX       = MAXIMUM ARRIVAL TIME FOR TIME TABLE
C  TBMIN       = MINIMUM ARRIVAL TIME FOR TIME TABLE
C  TBOFF       = ARRIVAL TIME OFFSET         FOR BINNING
C  TB3         = TWO BY THREE = 2./3.
#if __ANAHIST__ || __CONEX__
C  TCEN        = ARRIVAL TIME OF SHOWER CORE AT OBSERVATION LEVEL
#endif
#if __TRAJECT__
C  TDAY        = OBSERVATION START TIME DAY
C  TDURATION   = OBSERVATION DURATION
#endif
C  THCKOB(..)  = LAYER THICKNESS AT OBSERVATION LEVEL (G/CM**2)
#if __SLANT__
C  THCKRL(.)   = ARRAY FOR THICKNESS TO PLANE NORMAL TO SHOWER AXIS
#endif
C  THETPR(2)   = RANGE OF THETA OF PRIMARY PARTICLE IN RADIAN
C  THETAP      = ACTUAL THETA OF PRIMARY PARTICLE IN RADIAN
C  THICKA(..)  = THICKNESS OF AIR LAYER (EGS)
C  THICKD(..)  = THICKNESS OF AIR LAYER BELOW OBSERVATION LEVEL (EGS)
C  THICKH      = THICK(H) MASS OVERBURDEN OF ACTUAL PARTICLE ALTITUDE
C  THICKL(5)   = THICKNESS AT ATMOSPHERIC LAYER BOUNDARIES
#if __SLANT__
C  THICKS(6)   = SLANT THICKNESS TOP OF ATMOSPHERE TO LAYER BOUNDARY
#endif
C  THICK0      = HEIGHT OF START OF PRIMARY (IN G/CM**2)
#if __COASTUSERLIB__
C  THINCL      = THETA ANGLE OF THE NORMAL TO THE INCLINED OBSERVATION PLANE
#endif
C  THINNING    = FLAG INDICATING THINNING FOR CURRENT INTERACTION
#if __THIN__
C  THINRAT     = ENERGY RATIO (EPSILON_EM)/(EPSILON)
C  THINRATH    = ENERGY RATIO (EPSILON_HADR)/(EPSILON)
#endif
#if __MULTITHIN__
C  THNMRTH(6)  = RATIO ETHIN_EM/ETHIN_HAD FOR MULTITHIN MODE
#endif
#if __TRAJECT__
C  THOUR       = OBSERVATION START TIME HOUR
#endif
C  THSTEP      = STEP WIDTH IN G/CM**2 FOR LONGITUDINAL DISTRIBUTION
C  THSTPI      = 1/THSTEP
C  TIM(NP)     = TIME OF PARTICLE ON EGS STACK
#if __CURVED__
C  TIMLIM      = TIME LIMIT FOR PARTICLE SINCE 1. INTERACT (SEC)
#endif
#if __TRAJECT__
C  TLATDGR     = TELESCOPE POSITION LATERAL DEGREE
C  TLATDIR     = TELESCOPE POSITION LATERAL DIRECTION (N OR S)
C  TLATMIN     = TELESCOPE POSITION LATERAL MINUTES
C  TLATSEC     = TELESCOPE POSITION LATERAL SECONDS
#endif
C  TLEV(10)    = LEVELS IN NKG IN G/CM**2  (NKG)
C  TLEVCM(10)  = LEVELS IN NKG IN CM  (NKG)
#if __TRAJECT__
C  TLOGIC      = FLAG TO ENABLE TRAJECTORY MODE
C  TLONGDGR    = TELESCOPE POSITION LONGITUDINAL DEGREE
C  TLONGDIR    = TELESCOPE POSITION LONGITUDINAL DIRECTION (W OR E)
C  TLONGMIN    = TELESCOPE POSITION LONGITUDINAL MINUTES
C  TLONGSEC    = TELESCOPE POSITION LONGITUDINAL SECONDS
#endif
C  TMARGIN     = FLAG INDICATING ARR. TIME ZERO AT ENTRANCE INTO ATMOSPHERE
C  TMAS(3000)  = TRANSVERSE MASS   OF SECONDARY PARTICLE IN HDPM
#if __TRAJECT__
C  TMINUTE     = OBSERVATION START TIME MINUTE
C  TMONTH      = OBSERVATION START TIME MONTH
#endif
#if __CERENKOV__&&__CURVED__
C  TOF(.,.)    = TIME OF FLIGHT OF CHERENKOV PHOTON
#endif
#if __TRAJECT__
C  TRAD        = PRODUCE EVENTS WITHIN RADIUS TRAD AROUND SOURCE POSITION
#endif
#if __PLOTSH2__
C  TRE         = ENERGY OF PARTICLE CURRENTLY TRACKED
C  TRID        = ID OF PARTICLE CURRENTLY TRACKED
C  TRT2        = TIME OF ENDPOINT OF PARTICLE TRACK
C  TRX1        = X COORDINATE OF STARTING POINT OF PARTICLE TRACK
C  TRY1        = Y COORDINATE OF STARTING POINT OF PARTICLE TRACK
C  TRZ1        = Z COORDINATE OF STARTING POINT OF PARTICLE TRACK
C  TRT1        = TIME OF STARTING POINT OF PARTICLE TRACK
C  TRX2        = X COORDINATE OF END POINT OF PARTICLE TRACK
C  TRY2        = Y COORDINATE OF END POINT OF PARTICLE TRACK
C  TRZ2        = Z COORDINATE OF END POINT OF PARTICLE TRACK
#endif
C  TSCAT       = SEE EQ. 2.14.82 IN SLAC-265
#if __TRAJECT__
C  TSECOND     = OBSERVATION START TIME SECOND
#endif
#if __SLANT__
C  TSLAN(NP)   = SLANT DEPTH OF PARTICLE ON EGS STACK
C  TSLANT(.)   = SLANT THICKNESS  TOP OF ATMOSPHERE TO BIN
#endif
C  TSTEP       = DISTANCE TO NEXT INTERACTION
C  TUSTEP      = TOTAL (CURVED) STEP LENGTH REQUESTED
C  TVSTEP      = ACTUAL TOTAL STEP LENGTH
C  TWOM24      = 2**-24 (MANTISSA SINGLE PRECISION)
C  TWOM48      = 2**-48 (MANTISSA DOUBLE PRECISION)
#if __TRAJECT__
C  TYEAR       = OBSERVATION START TIME YEAR
#endif
C
C  U(NP)       = X DIRECTION COSINE OF PARTICLE ON EGS STACK
C  U(.)        = ARRAY(KSEQ) FOR RANDOM GENERATOR
#if __CERENKOV__
C  UEMIS       = EMISSION ANGLE COSINES OF CHERENKOV PHOTONS
#endif
C  UL          = USED FOR PRIMARY ENERGY SELECTION
C  ULIMIT      = UPPER LIMIT OF ENERGY SECTION FOR PRIMARY (GEV)
C  UNI         = FINAL RANDOM NUMBER
#if __URQMD__
C  URCRNU      = CROSS-SECTION FOR NUCLEUS-AIR COLLISION
C  URCRSP      = CROSS-SECTION FOR HADRON-AIR COLLISION
#endif
C  USELOW      = FLAG INDICATING LOW ENERGY HADRONIC INTERACTION
C  USER        = NAME OF USER
C  USTEP       = USER STEP LENGTH REQUESTED
C  U1          = VARIABLE OF SUBROUT. RANNOR
C  U2          = VARIABLE OF SUBROUT. RANNOR
C
C  V(NP)       = Y DIRECTION COSINE OF PARTICLE ON EGS STACK
#if __CERENKOV__
C  VEMIS       = EMISSION ANGLE COSINES OF CHERENKOV PHOTONS
#endif
C  VERDAT(.)   = DATE OF RELEASE OF VERSION
C  VERNUM      = VERSION NUMBER OF CORSIKA
C  VFRAC       = ENERGY FRACTION FOR SECONDARY IN MUON/TAU INTERACTION
C  VMAX        = MAX. VALUE OF ENERGY FRACTION FOR MUON/TAU INTERACT.
C  VMIN        = MIN. VALUE OF ENERGY FRACTION FOR MUON/TAU INTERACT.
C  VSCAT       = POLAR ANGLE OF MUON MULTIPLE SCATTERING
C  VSTEP       = ACTUAL STEP LENGTH
#if __VIEWCONE__
C  VUECON(2)   = RANGE OF VIEWING CONE AROUND FIXED THETA+PHI IN RADIAN
#endif
C
C  W(NP)       = Z DIRECTION COSINE OF PARTICLE ON EGS STACK
#if __CURVED__
C  WA(NP)      = ANGLE PARTICLE TO MID DETECT AT CENTER EARTH (EGS)
C  WAP(NP)     = APPARENT ZENITH ANGLE IN CART.COORDINATE SYSTEM (EGS)
#endif
#if __CERENKOV__
C  WAVLGL      = CHERENKOV WAVE LENGTH BAND LOWER END (NANOMETER)
C  WAVLGU      = CHERENKOV WAVE LENGTH BAND UPPER END (NANOMETER)
#endif
C  WCOMP       = ATOMIC FRACTION OF COMPONENT (GHEISHA)
#if __THIN__
C  WEIGHT      = CURPAR(13), WEIGHT FOR THINNING
C  WEITRAT     = WEIGHT LIMIT RATIO (WMAX_EM)/(WMAX)
C  WEITRATH    = WEIGHT LIMIT RATIO (WMAX_HADR)/(WMAX)
#endif
#if __CERENKOV__
C  WEMIS       = EMISSION ANGLE COSINES OF CHERENKOV PHOTONS
C  WL          = WAVELENGTH OF CHERENKOV PHOTON
C  WLMAX       = MAX WAVELENGTH (NM) IN TABLES FOR atmabs, mirreff, quanteff
C  WLMIN       = MIN WAVELENGTH (NM) IN TABLES FOR atmabs, mirreff, quanteff
#endif
C  WIDC2       = WIDTH OF GAUSSIAN FOR 1ST+2ND STRING (CHARGED) (HDPM)
C  WIDC3       = WIDTH OF GAUSSIAN FOR 3RD     STRING (CHARGED) (HDPM)
C  WIDN2       = WIDTH OF GAUSSIAN FOR 1ST+2ND STRING (NEUTRAL) (HDPM)
C  WIDN3       = WIDTH OF GAUSSIAN FOR 3RD     STRING (NEUTRAL) (HDPM)
#if __THIN__
C  WLIM        = FLAG INDICATING THAT WEIGHT LIMITATION IS ACTIVE
C  WMAX        = MAX. WEIGHT FOR WEIGHT LIMITATION (HADR.)
C  WMAX0       = MAX. WEIGHT FOR WEIGHT LIMITATION (HADR.)
C  WMAXE       = MAX. WEIGHT FOR WEIGHT LIMITATION (EM)
C  WMAXE0      = MAX. WEIGHT FOR WEIGHT LIMITATION (EM)
C  WMAXEM      = MAX. WEIGHT LIMIT (EM-PARTICLES) FOR WEIGHT LIMITATION
#endif
#if __MULTITHIN__
C  WMMAX0(6)   = WEIGHT LIMIT FOR HADRONIC MULTITHIN MODE
C  WMMAX(6)    = ACTUAL WEIGHT LIMIT FOR HADRONIC MULTITHIN MODE
C  WMMAXEM0(6) = WEIGHT LIMIT FOR EM MULTITHIN MODE
C  WMMAXEM(6)  = ACTUAL WEIGHT LIMIT FOR EM MULTITHIN MODE
#endif
#if __PARALLEL__
C  WRRUNH      = FLAG INDICATING RUNHEADER IS WRITTEN
C  WRRUNE      = FLAG INDICATING RUNEND    IS WRITTEN
C  WREVTH      = FLAG INDICATING EVTHEADER IS WRITTEN
C  WREVTE      = FLAG INDICATING EVTEND    IS WRITTEN
#endif
#if __THIN__
C  WT(NP)      = WEIGHT IN CASE OF THINNING (EGS)
#if __CERENKOV__
C  WTCER       = WEIGHT OF CHERENKOV PHOTON BUNCH
#endif
#endif
#if __MULTITHIN__
C  WTM(6,NP)   = WEIGHTS FOR MULTITHIN
C  WTRATMH(6)  = RATIO WEIGHTLIM_EM/WEIGHTLIM_HAD FOR MULTITHIN MODE
#endif
C
C  X           = CURPAR(7)
C  X(NP)       = X COORDINATE OF PARTICLE ON EGS STACK
#if __CERENKOV__
C  XCER        = X-DISTANCE FROM SHOWER AXIS AT DET.LEVEL FOR CHERENKOV
C  XCMAX       = MAX. EXTENSION OF ARRAY IN X DIRECTION
C  XCMAXS      = MAX. EXTENSION OF ARRAY IN X DIRECTION INCL. SCATTER
#endif
#if __PLOTSH2__
C  XCONST      = NUMBER OF PIXELS PER CM IN X AXIS (FOR PLOTTING)
#endif
#if __INTTEST__
C  XFAV(.)     = AVERAGE FEYNMAN X
C  XFLAV       = AVERAGE LOG(FEYNMAN X)
#endif
#if __NEXUS__  || __EPOS__
C  XFRACN(..)  = NITROGEN        FRACTION OF HADR.-AIR CROSS-SECTION
C  XFRANO(..)  = NITROGEN+OXYGEN FRACTION OF HADR.-AIR CROSS-SECTION
#endif
C  XOFF(..)    = OFFSET OF X COOR. FOR INCLINED SHOWERS AT OBS. LEVEL
#if __ANAHIST__
C  XOFFS       = OFFSET FOR OBSERVATIN LEVEL
#endif
#if __COASTUSERLIB__
C  XPINCL      = X COORDINATE OF INCLINED OBSERVATION PLANE
#endif
#if __CERENKOV__
C  XSCATT      = RANGE OF X SCATTER OF SHOWER CORE IN CM
#endif
#if __AUGERHIT__
C  XSHCORE     = SCATTERED AUGER CORE POSITION IN X-DIRECTION (IN METER)
C  XTEST       = DISTANCE TO NEAREST TANK CENTER X-DIRECTION
#endif
#if __CERENKOV__
C  XSTEP       = STEP LENGTH IN X OF PARTICLE EMITTING CHERENKOV PHOTON
C  XSTEP2      = HALF STEP LENGTH IN X OF PARTICLE EMITTING CHERENKOV PHOTON
#endif
#if __COASTUSERLIB__
#if __CURVED__
C  XXXX(NP)    = X COORDINATE IN DETECTOR SYSTEM (CURVED)
#endif
#endif
C
C  Y           = CURPAR(8)
C  Y(NP)       = Y COORDINATE OF PARTICLE ON EGS STACK
#if __CERENKOV__
C  YCER        = Y-DISTANCE FROM SHOWER AXIS AT DET.LEVEL FOR CHERENKOV
C  YCMAX       = MAX. EXTENSION OF ARRAY IN Y DIRECTION
C  YCMAXS      = MAX. EXTENSION OF ARRAY IN Y DIRECTION INCL. SCATTER
#endif
C  YCM         = RAPIDITY OF CM SYSTEM IN LABORATORY  (HDPM)
#if __PLOTSH2__
C  YCONST      = NUMBER OF PIXELS PER CM IN Y AXIS (FOR PLOTTING)
#endif
C  YOFF(..)    = OFFSET OF Y COOR. FOR INCLINED SHOWERS AT OBS. LEVEL
#if __ANAHIST__
C  YOFFS       = OFFSET FOR OBSERVATIN LEVEL
#endif
#if __COASTUSERLIB__
C  YPINCL      = Y COORDINATE OF INCLINED OBSERVATION PLANE
#endif
C  YR(3000)    = RAPIDITY  OF SECONDARY PARTICLE IN HDPM
#if __CERENKOV__
C  YSCATT      = RANGE OF Y SCATTER OF SHOWER CORE IN CM
#endif
#if __AUGERHIT__
C  YSHCORE     = SCATTERED AUGER CORE POSITION IN Y-DIRECTION (IN METER)
C  YTEST       = DISTANCE TO NEAREST TANK CENTER Y-DIRECTION
#endif
#if __CERENKOV__
C  YSTEP       = STEP LENGTH IN Y OF PARTICLE EMITTING CHERENKOV PHOTON
C  YSTEP2      = HALF STEP LENGTH IN Y OF PARTICLE EMITTING CHERENKOV PHOTON
#endif
C  YYOLD       = COORDINATE OF EM PARTICLE FOR SUBTRACT. FROM NKG (EGS4)
#if __COASTUSERLIB__
#if __CURVED__
C  YYYY(NP)    = Y COORDINATE IN DETECTOR SYSTEM (CURVED)
#endif
#endif
C  YY0         = RAPIDITY OF DIFFRACTIVE SYSTEM IN CMS (HDPM)
C
C  Z(NP)       = Z COORDINATE OF PARTICLE ON EGS STACK
C  ZALTIT      = STARTING ALTITUDE (EGS4)
#if __CURVED__
C  ZAP(NP)     = APPARENT HEIGHT IN CARTESIAN COORDINATE SYSTEM (EGS)
C  ZATOM       = ATOMIC NUMBER OF TARGET FOR MUON/TAU INTERACTIONS
#endif
C  ZCOMP       = ATOMIC NUMBER OF COMPONENT (GHEISHA)
#if __PLOTSH2__
C  ZCONST      = NUMBER OF PIXELS PER CM IN Z AXIS (FOR PLOTTING)
#endif
C  ZEL(10)     = USED FOR FLUCTUATION OF SEL(10)          (NKG)
C  ZELLG(10)   = USED FOR FLUCTUATION OF SELLG(10)
#if __CERENKOV__
C  ZEMIS       = Z-COORDINATE OF EMISSION POINT
#endif
C  ZN          = CENTR. RAP. DENSITY FOR CALCULATION OF PT
C  ZNE(10)     = PARAMETER USED FOR LONGITUDINAL AGE CALCULATION (NKG)
#if __COASTUSERLIB__
C  ZPINCL      = Z COORDINATE OF INCLINED OBSERVATION PLANE
#endif
C  ZSL(10)     = USED FOR FLUCTUATION OF STH(10))         (NKG)
#if __CERENKOV__
C  ZSTEP       = STEP LENGTH IN Z OF PARTICLE EMITTING CHERENKOV PHOTON
C  ZSTEP2      = HALF STEP LENGTH IN Z OF PARTICLE EMITTING CHERENKOV PHOTON
#endif
C  ZZOLD       = COORDINATE OF EM PARTICLE FOR SUBTRACT. FROM NKG (EGS4)
C
C=======================================================================
#undef __INCVARINDEX__
#endif
/*-- Author :    21/04/1994   The CORSIKA development group */
#ifdef __AIRINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRAIR/   COMPOS,PROBTA,AVERAW,AVOGDR
      DOUBLE PRECISION COMPOS(3),PROBTA(3),AVERAW,AVOGDR
#undef __AIRINC__
#endif

#ifdef __ATMOSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRATMOS/ AATM,AATM0,BATM,BATM0,CATM,CATM0,DATM,MODATM
     *                ,MATMFI,LATMNEW
      DOUBLE PRECISION AATM(5),AATM0(5,0:30),BATM(5),BATM0(5,0:30),
     *                 CATM(5),CATM0(5,0:30),DATM(5)
      INTEGER          MODATM,MATMFI
      LOGICAL          LATMNEW
#undef __ATMOSINC__
#endif

#ifdef __ATMOS2INC__
/*-- Author :    The CORSIKA development group   18/07/1995 */
      COMMON /CRATMOS2/HLAY,HLAY0,THICKL,LAYNO,LAYNEW
      DOUBLE PRECISION HLAY(6),HLAY0(5,0:16),THICKL(5)
      INTEGER          LAYNO(0:29)
      LOGICAL          LAYNEW
#undef __ATMOS2INC__
#endif

#ifdef __ATMOS3INC__
/*-- Author :    The CORSIKA development group   30/11/2009 */
      COMMON /CRATMOS3/ AATMCRS,BATMCRS,CATMCRS,DATMCRS,EATMCRS
      DOUBLE PRECISION AATMCRS(5),BATMCRS(5),EATMCRS(6),
     *                 CATMCRS(5),DATMCRS(5)
#undef __ATMOS3INC__
#endif

#ifdef __ATMOSLINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        20/10/2003 */
      COMMON /CRATMOSL/PATH1,RHOSLT,TSLANT,HLAYS,RHOS,THICKS,
     *                 CCATM,HLAYC,HGROUND,RADGRD,IENDT
      INTEGER          MAXSLANT,MAXSLANT2
      PARAMETER        (MAXSLANT2=1600, MAXSLANT=MAXSLANT2*5)
      DOUBLE PRECISION PATH1(MAXSLANT),RHOSLT(MAXSLANT),
     *                 TSLANT(MAXSLANT),HLAYS(6),RHOS(6),THICKS(6),
     *                 CCATM(5),HLAYC(6),HGROUND,RADGRD
      INTEGER          IENDT
#undef __ATMOSLINC__
#endif

#ifdef __ATMOSXINC__
/*-- Author :    K. BERNLOEHR MPIK HEIDELBERG    15/06/1998 */
C  EXTERNAL ATMOSPHERIC MODELS
      COMMON /CRATMOSX/IATMOX,FREFRX
      INTEGER          IATMOX
      LOGICAL          FREFRX
#undef __ATMOSXINC__
#endif

#ifdef __AUGDETINC__
/*-- Author :    The CORSIKA development group   07/10/2013 */
      COMMON /CRAUGDET/CUTRAD,DRADIUS,XSHCORE,YSHCORE,DETDIS,ROWDIS,
     *                 XTEST,YTEST,
     *                 MAUGPOS,MAUGPS2,FTANKSHADW,FANYMODE
      DOUBLE PRECISION CUTRAD,DRADIUS,XSHCORE(20),YSHCORE(20),DETDIS,
     *                 ROWDIS,XTEST,YTEST
      INTEGER          MAUGPOS,MAUGPS2
      LOGICAL          FTANKSHADW,FANYMODE
#undef __AUGDETINC__
#endif

#ifdef __AVPTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRAVPT/  AVPT,AVPK,AVPN,AVPH,AVPE
      DOUBLE PRECISION AVPT,AVPK,AVPN,AVPH,AVPE
#undef __AVPTINC__
#endif

#ifdef __BOUNDSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRBOUNDS/ECUT,PCUT,VACDST
      DOUBLE PRECISION ECUT(6),PCUT(6),VACDST
#undef __BOUNDSINC__
#endif

#ifdef __BREMPRINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRBREMPR/PWR2I,DL1,DL2,DL3,DL4,DL5,DL6,DELCM,ALPHI,BPAR,
     *                 DELPOS
      DOUBLE PRECISION PWR2I(60)
      REAL             DL1(6),DL2(6),DL3(6),DL4(6),DL5(6),DL6(6),
     *                 DELCM,ALPHI(2),BPAR(2),DELPOS(2)
#undef __BREMPRINC__
#endif

#ifdef __BUFFSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRBUFFS/ RUNH,RUNE,EVTH,EVTE,DATAB,ARRAYLONG,LH
#if __PARALLEL__
     *                 ,WRRUNH,WRRUNE,WREVTH,WREVTE
#endif
      INTEGER          MAXBUF,MAXLEN
#if __THIN__
      PARAMETER        (MAXBUF=39*8)
#else
      PARAMETER        (MAXBUF=39*7)
#endif
#if __MULTITHIN__
      PARAMETER        (MAXLEN=46)
#else /* !__MULTITHIN__ */
#if __PARALLEL__
      PARAMETER        (MAXLEN=39)
#else /* !__PARALLEL__ */
#if __INTTEST__
      PARAMETER        (MAXLEN=17)
#else  /* !__INTTEST__ */
#if __EHISTORY__ 
      PARAMETER        (MAXLEN=38) 
#else    /* !__EHISTORY__ */
#if __CURVED__ 
      PARAMETER        (MAXLEN=16)
#else     /* !__CURVED__ */
#if __THIN__
      PARAMETER        (MAXLEN=13)
#else      /* !__THIN__ */
      PARAMETER        (MAXLEN=12)
#endif      /* __THIN__ */
#endif     /* __CURVED__ */
#endif    /* __EHISTORY__ */
#endif   /* __INTTEST__ */
#endif  /* __PARALLEL__ */
#endif /* __MULTITHIN__ */
      REAL             RUNH(MAXBUF),EVTH(MAXBUF),EVTE(MAXBUF),
     *                 RUNE(MAXBUF),DATAB(MAXBUF),ARRAYLONG(MAXBUF)
      INTEGER          LH
#if __PARALLEL__
      LOGICAL          WRRUNH,WRRUNE,WREVTH,WREVTE
#endif
      CHARACTER*4      CRUNH,CRUNE,CEVTH,CEVTE,CLONG
      EQUIVALENCE      (RUNH(1),CRUNH), (RUNE(1),CRUNE)
      EQUIVALENCE      (EVTH(1),CEVTH), (EVTE(1),CEVTE)
      EQUIVALENCE      (ARRAYLONG(1),CLONG)
#undef __BUFFSINC__
#endif

#ifdef __CHISTAINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRCHISTA/IHYCHI,IKACHI,IMUCHI,INNCHI,INUCHI,IPICHI,INECHI
      INTEGER          IHYCHI(124),IKACHI(124),IMUCHI(124),INNCHI(124),
     *                 INUCHI(124),IPICHI(124),INECHI(124)
#undef __CHISTAINC__
#endif

#ifdef __CONSTAINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRCONSTA/PI,PI2,OB3,TB3,ENEPER,SQRT3
      DOUBLE PRECISION PI,PI2,OB3,TB3,ENEPER,SQRT3
#undef __CONSTAINC__
#endif

#ifdef __CORFRAMINC__
/*-- Author :     F. SCHROEDER UNI WUPPERTAL     09/06/1999 */
      COMMON /CRCORFRAM/DETSYS
      LOGICAL          DETSYS
#undef __CORFRAMINC__
#endif

#ifdef __CURVEINC__
/*-- Author :    The CORSIKA development group   16/05/1995 */
      COMMON /CRCURVE/ CHAPAR,DEP,ERR,NSTP
      DOUBLE PRECISION CHAPAR(15000),DEP(15000),ERR(15000)
      INTEGER          NSTP
#undef __CURVEINC__
#endif

#ifdef __DECAYCINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRDECAYC/GAM345,COS345,PHI345
      DOUBLE PRECISION GAM345(3),COS345(3),PHI345(3)
#undef __DECAYCINC__
#endif

#ifdef __DETCFGINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        10/03/1999 */
      COMMON /CRDETCFG/DETCFG
      DOUBLE PRECISION DETCFG
#undef __DETCFGINC__
#endif

#ifdef __DPMFLGINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRDPMFLG/NFLAIN,NFLDIF,NFLPI0,NFLCHE,NFLPIF,NFRAGM
      INTEGER          NFLAIN,NFLDIF,NFLPI0,NFLCHE,NFLPIF,NFRAGM
#undef __DPMFLGINC__
#endif

#ifdef __EDECAYINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CREDECAY/CETA
      DOUBLE PRECISION CETA(5)
#undef __EDECAYINC__
#endif

#ifdef __EGSDEBINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        11/09/1999 */
      COMMON /CREGSDEB/JCLOCK,NCLOCK,FEGSDB
      INTEGER          JCLOCK,NCLOCK
      LOGICAL          FEGSDB
#undef __EGSDEBINC__
#endif

#ifdef __ELABCTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRELABCT/ELCUT
      DOUBLE PRECISION ELCUT(4)
#undef __ELABCTINC__
#endif

#ifdef __ELADPMINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRELADPM/ELMEAN,ELMEAA,IELDPM,IELDPA
      DOUBLE PRECISION ELMEAN(40),ELMEAA(40)
      INTEGER          IELDPM(40,13),IELDPA(40,13)
#undef __ELADPMINC__
#endif

#ifdef __ELASTYINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRELASTY/ELAST
      DOUBLE PRECISION ELAST
#undef __ELASTYINC__
#endif

#ifdef __ELECININC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRELECIN/EKE0,EKE1,XR0,TEFF0,BLCC,XCC,ESIG0,ESIG1,PSIG0,
     *                 PSIG1,EDEDX0,EDEDX1,PDEDX0,PDEDX1,
     *                 EBR10,EBR11,EBR20,EBR21,
     *                 PBR10,PBR11,PBR20,PBR21,PBR30,PBR31,
     *                 TMXS0,TMXS1,ERANG0,
     *                 ERANG1,PRANG0,PRANG1,STERNCOR
      REAL             EKE0,EKE1,XR0,TEFF0,BLCC,XCC,
     *                 ESIG0(500),ESIG1(500),PSIG0(500),PSIG1(500),
     *                 EDEDX0(500),EDEDX1(500),PDEDX0(500),PDEDX1(500),
     *                 EBR10(500),EBR11(500),EBR20(500),EBR21(500),
     *                 PBR10(500),PBR11(500),PBR20(500),PBR21(500),
     *                 PBR30(500),PBR31(500),TMXS0(500),TMXS1(500),
     *                 ERANG0(1),ERANG1(1),PRANG0(1),PRANG1(1),STERNCOR
#undef __ELECININC__
#endif

#ifdef __EPCONTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CREPCONT/EDEP,RATIO,TSTEP,TUSTEP,USTEP,TVSTEP,VSTEP,
     *                 RHOFAC,EOLD,ENEW,EKE,ELKE,BETA2,GLE,TSCAT,
     *                 WCUT,
     *                 IDISC,IROLD,IRNEW
      DOUBLE PRECISION EDEP,RATIO,TSTEP,TUSTEP,USTEP,TVSTEP,VSTEP,
     *                 RHOFAC,EOLD,ENEW, EKE,ELKE,BETA2,GLE,TSCAT,
     *                 WCUT
      INTEGER          IDISC,IROLD,IRNEW
#undef __EPCONTINC__
#endif

#ifdef __ETHMAPINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRETHMAP/ECTMAP,ELEFT,ELEFTJ
      DOUBLE PRECISION ECTMAP,ELEFT,ELEFTJ
#undef __ETHMAPINC__
#endif

#ifdef __GENERINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRGENER/ GEN,ALEVEL
      DOUBLE PRECISION GEN,ALEVEL
#undef __GENERINC__
#endif

#ifdef __GEOMEGSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRGEOMEGS/ZALTIT,BOUND,OBSLVL,OBSLV2,NEWOBS
      DOUBLE PRECISION ZALTIT,BOUND(6),OBSLVL(20),OBSLV2(20)
      INTEGER          NEWOBS
#undef __GEOMEGSINC__
#endif

#ifdef __GLOBALINC__
/*-- Author :    D. HECK IK  FZK KARLSRUHE       26/11/2001 */
      COMMON /CRGLOBAL/GLONG,GLATI,GRFYEAR,IPREPR,IPRSTP,FPRSTP
      DOUBLE PRECISION GLONG,GLATI,GRFYEAR
      INTEGER          IPREPR,IPRSTP
      LOGICAL          FPRSTP
#undef __GLOBALINC__
#endif

#ifdef __GNUPRINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRGNUPR/ SE14,SE16,SE40
      DOUBLE PRECISION SE14(3,14),SE16(3,16),SE40(3,40)
#undef __GNUPRINC__
#endif

#ifdef __INCLINEDINC__
/*-- Author :                                               */
      COMMON /CRINCLINED/XPINCL,YPINCL,ZPINCL,PHINCL,THINCL
      DOUBLE PRECISION XPINCL,YPINCL,ZPINCL,PHINCL,THINCL
#undef __INCLINEDINC__
#endif

#ifdef __INDICEINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRINDICE/NNUCN,NKA0,NHYPN,NETA,NETAS,NPIZER,
     *                 NNC,NKC,NHC,NPC,NCH,NNN,NKN,NHN,NET,NPN
      INTEGER          NNUCN(2:3),NKA0(2:3),NHYPN(2:3),NETA(2:3,1:4),
     *                 NETAS(2:3),NPIZER(2:3),
     *                 NNC,NKC,NHC,NPC,NCH,NNN,NKN,NHN,NET,NPN
#undef __INDICEINC__
#endif

#ifdef __INTERINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRINTER/ AVCH,AVCH3,DC0,DLOGS,DMLOG,ECMDIF,ECMDPM,ELAB,
     *                 FNEUT,FNEUT2,GNU,PLAB,POSC2,POSC3,POSN2,POSN3,
     *                 RC3TO2,S,SEUGF,SEUGP,SLOG,SLOGSQ,SMLOG,
     *                 WIDC2,WIDC3,WIDN2,WIDN3,YCM,YY0,ZN,
     *                 IDIF,ITAR
      DOUBLE PRECISION AVCH,AVCH3,DC0,DLOGS,DMLOG,ECMDIF,ECMDPM,ELAB,
     *                 FNEUT,FNEUT2,GNU,PLAB,POSC2,POSC3,POSN2,POSN3,
     *                 RC3TO2,S,SEUGF,SEUGP,SLOG,SLOGSQ,SMLOG,
     *                 WIDC2,WIDC3,WIDN2,WIDN3,YCM,YY0,ZN
      INTEGER          IDIF,ITAR
#undef __INTERINC__
#endif

#ifdef __IRETINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRIRET/  IRET1,IRET2,IRETE
      INTEGER          IRET1,IRET2
      LOGICAL          IRETE
#undef __IRETINC__
#endif

#ifdef __ISTAINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRISTA/  IFINET,IFINNU,IFINKA,IFINPI,IFINHY,IFINCM,IFINOT,
     *                 IFINRHO
      INTEGER          IFINET,IFINNU,IFINKA,IFINPI,IFINHY,IFINCM,IFINOT,
     *                 IFINRHO
#undef __ISTAINC__
#endif

#ifdef __KAONSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRKAONS/ CKA
      DOUBLE PRECISION CKA(80)
#undef __KAONSINC__
#endif

#ifdef __LAYERINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRLAYER/ HBARO,HBAROI
      DOUBLE PRECISION HBARO(6),HBAROI(6)
#undef __LAYERINC__
#endif

#ifdef __LEPARINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRLEPAR/ LEPAR1,LEPAR2,LASTPI,NRESPC,NRESPN,NCPLUS
      INTEGER          LEPAR1,LEPAR2,LASTPI,NRESPC,NRESPN,NCPLUS
#undef __LEPARINC__
#endif

#ifdef __LONGIINC__
/*-- Author :    The CORSIKA development group   20/10/1994 */
      INTEGER          LNGMAX
      PARAMETER        (LNGMAX = 15000)
      INTEGER          TYPE1
      PARAMETER        (TYPE1 = 0)
      INTEGER          TYPE2
      PARAMETER        (TYPE2 = 1)
      INTEGER          TYPE3
      PARAMETER        (TYPE3 = 2)
      INTEGER          TYPE4
      PARAMETER        (TYPE4 = 3)
      COMMON /CRLONGI/ ADLONG,AELONG,APLONG,DLONG,ELONG,HLONG,PLONG,
     *                 SDLONG,SELONG,SPLONG,THSTEP,THSTPI,
     *                 LHEIGH,NSTEP
#if __PARALLEL__
     *                ,LONGMATRIX
#endif
     *                ,LLONGI,FLGFIT
#if __ANAHIST__
      DOUBLE PRECISION ADLONG(0:LNGMAX,19),AELONG(0:LNGMAX,10),
     *                 APLONG(0:LNGMAX,20),DLONG(0:LNGMAX,19),
     *                 ELONG(0:LNGMAX,10),
     *                 HLONG(0:LNGMAX),PLONG(0:LNGMAX,20),
     *                 SDLONG(0:LNGMAX,19),SELONG(0:LNGMAX,10),
     *                 SPLONG(0:LNGMAX,20),THSTEP,THSTPI
#else
      DOUBLE PRECISION ADLONG(0:LNGMAX,19),AELONG(0:LNGMAX,10),
     *                 APLONG(0:LNGMAX,10),DLONG(0:LNGMAX,19),
     *                 ELONG(0:LNGMAX,10),
     *                 HLONG(0:LNGMAX),PLONG(0:LNGMAX,10),
     *                 SDLONG(0:LNGMAX,19),SELONG(0:LNGMAX,10),
     *                 SPLONG(0:LNGMAX,10),THSTEP,THSTPI
#if __PARALLEL__
     *                ,LONGMATRIX(0:LNGMAX*10)
#endif
#endif
      INTEGER          LHEIGH,NSTEP
      LOGICAL          LLONGI,FLGFIT
#if __SLANT__ || __COAST__
      COMMON /CRSLANT/ RLONG,THCKRL,CTH,STHCPH,STHSPH,RLOFF
      DOUBLE PRECISION RLONG(0:LNGMAX),THCKRL(0:LNGMAX),
     *                 CTH,STHCPH,STHSPH,RLOFF
#endif
#undef __LONGIINC__
#endif

#ifdef __MAGANGINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMAGANG/ARRANG,ARRANR,COSANG,SINANG
      DOUBLE PRECISION ARRANG,ARRANR,COSANG,SINANG
#undef __MAGANGINC__
#endif

#ifdef __MAGNETINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMAGNET/BX,BZ,BVAL,BNORMC,BNORM,COSB,SINB,BLIMIT
      DOUBLE PRECISION BX,BZ,BVAL,BNORMC,BNORM,COSB,SINB,BLIMIT
#undef __MAGNETINC__
#endif

#ifdef __MEDIAINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMEDIA/ RLDU,RLDUI,RHO,RLC,NMED,MSGE,MGE,MSEKE,MEKE,
     *                 MLEKE,MCMFP,MRANGE,IRAYLM
      DOUBLE PRECISION RLDU,RLDUI
      REAL             RHO,RLC
      INTEGER          NMED,MSGE,MGE,MSEKE,MEKE,MLEKE,MCMFP,MRANGE,
     *                 IRAYLM
#undef __MEDIAINC__
#endif

#ifdef __MEDIACINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMEDIAC/MEDIA
      CHARACTER        MEDIA*24
#undef __MEDIACINC__
#endif

#ifdef __MISCINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMISC/  DUNIT,RHOR,KMPI,KMPO,NOSCAT,MED,IRAYLR
      DOUBLE PRECISION DUNIT,RHOR(6)
      INTEGER          KMPI,KMPO,NOSCAT,MED(6),IRAYLR(6)
#undef __MISCINC__
#endif

#ifdef __MPARTIINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMPARTI/MPARTO
      DOUBLE PRECISION MPARTO(20,28),MPHOTO(20),MPOSIT(20),MELECT(20),
     *                 MNU(20),MMUP(20),MMUM(20),MPI0(20),MPIP(20),
     *                 MPIM(20),MK0L(20),MKPL(20),MKMI(20),MNEUTR(20),
     *                 MPROTO(20),MPROTB(20),MK0S(20),MHYP(20),
     *                 MNEUTB(20),MDEUT(20),MTRIT(20),MHELI3(20),
     *                 MALPHA(20),MCHRMM(20),MCHRMB(20),MOTHER(20),
     *                 MMUOND,MMUONE
      EQUIVALENCE (MPARTO(1, 1),MPHOTO(1)), (MPARTO(1, 2),MPOSIT(1)),
     *            (MPARTO(1, 3),MELECT(1)), (MPARTO(1, 4),MNU(1))   ,
     *            (MPARTO(1, 5),MMUP(1))  , (MPARTO(1, 6),MMUM(1))  ,
     *            (MPARTO(1, 7),MPI0(1))  , (MPARTO(1, 8),MPIP(1))  ,
     *            (MPARTO(1, 9),MPIM(1))  , (MPARTO(1,10),MK0L(1))  ,
     *            (MPARTO(1,11),MKPL(1))  , (MPARTO(1,12),MKMI(1))  ,
     *            (MPARTO(1,13),MNEUTR(1)), (MPARTO(1,14),MPROTO(1)),
     *            (MPARTO(1,15),MPROTB(1)), (MPARTO(1,16),MK0S(1))  ,
     *            (MPARTO(1,18),MHYP(1))  , (MPARTO(1,19),MDEUT(1)) ,
     *            (MPARTO(1,20),MTRIT(1)) , (MPARTO(1,21),MHELI3(1)),
     *            (MPARTO(1,22),MALPHA(1)), (MPARTO(1,23),MCHRMM(1)),
     *            (MPARTO(1,24),MCHRMB(1)), (MPARTO(1,25),MOTHER(1)),
     *            (MPARTO(1,26),MMUOND)   , (MPARTO(1,27),MNEUTB(1)),
     *            (MPARTO(1,28),MMUONE)
#undef __MPARTIINC__
#endif

#ifdef __MULTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMULT/  EKINL,MSMM,MULTMA,MULTOT
      DOUBLE PRECISION EKINL
      INTEGER          MSMM,MULTMA(40,13),MULTOT(40,13)
#undef __MULTINC__
#endif

#ifdef __MULTHININC__
/*-- Author :    D. HECK IK  FZK KARLSRUHE       26/11/2013 */
      COMMON /CRMULTHIN/ EMFRACTH,EMTHNNG,EMTHNN,WMMAX0,
     *                   WMMAX,WMMAXEM0,WMMAXEM,THNMRTH,
     *                   WTRATMH,NMTHIN
      DOUBLE PRECISION   EMFRACTH(6),EMTHNNG(6),EMTHNN(6),WMMAX0(6),
     *                   WMMAX(6),WMMAXEM0(6),WMMAXEM(6),THNMRTH(6),
     *                   WTRATMH(6)
      INTEGER            NMTHIN
#undef __MULTHININC__
#endif

#ifdef __MULTSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMULTS/ B0G21,B1G21,G210,G211,G212,
     *                 B0G22,B1G22,G220,G221,G222,
     *                 B0G31,B1G31,G310,G311,G312,
     *                 B0G32,B1G32,G320,G321,G322,
     *                 B0BGB,B1BGB,BGB0,BGB1,BGB2,NBGB
      DOUBLE PRECISION B0G21,B1G21,G210(7),G211(7),G212(7),
     *                 B0G22,B1G22,G220(8),G221(8),G222(8),
     *                 B0G31,B1G31,G310(11),G311(11),G312(11),
     *                 B0G32,B1G32,G320(25),G321(25),G322(25),
     *                 B0BGB,B1BGB,BGB0(8),BGB1(8),BGB2(8)
      INTEGER          NBGB
#undef __MULTSINC__
#endif

#ifdef __MUMULTINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        14/10/1996 */
      COMMON /CRMUMULT/CHC,OMC,PHISCT,STEPL,VSCAT,FMOLI
      DOUBLE PRECISION CHC,OMC,PHISCT,STEPL,VSCAT
      LOGICAL          FMOLI
#undef __MUMULTINC__
#endif

#ifdef __MUONINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRMUON/  PRRMMU,RMMUT4
      DOUBLE PRECISION PRRMMU,RMMUT4
#undef __MUONINC__
#endif

#ifdef __MUPARTINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        11/09/1996 */
      COMMON /CRMUPART/AATOM,AMUPAR,BCUT,CMUON,CTAU,CONSTKINE,
     *                 EBYMU,EBYTAU,EE,SE,VFRAC,VMAX,VMIN,ZATOM,
     *                 MT,FMUBRM,FMUNUC,FMUORG
#if __MULTITHIN__
      DOUBLE PRECISION AMUPAR(0:46),BCUT,CMUON(11),CTAU(11),
#else
#if __EHISTORY__ || __PARALLEL__
      DOUBLE PRECISION AMUPAR(0:39),BCUT,CMUON(11),CTAU(11),
#else
      DOUBLE PRECISION AMUPAR(0:18),BCUT,CMUON(11),CTAU(11),
#endif
#endif
     *                 AATOM,CONSTKINE,EBYMU,EBYTAU,EE,SE,
     *                 VFRAC,VMAX,VMIN,ZATOM
      INTEGER          MT
      LOGICAL          FMUBRM,FMUNUC,FMUORG
#undef __MUPARTINC__
#endif

#ifdef __NCSNCSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRNCSNCS/SIGN30,SIGN45,SIGN60,SIGO30,SIGO45,SIGO60,
     *                 SIGA30,SIGA45,SIGA60,PNOA30,PNOA45,PNOA60,
     *                 SIG30A,SIG45A,SIG60A
      DOUBLE PRECISION SIGN30(56),SIGN45(56),SIGN60(56),
     *                 SIGO30(56),SIGO45(56),SIGO60(56),
     *                 SIGA30(56),SIGA45(56),SIGA60(56),
     *                 PNOA30(1540,3),PNOA45(1540,3),PNOA60(1540,3),
     *                 SIG30A(56),SIG45A(56),SIG60A(56)
#undef __NCSNCSINC__
#endif

#ifdef __NEWPARINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRNEWPAR/EA,PT2,PX,PY,TMAS,YR,ITYP,
     *                 IA1,IA2,IB1,IB2,IC1,IC2,ID1,ID2,IE1,IE2,IF1,IF2,
     *                 IG1,IG2,IH1,IH2,II1,II2,IJ1,NTOT
      DOUBLE PRECISION EA(3000),PT2(3000),PX(3000),PY(3000),TMAS(3000),
     *                 YR(3000)
      INTEGER          ITYP(3000),
     *                 IA1,IA2,IB1,IB2,IC1,IC2,ID1,ID2,IE1,IE2,IF1,IF2,
     *                 IG1,IG2,IH1,IH2,II1,II2,IJ1,NTOT
#undef __NEWPARINC__
#endif

#ifdef __NKGIINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRNKGI/  SEL,SELLG,STH,ZEL,ZELLG,ZSL,DIST,
     *                 DISX,DISY,DISXY,DISYX,DLAX,DLAY,DLAXY,DLAYX,
     *                 OBSATI,RADNKG,RMOL,TLEV,TLEVCM,IALT
      DOUBLE PRECISION SEL(10),SELLG(10),STH(10),ZEL(10),ZELLG(10),
     *                 ZSL(10),DIST(10),
     *                 DISX(-10:10),DISY(-10:10),
     *                 DISXY(-10:10,2),DISYX(-10:10,2),
     *                 DLAX (-10:10,2),DLAY (-10:10,2),
     *                 DLAXY(-10:10,2),DLAYX(-10:10,2),
     *                 OBSATI(2),RADNKG,RMOL(2),TLEV(10),TLEVCM(10)
      INTEGER          IALT(2)
#undef __NKGIINC__
#endif

#ifdef __NKGSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRNKGS/  CZX,CZY,CZXY,CZYX,SAH,SL,ZNE
      DOUBLE PRECISION CZX(-10:10,2),CZY(-10:10,2),CZXY(-10:10,2),
     *                 CZYX(-10:10,2),SAH(10),SL(10),ZNE(10)
#undef __NKGSINC__
#endif

#ifdef __NKGSUBINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRNKGSUB/XXOLD,YYOLD,ZZOLD
      DOUBLE PRECISION XXOLD,YYOLD,ZZOLD
#undef __NKGSUBINC__
#endif

#ifdef __NPARTIINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRNPARTI/NPARTO,NPART2
      DOUBLE PRECISION NPARTO(20,28), NPART2(20,28),
     *                 NPHOTO(20),NPOSIT(20),NELECT(20),
     *                 NNU(20),NMUP(20),NMUM(20),NPI0(20),NPIP(20),
     *                 NPIM(20),NK0L(20),NKPL(20),NKMI(20),NNEUTR(20),
     *                 NPROTO(20),NPROTB(20),NK0S(20),NHYP(20),
     *                 NNEUTB(20),NDEUT(20),NTRIT(20),NHELI3(20),
     *                 NALPHA(20),NCHRMM(20),NCHRMB(20),NOTHER(20),
     *                 NMUOND,NMUONE
      EQUIVALENCE (NPARTO(1, 1),NPHOTO(1)), (NPARTO(1, 2),NPOSIT(1)),
     *            (NPARTO(1, 3),NELECT(1)), (NPARTO(1, 4),NNU(1))   ,
     *            (NPARTO(1, 5),NMUP(1))  , (NPARTO(1, 6),NMUM(1))  ,
     *            (NPARTO(1, 7),NPI0(1))  , (NPARTO(1, 8),NPIP(1))  ,
     *            (NPARTO(1, 9),NPIM(1))  , (NPARTO(1,10),NK0L(1))  ,
     *            (NPARTO(1,11),NKPL(1))  , (NPARTO(1,12),NKMI(1))  ,
     *            (NPARTO(1,13),NNEUTR(1)), (NPARTO(1,14),NPROTO(1)),
     *            (NPARTO(1,15),NPROTB(1)), (NPARTO(1,16),NK0S(1))  ,
     *            (NPARTO(1,18),NHYP(1))  , (NPARTO(1,19),NDEUT(1)) ,
     *            (NPARTO(1,20),NTRIT(1)) , (NPARTO(1,21),NHELI3(1)),
     *            (NPARTO(1,22),NALPHA(1)), (NPARTO(1,23),NCHRMM(1)),
     *            (NPARTO(1,24),NCHRMB(1)), (NPARTO(1,25),NOTHER(1)),
     *            (NPARTO(1,26),NMUOND)   , (NPARTO(1,27),NNEUTB(1)),
     *            (NPARTO(1,28),NMUONE)
#undef __NPARTIINC__
#endif

#ifdef __NUPROCINC__
/*-- Author :    O. Pisanti  Uni Naples            11/03/03 */
      COMMON /CRNUPROC/JPROC,NUSLCT
      INTEGER          JPROC,NUSLCT
#undef __NUPROCINC__
#endif

#ifdef __OBSPARINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CROBSPAR/OBSLEV,THCKOB,XOFF,YOFF,HEIGHP,THETAP,PHIP,
     *                 THETPR,PHIPR,
#if __CURVED__
     *                 CORRXY,
#endif
#if __AUGERHIST__
     *                 COSPHIP,HEIGHTP,SAMPTH,SINPHIP,TANTEP,
#endif
#if __VIEWCONE__
     *                 VUECON,
#endif
     *                 NOBSLV
      DOUBLE PRECISION OBSLEV(20),THCKOB(20),XOFF(20),YOFF(20),
     *                 HEIGHP,THETAP,THETPR(2),PHIP,PHIPR(2)
#if __CURVED__
     *                 ,CORRXY
#endif
#if __AUGERHIST__
      DOUBLE PRECISION COSPHIP,HEIGHTP,SAMPTH,SINPHIP,TANTEP
#endif
#if __VIEWCONE__
      DOUBLE PRECISION VUECON(2)
#endif
      INTEGER          NOBSLV
#undef __OBSPARINC__
#endif

#ifdef __PAMINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
#if __CONEX__ && __EPOS__
      COMMON /CRPAM/   PAMA,SIGNUM,RESTMS,DECTIM
      DOUBLE PRECISION PAMA(25100),SIGNUM(25100),RESTMS(25100),
     *                 DECTIM(200)
#else
      COMMON /CRPAM/   PAMA,SIGNUM,RESTMS,DECTIM
      DOUBLE PRECISION PAMA(6000),SIGNUM(6000),RESTMS(6000),
     *                 DECTIM(200)
#endif
#undef __PAMINC__
#endif

#ifdef __PARPARINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRPARPAR/CURPAR,SECPAR,PRMPAR,OUTPAR,
#if __PARALLEL__
     *                 CUTPAR,
#endif
     *                 C,E00,E00PN,PTOT0,PTOT0N,THICKH,ITYPE,LEVL
#if __ICECUBE1__
     *                 ,energy_interesting
     *                 ,n_interesting,n_interesting_nu
     *                 ,still_interesting
#endif
#if __MULTITHIN__
      DOUBLE PRECISION CURPAR(0:46),SECPAR(0:46),PRMPAR(0:46),
     *                 OUTPAR(0:46),CUTPAR(0:46),
#else
#if __PARALLEL__ || __EHISTORY__
      DOUBLE PRECISION CURPAR(0:39),SECPAR(0:39),PRMPAR(0:39),
     *                 OUTPAR(0:39),CUTPAR(0:18),
#else
#if __INTTEST__
      DOUBLE PRECISION CURPAR(0:17),SECPAR(0:17),PRMPAR(0:17),
     *                 OUTPAR(0:17),
#else
      DOUBLE PRECISION CURPAR(0:16),SECPAR(0:16),PRMPAR(0:16),
     *                 OUTPAR(0:16),
#endif
#endif
#endif
     *                 C(50),E00,E00PN,PTOT0,PTOT0N,THICKH
#if __ICECUBE1__
      DOUBLE PRECISION energy_interesting
      INTEGER          n_interesting,n_interesting_nu
      LOGICAL          still_interesting
#endif
      INTEGER          ITYPE,LEVL
#undef __PARPARINC__
#endif

#ifdef __PARPAEINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      DOUBLE PRECISION GAMMA,COSTHE,PHIX,PHIY,H,T,X,Y,CHI,BETA,GCM,ECM
#if __THIN__||__CURVED__
     *                 ,WEIGHT
#endif
#if __CURVED__
     *                 ,HAPP,COSTAP,COSTEA
#endif
#if __PARALLEL__
     *                 ,ECTFLG
#endif
      EQUIVALENCE      (CURPAR(1), GAMMA ), (CURPAR(2), COSTHE),
     *                 (CURPAR(3), PHIX  ), (CURPAR(4), PHIY  ),
     *                 (CURPAR(5), H     ), (CURPAR(6), T     ),
     *                 (CURPAR(7), X     ), (CURPAR(8), Y     ),
     *                 (CURPAR(9), CHI   ), (CURPAR(10),BETA  ),
     *                 (CURPAR(11),GCM   ), (CURPAR(12),ECM   )
#if __THIN__||__CURVED__
     *                ,(CURPAR(13),WEIGHT)
#endif
#if __CURVED__
     *                ,(CURPAR(14),HAPP  ), (CURPAR(15),COSTAP),
     *                 (CURPAR(16),COSTEA)
#endif
#if __PARALLEL__
     *                ,(CURPAR(39),ECTFLG)
#endif
#undef __PARPAEINC__
#endif

#ifdef __PATHCMINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRPATHCM/B0PTH,B1PTH,PTH0,PTH1,PTH2,NPTH
      DOUBLE PRECISION B0PTH,B1PTH,PTH0(6),PTH1(6),PTH2(6)
      INTEGER          NPTH
#undef __PATHCMINC__
#endif

#ifdef __PHOTININC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRPHOTIN/EBINDA,GE0,GE1,GMFP0,GMFP1,GBR10,GBR11,
     *                 GBR20,GBR21,GBR30,GBR31,GBR40,GBR41,
     *                 RCO0,RCO1,RSCT0,RSCT1,COHE0,COHE1,MPGEM,NGR
      REAL             EBINDA,GE0,GE1,GMFP0(500),GMFP1(500),
     *                 GBR10(500),GBR11(500),GBR20(500),GBR21(500),
     *                 GBR30(500),GBR31(500),GBR40(500),GBR41(500),
     *                 RCO0,RCO1,RSCT0(100),RSCT1(100),COHE0(500),
     *                 COHE1(500)
      INTEGER          MPGEM(1),NGR
#undef __PHOTININC__
#endif

#ifdef __PIONINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRPION/  PI0MSQ,PITHR,PICMAS,PI0MAS,AMASK0,AMASKC,AMASPR,
     *                 AMASNT
      DOUBLE PRECISION PI0MSQ,PITHR,PICMAS,PI0MAS,AMASK0,AMASKC,AMASPR,
     *                 AMASNT
#undef __PIONINC__
#endif

#ifdef __PLOTSH2INC__
/*-- Author :    Fabian Schmidt, Leeds Univ.     01/05/2005 */
      COMMON /CRPLOTSH2/PLX1,PLX2,PLY1,PLY2, PLZ1,PLZ2,PLCUT,PLTCUT,
     *                 XCONST,YCONST,ZCONST,
     *                 PLMAPXY,PLMAPXZ,PLMAPYZ,
     *                 TRID,TRE,TRX1,TRY1,TRZ1,TRT1,TRX2,TRY2,TRZ2,
     *                 TRT2,FBOXCUT
      INTEGER          IXRES,IYRES,IZRES
      PARAMETER        (IXRES=2048)
      PARAMETER        (IYRES=2048)
      PARAMETER        (IZRES=4096)
      DOUBLE PRECISION PLX1,PLX2,PLY1,PLY2,PLZ1,PLZ2,PLCUT(4),PLTCUT
     *                 ,XCONST,YCONST,ZCONST
      REAL             PLMAPXY(3,IYRES,IXRES),PLMAPXZ(3,IZRES,IXRES),
     *                 PLMAPYZ(3,IZRES,IYRES)
      REAL             TRID,TRE,TRX1,TRY1,TRZ1,TRT1,TRX2,TRY2,TRZ2,TRT2
      LOGICAL          FBOXCUT
#undef __PLOTSH2INC__
#endif

#ifdef __POLARINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRPOLAR/ POLART,POLARF
      DOUBLE PRECISION POLART,POLARF
#undef __POLARINC__
#endif

#ifdef __PRIMSPINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRPRIMSP/PSLOPE,LLIMIT,ULIMIT,LL,UL,SLEX,ISPEC
      DOUBLE PRECISION PSLOPE,LLIMIT,ULIMIT,LL,UL,SLEX
      INTEGER          ISPEC
#undef __PRIMSPINC__
#endif

#ifdef __PYTLININC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        19/02/2007 */
      COMMON /CRPYTLIN/ IPTABL,IFLGPYE,IFLGPYW
      INTEGER           IPTABL(200),IFLGPYE,IFLGPYW
#undef __PYTLININC__
#endif

#ifdef __RANDPAINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRRANDPA/RD,FAC,U1,U2,NSEQ,ISEED,KNOR
      DOUBLE PRECISION RD(3000),FAC,U1,U2
#if __MULTITHIN__
      INTEGER          ISEED(3,17),NSEQ
#else
      INTEGER          ISEED(3,10),NSEQ
#endif
      LOGICAL          KNOR
#undef __RANDPAINC__
#endif

#ifdef __RANMA3INC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        18/03/2003 */
      INTEGER          KSEQ
#if __MULTITHIN__
      PARAMETER        (KSEQ = 16)
#else
      PARAMETER        (KSEQ = 9)
#endif
      COMMON /CRRANMA3/CD,CINT,CM,TWOM24,TWOM48,MODCNS
      DOUBLE PRECISION CD,CINT,CM,TWOM24,TWOM48
      INTEGER          MODCNS
#undef __RANMA3INC__
#endif

#ifdef __RANMA4INC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        18/03/2003 */
      COMMON /CRRANMA4/C,U,IJKL,I97,J97,NTOT,NTOT2,JSEQ
      DOUBLE PRECISION C(KSEQ),U(97,KSEQ),UNI
      INTEGER          IJKL(KSEQ),I97(KSEQ),J97(KSEQ),
     *                 NTOT(KSEQ),NTOT2(KSEQ),JSEQ
#undef __RANMA4INC__
#endif

#ifdef __RATIOSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRRATIOS/RPI0R,RPIER,RPEKR,RPEKNR,PPICH,PPINCH,PPNKCH,
     *                 ISEL,NEUTOT,NTOTEM
      DOUBLE PRECISION RPI0R,RPIER,RPEKR,RPEKNR,PPICH,PPINCH,PPNKCH
      INTEGER          ISEL,NEUTOT,NTOTEM
#undef __RATIOSINC__
#endif

#ifdef __RECORDINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRRECORD/IRECOR
      INTEGER          IRECOR
#undef __RECORDINC__
#endif

#ifdef __REJECTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRREJECT/AVNREJ,ALTMIN,ANEXP,THICKA,THICKD,CUTLN,EONCUT,
#if __THIN__
     *                 EFRCTHN,ETHINN,ETHINNG,THINRAT,THINRATH,WEITRAT,
     *                 WEITRATH,EEFRTHN,
#endif
     *                 FNPRIM
      DOUBLE PRECISION AVNREJ(20),ALTMIN(20),ANEXP(20),THICKA(20),
     *                 THICKD(20),CUTLN,EONCUT
#if __THIN__
     *                 ,EFRCTHN,ETHINN,ETHINNG,THINRAT,THINRATH,WEITRAT,
     *                 WEITRATH,EEFRTHN
#endif
      LOGICAL          FNPRIM
#undef __REJECTINC__
#endif

#ifdef __RESONINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRRESON/ RDRES,RESRAN,IRESPAR
      DOUBLE PRECISION RDRES(2),RESRAN(0:1000000)
      INTEGER          IRESPAR
#undef __RESONINC__
#endif

#ifdef __RESTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRREST/  CONTNE,TAR,LIT
      DOUBLE PRECISION CONTNE(3),TAR
      INTEGER          LIT
#undef __RESTINC__
#endif

#ifdef __RUNPARINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRRUNPAR/FIXHEI,THICK0,HILOECM,HILOELB,SIG1I,TARG1I,
     *                 STEPFC,RCUT,RCUT2,
#if __CHARM__ || __SIBYLL__
     *                 SIGMAQ,
#endif
#if __CURVED__&&__UPWARD__
     *                 HIMPACT,HIMPCT,
#endif
#if __PARALLEL__
     *                 ECTCUT,ECTMAX,MPIID,MPACUT,MPAINP,MPAJOB,
     *                 I1CUTPAR,I2CUTPAR,
#endif
     *                 NRRUN,NSHOW,MPATAP,MONIIN,
     *                 MONIOU,MDEBUG,NUCNUC,MTABOUT,MLONGOUT,
     *                 ISEED1I,
#if __CHARM__
     *                 PROPMOD,
#endif
#if __URQMD__
     *                 IUDEBUG,IUDEBG0,
#endif
#if __CERENKOV__
     *                 MCETAP,NOCERB,
#if __CEFFIC__
     *                 MCERABS,MCERQEF,MCERMIR,
#endif
#endif
#if __INTTEST__
     *                 LUNPLT,ISHWW,
#endif
     *                 LSTCK,
#if !__STACKIN__ && !__CONEX__
     *                 LSTCK1,LSTCK2,
#endif
c#if __ANAHIST__||__AUGERHIST__||__MUONHIST__
c     *                 LUNHST,
c#endif
     *                 ISHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,NDEBDL,
     *                 N1STTR,MDBASE,
#if __PLOTSH__
     *                 NPLEM,NPLMU,NPLHAD,
#endif
     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC,FIXTAR,
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE,FPAROUT,FTABOUT,
     *                 FLONGOUT,GHEISH,GHESIG,GHEISDB,USELOW,TMARGIN
#if __ICECUBE2__
     *                 ,gzip_output,pipe_output
#endif
#if !__STACKIN__ && !__CONEX__
     *                 ,FOUTFILE,IFINAM
#endif
#if  __CURVED__&&__UPWARD__
     *                 ,FIMPCT
#endif
#if __CURVED__
     *                 ,FFLATOUT
#endif
#if __FLUKA__
     *                 ,FFLUDB,FFLUKA,FFLUSIG
#elif __URQMD__
     *                 ,FURQMD,FURQSG
#endif
#if __COMPACT__
     *                 ,COMOUT
#endif
#if __EHISTORY__
     *                 ,FEMADD,FNUADD
#endif
#if __PLOTSH__||__PLOTSH2__
     *                 ,PLOTSH
#endif
#if __PARALLEL__
     *                 ,FECTOUT,FECTEGS,FPRIM
#endif
      COMMON /CRRUNPAC/DATDIR,DSN,DSNTAB,DSNLONG,HOST,USER
#if __PARALLEL__
     *                 ,DSNCUT,DSNINP,DSNJOB                  
     *                 ,CFILINP,CFILOUT
#endif
#if __UNIX__
     *                 ,LSTDSN
#endif
#if __FLUKA__
     *                 ,DSNFLOUT,DSNFLERR
#endif
#if __ANAHIST__||__AUGERHIST__||__MUONHIST__
     *                 ,DSNHST
#endif
#if __STACKIN__
     *                 ,FILINP
#elif !__CONEX__
     *                 ,FILOUT
#endif
#if __PLOTSH__
     *                 ,CPLOT
#endif
#if __PLOTSH2__
     *                 ,CPLOT2
#endif
#if __INTTEST__
     *                 ,HISTDS
#endif
      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB,SIG1I,TARG1I,
     *                 STEPFC,RCUT,RCUT2
#if __CHARM__ || __SIBYLL__
      DOUBLE PRECISION SIGMAQ(4)
#endif
#if __CURVED__&&__UPWARD__
      DOUBLE PRECISION HIMPACT(2),HIMPCT
#endif
      INTEGER          NRRUN,NSHOW,MPATAP,MONIIN,MONIOU,MDEBUG,NUCNUC,
     *                 ISHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,NDEBDL,
     *                 N1STTR,MDBASE,MTABOUT,MLONGOUT,ISEED1I(3)
#if __PARALLEL__
      INTEGER          MPACUT,MPAINP,MPAJOB
#endif
#if __CHARM__
      INTEGER          PROPMOD
#endif
#if __URQMD__
      INTEGER          IUDEBUG,IUDEBG0
#endif
#if __CERENKOV__
      INTEGER          MCETAP,NOCERB
#if __CEFFIC__
      INTEGER          MCERABS,MCERQEF,MCERMIR
#endif
#endif
#if __PLOTSH__
      INTEGER          NPLEM,NPLMU,NPLHAD
#endif
#if __INTTEST__
      INTEGER          LUNPLT,ISHWW
#endif
      INTEGER          LSTCK
#if !__STACKIN__ && !__CONEX__
     *                ,LSTCK1,LSTCK2
#endif
#if __ANAHIST__||__AUGERHIST__||__MUONHIST__
c     INTEGER          LUNHST
      CHARACTER*255    DSNHST
#endif
#if __STACKIN__
      CHARACTER*132    FILINP
#elif !__CONEX__
      CHARACTER*132    FILOUT
#endif
      CHARACTER*255    DSN,DSNTAB,DSNLONG
      CHARACTER*132    DATDIR
      CHARACTER*60     HOST,USER
#if __PARALLEL__
      CHARACTER*255    DSNCUT,DSNINP,DSNJOB
#endif
#if __UNIX__
      CHARACTER*9      LSTDSN
#endif
#if __INTTEST__
      CHARACTER*120    HISTDS
#endif
#if __PLOTSH2__
      CHARACTER*90     CPLOT2
#endif
#if __PLOTSH__
      CHARACTER*80     CPLOT
#endif
      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC,FIXTAR,
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE,FPAROUT,FTABOUT,
     *                 FLONGOUT,GHEISH,GHESIG,GHEISDB,USELOW,TMARGIN
#if __EHISTORY__
     *                 ,FEMADD,FNUADD
#endif
#if __CURVED__
     *                 ,FFLATOUT
#if __UPWARD__
     *                 ,FIMPCT
#endif
#endif
#if !__STACKIN__ && !__CONEX__
      LOGICAL          FOUTFILE
      INTEGER          IFINAM
#endif
#if __PARALLEL__
      DOUBLE PRECISION ECTCUT,ECTMAX
      INTEGER          MPIID
      LOGICAL          FECTOUT,FECTEGS,FPRIM
      INTEGER          I1CUTPAR,I2CUTPAR
      CHARACTER*255    CFILINP,CFILOUT
#endif
#if __FLUKA__
      CHARACTER*255    DSNFLOUT,DSNFLERR
      LOGICAL          FFLUDB,FFLUKA,FFLUSIG
#elif __URQMD__
      LOGICAL          FURQMD,FURQSG
#endif
#if __ICECUBE2__
      LOGICAL          pipe_output,gzip_output
#endif
#if __COMPACT__
      LOGICAL          COMOUT
#endif
#if __PLOTSH__||__PLOTSH2__
      LOGICAL          PLOTSH
#endif
#undef __RUNPARINC__
#endif

#ifdef __SFRONTINC__
/*-- Author :    D. HECK  IK FZK KARLSRUHE       21/06/2001 */
      COMMON /CRSFRONT/HEIGHPS,XOFFS,YOFFS,HEITH,RMAXS,
     *                 TCEN,PROFAK1,PROFAK2,PROFAK3,CCLA
      DOUBLE PRECISION HEIGHPS,XOFFS,YOFFS,HEITH,RMAXS,
     *                 TCEN,PROFAK1,PROFAK2,PROFAK3
      CHARACTER*5      CCLA(11)
#undef __SFRONTINC__
#endif

#ifdef __SIGMINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRSIGM/  SIGMA,SIGANN,SIGAIR,FRACTN,FRCTNO,SIGAIRS
      DOUBLE PRECISION SIGMA,SIGANN,SIGAIR,FRACTN,FRCTNO,SIGAIRS
#undef __SIGMINC__
#endif

#ifdef __SIGMUINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        12/05/2003 */
      COMMON /CRSIGMU/ BREMSTAB,NUCTAB,PAIRTAB,DEDXMU,DEDXM,
     *                 FRABTN,FRANTN,FRAPTN,FRBTNO,FRNTNO,FRPTNO,
     *                 SIGBRM,SIGNUC,SIGPRM
      DOUBLE PRECISION BREMSTAB(141,3,2),NUCTAB(141,3,2),
     *                 PAIRTAB(141,3,2), DEDXMU(141,3,2),DEDXM(141,2),
     *                 FRABTN,FRANTN,FRAPTN,FRBTNO,FRNTNO,FRPTNO,
     *                 SIGBRM,SIGNUC,SIGPRM
#undef __SIGMUINC__
#endif

#ifdef __STACKEINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRSTACKE/E,TIM,U,V,W,X,Y,Z,DNEAR,
#if __THIN__
     *                 WT,
#endif
#if __CURVED__
     *                 ZAP,WAP,WA,XXXX,YYYY,
#endif
#if __SLANT__
     *                 TSLAN,
#endif
#if __MULTITHIN__
     *                 WTM,
#endif
     *                 IQ,IGEN,IR,IOBS,LPCTE,NP
      DOUBLE PRECISION E(60),TIM(60),U(60),V(60),W(60),
     *                 X(60),Y(60),Z(60),DNEAR(60)
#if __THIN__
     *                 ,WT(60)
#endif
#if __CURVED__
     *                 ,ZAP(60),WAP(60),WA(60),XXXX(60),YYYY(60)
#endif
#if __SLANT__
     *                 ,TSLAN(60)
#endif
#if __MULTITHIN__
     *                 ,WTM(6,60)
#endif
      INTEGER          IQ(60),IGEN(60),IR(60),IOBS(60),LPCTE(60),NP
#undef __STACKEINC__
#endif

#ifdef __STACKFINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRSTACKF/STACKI,
#if __PARALLEL__
     *                 STACKJ,
#endif
     *                 MSTACKP,MEXST,NSHIFT,NOUREC,NOURECMAX,ICOUNT,
     *                 NTO,NFROM
#if __PARALLEL__
     *                ,MSTACKPJ,MEXSTJ,NSHIFTJ,NOURECJ,JCOUNT,
     *                 NTOJ,NFROMJ,NTOC
#endif
      INTEGER          MAXSTK
#if __MULTITHIN__
      PARAMETER        (MAXSTK = 47*25000*2)
#else  /* !__MULTITHIN__ */
#if __PARALLEL__
      PARAMETER        (MAXSTK = 40*25000*2)
#else  /* !__PARALLEL__ */
#if __INTTEST__
      PARAMETER        (MAXSTK = 18*256*2)
#else   /* !__INTTEST__ */
#if __EHISTORY__
#if __ICECUBE1__
      PARAMETER        (MAXSTK = 39)
#else
      PARAMETER        (MAXSTK = 39*256*2)
#endif
#else    /* !__EHISTORY__ */
#if __CURVED__
#if __ICECUBE1__
      PARAMETER        (MAXSTK = 17)
#else
      PARAMETER        (MAXSTK = 17*256*2)
#endif
#else     /* !__CURVED__ */
#if __THIN__
      PARAMETER        (MAXSTK = 14*312*2)
#else      /* !__THIN__ */
      PARAMETER        (MAXSTK = 13*340*2)
#endif      /* __THIN__ */
#endif     /* __CURVED__ */
#endif    /* __EHISTORY__ */
#endif   /* __INTTEST__ */
#endif  /* __PARALLEL__ */
#endif /* __MULTITHIN__ */
      DOUBLE PRECISION STACKI(MAXSTK)
#if __PARALLEL__
     *                ,STACKJ(MAXSTK)
#endif
      INTEGER          MSTACKP,MEXST,NSHIFT,NOUREC,NOURECMAX,ICOUNT,
     *                 NTO,NFROM
#if __PARALLEL__
     *                ,MSTACKPJ,MEXSTJ,NSHIFTJ,NOURECJ,JCOUNT,NTOJ,
     *                 NFROMJ,NTOC
#endif
#undef __STACKFINC__
#endif

#ifdef __STATIINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRSTATI/ SABIN,SBBIN,INBIN,IPBIN,IKBIN,IHBIN
      DOUBLE PRECISION SABIN(40),SBBIN(40)
      INTEGER          INBIN(40),IPBIN(40),IKBIN(40),IHBIN(40)
#undef __STATIINC__
#endif

#ifdef __STRBARINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRSTRBAR/CSTRBA
      DOUBLE PRECISION CSTRBA(11)
#undef __STRBARINC__
#endif

#ifdef __TABLESINC__
/*-- Author :    Johannes Knapp, Univ. of Leeds  04/03/1999 */
      INTEGER          IEBIN, ITBIN, IDBIN
      PARAMETER        (IEBIN=40,ITBIN=30,IDBIN=20)
      COMMON /CRTABLES/G_ARRAY, E_ARRAY, M_ARRAY,
     *                 EBOFF,EBFAC,TBOFF,TBFAC,DBOFF,DBFAC
      REAL             G_ARRAY(IEBIN,ITBIN,IDBIN)
      REAL             E_ARRAY(IEBIN,ITBIN,IDBIN)
      REAL             M_ARRAY(IEBIN,ITBIN,IDBIN)
      REAL             EBOFF,EBFAC,TBOFF,TBFAC,DBOFF,DBFAC
      REAL             EBMIN,EBMAX,TBMIN,TBMAX,DBMIN,DBMAX
      PARAMETER        (EBMIN=1.E-4,EBMAX=1.E4)
      PARAMETER        (TBMIN=10.,TBMAX=1.E4)
      PARAMETER        (DBMIN=5.E3,DBMAX=5.E5)
#undef __TABLESINC__
#endif

#ifdef __THNVARINC__
/*-- Author :    The CORSIKA development group   31/01/1997 */
      COMMON /CRTHNVAR/STACKINT,
#if __THIN__ || __MULTITHIN__ 
     *                 EEPP,ELIM,
#endif
#if __THIN__
     *                 RMAX,RMAX2,
     *                 WMAX,WMAX0,WMAXE,WMAXE0,WMAXEM,
#endif
     *                 INT_ICOUNT,MODETHN,THINNING
#if __THIN__
     *                 ,RLIM,WLIM
#endif
      INTEGER          MAXICOUNT
      PARAMETER        (MAXICOUNT = 200000)
#if __MULTITHIN__
      DOUBLE PRECISION STACKINT(0:46,MAXICOUNT)
#else
#if __PARALLEL__
      DOUBLE PRECISION STACKINT(0:39,MAXICOUNT)
#else
#if __INTTEST__
      DOUBLE PRECISION STACKINT(0:17,MAXICOUNT)
#else
#if __EHISTORY__
      DOUBLE PRECISION STACKINT(0:38,MAXICOUNT)
#else
#if __CURVED__
      DOUBLE PRECISION STACKINT(0:16,MAXICOUNT)
#else
      DOUBLE PRECISION STACKINT(0:13,MAXICOUNT)
#endif
#endif
#endif
#endif
#endif
#if __THIN__ || __MULTITHIN__ 
     *                 ,EEPP(MAXICOUNT),ELIM
#endif
#if  __THIN__
     *                 ,RMAX,RMAX2
     *                 ,WMAX,WMAX0,WMAXE,WMAXE0,WMAXEM
#endif
      INTEGER          INT_ICOUNT,MODETHN
      LOGICAL          THINNING
#if __THIN__
      LOGICAL           RLIM,WLIM
#endif
#undef __THNVARINC__
#endif

#ifdef __THRESHINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRTHRESH/RMSQ,API,TE,THMOLL,AP,AE,UP,UE
      DOUBLE PRECISION RMSQ,API,TE,THMOLL
      REAL             AP,AE,UP,UE
#undef __THRESHINC__
#endif

#ifdef __TIMLIMINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        23/02/2006 */
      COMMON /CRTIMLIM/DSTLIM,TIMLIM,LTMLMPR
      DOUBLE PRECISION DSTLIM,TIMLIM
      LOGICAL          LTMLMPR
#undef __TIMLIMINC__
#endif

#ifdef __TRAJECINC__
/*-- Author :    M. DOERT TU DORTMUND            06/01/2012 */
      COMMON /CRTRAJEC/DECL,GEODECL,RA,TLATDGR,TLATMIN,TLATSEC,
     *                 TLONGDGR,TLONGMIN,TLONGSEC,TRAD,
     *                 TYEAR,TMONTH,TDAY,THOUR,TMINUTE,TSECOND,
     *                 TDURATION,TLOGIC,TLATDIR,TLONGDIR
      DOUBLE PRECISION DECL,GEODECL,RA,TLATDGR,TLATMIN,TLATSEC,
     *                 TLONGDGR,TLONGMIN,TLONGSEC,TRAD
      INTEGER          TYEAR,TMONTH,TDAY,THOUR,TMINUTE,TSECOND,TDURATION
      LOGICAL          TLOGIC
      CHARACTER        TLATDIR*1,TLONGDIR*1
#undef __TRAJECINC__
#endif

#ifdef __UPHIOTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRUPHIOT/THETA,SINTHE,COSTHE,SINPHI,COSPHI,PI,TWOPI
      DOUBLE PRECISION THETA,SINTHE,COSTHE,SINPHI,COSPHI,PI,TWOPI
#undef __UPHIOTINC__
#endif

#ifdef __USEFULINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRUSEFUL/PRM,PRMT2,RMI,VCI,MEDIUM,MEDOLD,IBLOBE
      DOUBLE PRECISION PRM,PRMT2,RMI,VCI
      INTEGER          MEDIUM,MEDOLD,IBLOBE
#undef __USEFULINC__
#endif

#ifdef __VERSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRVERS/  VERNUM,MVDATE,VERDAT
      DOUBLE PRECISION VERNUM
      INTEGER          MVDATE
      CHARACTER*18     VERDAT
#undef __VERSINC__
#endif

#ifdef __VKININC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRVKIN/  BETACM
      DOUBLE PRECISION BETACM
#undef __VKININC__
#endif

#ifdef __WGHTMAINC__
/*-- Author :    Johannes Knapp, IEKP U KA       26/11/1997 */
      COMMON /CRWGHTMA/MWGHMA,MWGHTOT
      INTEGER          MWGHMA(46,15),MWGHTOT(46,15)
#undef __WGHTMAINC__
#endif

     /* CERENKOV */
#ifdef __CERABSINC__
/*-- Author : V. de Souza Filho, Uni. Campinas   22/06/1999 */
      COMMON /CRCERABS/ATMABS,ATEOBS,QUAEFF,MIRREF,CERQEF,CERATA,CERMIR
      DOUBLE PRECISION ATMABS(201,0:50),ATEOBS(201),QUAEFF(201),
     *                 MIRREF(201)
      LOGICAL          CERQEF,CERATA,CERMIR
#undef __CERABSINC__
#endif

#ifdef __CEREN1INC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRCEREN1/CERELE,CERHAD,ETADSN,WAVLGL,WAVLGU,CYIELD,
     *                 CERSIZ,CERNOR,WLMAX,WLMIN,MCERFI,LCERDB
      DOUBLE PRECISION CERELE,CERHAD,ETADSN,WAVLGL,WAVLGU,CYIELD,
     *                 CERSIZ,CERNOR,WLMAX,WLMIN
      INTEGER          MCERFI
      LOGICAL          LCERDB
#undef __CEREN1INC__
#endif

#ifdef __CEREN2INC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRCEREN2/ACERX,ACERY,CERXOS,CERYOS,
     *                 DCERX,DCERXI,DCERY,DCERYI,EPSX,EPSY,FCERX,FCERY,
     *                 WL,XCMAX,XCMAXS,XSCATT,YCMAX,YCMAXS,YSCATT,
     *                 PHOTCM,XCER,YCER,UEMIS,VEMIS,WEMIS,CARTIM,
     *                 XEMIS,YEMIS,ZEMIS,XSTEP,YSTEP,ZSTEP,
     *                 XSTEP2,YSTEP2,ZSTEP2,CERDIST,
#if __THIN__
     *                 WTCER,
#endif
     *                 NCERX,NCERY,ICERML
      DOUBLE PRECISION ACERX,ACERY,CERXOS(20),CERYOS(20),
     *                 DCERX,DCERXI,DCERY,DCERYI,EPSX,EPSY,FCERX,FCERY,
     *                 WL,XCMAX,XCMAXS,XSCATT,YCMAX,YCMAXS,YSCATT
      DOUBLE PRECISION PHOTCM,XCER,YCER,UEMIS,VEMIS,WEMIS,CARTIM,
     *                 XEMIS,YEMIS,ZEMIS,XSTEP,YSTEP,ZSTEP,
     *                 XSTEP2,YSTEP2,ZSTEP2,CERDIST
#if __THIN__
     *                 ,WTCER
#endif
      INTEGER          NCERX,NCERY,ICERML
#undef __CEREN2INC__
#endif

#ifdef __CERTELINC__
/*-- Author :     R. Ulrich IKP KIT Karlsruhe      22/10/16 */
      COMMON /CERTELS/ CERTELX,CERTELY,CERTELZ,CERTELR,CERTELID,NCERTEL
      INTEGER          NMAXCERTEL
      PARAMETER        (NMAXCERTEL=99)
      DOUBLE PRECISION CERTELX(NMAXCERTEL),CERTELY(NMAXCERTEL),
     *                 CERTELZ(NMAXCERTEL),CERTELR(NMAXCERTEL)
      INTEGER          CERTELID(NMAXCERTEL)
      INTEGER          NCERTEL
#undef __CERTELINC__
#endif

#ifdef __CEREN3INC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRCEREN3/CERCNT,CERBUF,DATAB2,NCERBUF,NRECER,LHCER
      INTEGER          MAXBF2
#if __THIN__
      PARAMETER        (MAXBF2 = 39 * 8)
#else
      PARAMETER        (MAXBF2 = 39 * 7)
#endif
      DOUBLE PRECISION CERCNT
      INTEGER          NCERBUF 
      /*-- the next three lines require __CERTELINC__ too: */
      /*-- (in principle we could also invent NMAXCERBUF) */
      INTEGER          NRECER,LHCER(NMAXCERTEL)
      INTEGER          CERBUF(0:NMAXCERTEL)
      REAL             DATAB2(MAXBF2,NMAXCERTEL)
#undef __CEREN3INC__
#endif

#ifdef __RTABLEINC__
/*-- Author :     F. SCHROEDER UNI WUPPERTAL       30/06/99 */
      COMMON /CRRTABLE/DISTEF, TOF
      INTEGER          MHEIGH,NTHETA
      PARAMETER        (MHEIGH = 452) ! NUMBER OF VALUES IN HEIGHT
      PARAMETER        (NTHETA = 360) ! NUMBER OF VALUES IN THETA
      DOUBLE PRECISION DISTEF(0:NTHETA,0:MHEIGH),TOF(0:NTHETA,0:MHEIGH)
#undef __RTABLEINC__
#endif

     /* CONEXLINK */
#ifdef __CONEXINC__
/*-- Author :                                               */
      COMMON /CXINPUT/ CXTHR,CXMCC,CXWMX,CXMCS
#if __SLANT__
     *                ,DZCNX
#endif
     *                ,INLUN,OUTLUN,IDCX,ISX0,FINCNX,FCXGHE,FCXWMX,FCXCE
     *                ,FCORS
      DOUBLE PRECISION CXTHR(3),CXMCC(3),CXWMX(3),CXMCS
#if __SLANT__
     *                 ,DZCNX
#endif
      INTEGER          INLUN,OUTLUN,IDCX,ISX0
      LOGICAL          FINCNX,FCXGHE,FCXWMX,FCXCE,FCORS
      COMMON /CXCONVE/ CXXCONV,CXYCONV,CXTCONV
      DOUBLE PRECISION CXXCONV,CXYCONV,CXTCONV
#undef __CONEXINC__
#endif

     /* FLUKALINK */
#ifdef __FLULININC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        22/10/2002 */
      COMMON /CRFLULIN/ICFTABL,IFCTABL
      INTEGER          ICFTABL(200),IFCTABL(-6:100)
#undef __FLULININC__
#endif

     /* GHEISHALINK */
#ifdef __CGCOMPINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      PARAMETER (KKK=3)
      COMMON/CGCOMP/   ACOMP,ZCOMP,WCOMP,KK
      DOUBLE PRECISION ACOMP(KKK),ZCOMP(KKK),WCOMP(KKK)
#undef __CGCOMPINC__
#endif

     /* URQMDLINK */
#ifdef __URQCOMINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        08/03/2004 */
      COMMON /CRURQCOM/XS,BIM,ICUTBL,ICU2I3,IFLBMAX
      DOUBLE PRECISION XS(3),BIM(3)
      INTEGER          ICUTBL(200),ICU2I3(200),IFLBMAX
#undef __URQCOMINC__
#endif

#ifdef __URQINTESTINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        04/12/2002 */
      COMMON/CRURQINT/ CTAG2,NELCOLL2
      INTEGER          CTAG2,NELCOLL2
#undef __URQINTESTINC__
#endif

#ifdef __URQSIGINC__
/*-- Author :    J. Wentz  IK FZK KARLSRUHE      20/05/1999 */
      INTEGER          MAXA,MAXS,MAXZ
      PARAMETER        (MAXA=60)
      PARAMETER        (MAXS=70)
      PARAMETER        (MAXZ=30)
      COMMON/CRURQSIG/ URCRNU,URCRSP
      REAL             URCRNU(MAXZ,MAXA,3),URCRSP(MAXS,3)
#undef __URQSIGINC__
#endif

     /* DPMJETLINK */
#ifdef __DPMDBGINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        14/02/1996 */
      COMMON /CRDPMDBG/E000,IRAND
      DOUBLE PRECISION E000
      INTEGER          IRAND(3)
#undef __DPMDBGINC__
#endif

#ifdef __DPMJETINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        14/02/1996 */
      COMMON /CRDPMJET/LEVLDB,IDPMVER,FDPMJT,FDPJSG
      INTEGER          LEVLDB,IDPMVER
      LOGICAL          FDPMJT,FDPJSG
#undef __DPMJETINC__
#endif

#ifdef __DPMLININC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        14/02/1996 */
      COMMON /CRDPMLIN/ICTABL
      INTEGER          ICTABL(200)
#undef __DPMLININC__
#endif

     /* HERWIGLINK */
#ifdef __ACCEPTEDINC__
/*-- Author :    O. Pisanti Uni Naples           28/04/2003 */
      COMMON /CRACCEPT/MM
      INTEGER          MM
#undef __ACCEPTEDINC__
#endif

#ifdef __EE00INC__
/*-- Author :    O. Pisanti Uni Naples           28/04/2003 */
      COMMON /CREE00/  ENU,ETLAB
      DOUBLE PRECISION ENU,ETLAB
#undef __EE00INC__
#endif

#ifdef __HWCRSKINC__
/*-- Author :    O. Pisanti Uni Naples           28/04/2003 */
      COMMON /HWCRSK/  RNAMCOR
      CHARACTER*8      RNAMCOR(195)
#undef __HWCRSKINC__
#endif

#ifdef __PARTFIINC__
/*-- Author :    O. Pisanti Uni Naples           28/04/2003 */
      COMMON /CRPARTFI/JSTCKFI
      INTEGER          JSTCKFI(10000,2)
#undef __PARTFIINC__
#endif

     /* NEXUSLINK */
#ifdef __NEXLININC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        10/09/1998 */
      COMMON /CRNEXLIN/ IDTABL
      INTEGER           IDTABL(200)
#undef __NEXLININC__
#endif

#ifdef __NEXPARINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        10/09/1998 */
      COMMON /CRNEXPAR/NEXPRM,NNPARM,IRAND
      INTEGER          NEXPRM,NNPARM,IRAND(3)
#undef __NEXPARINC__
#endif

#ifdef __NEXSSGMINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        10/09/1998 */
      COMMON /CRNEXSGM/XFRACN,XFRANO,SIGNAIR,SIGNHN
      DOUBLE PRECISION XFRACN(12,3),XFRANO(12,3),SIGNAIR(12,3),
     *                 SIGNHN(12,3)
#undef __NEXSSGMINC__
#endif

#ifdef __NEXUSINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        10/09/1998 */
      COMMON /CRNEXUS/ ISH0N,IVERNX,NEXVER,FNEXUS,FNEXSG
      INTEGER          ISH0N,IVERNX,NEXVER
      LOGICAL          FNEXUS,FNEXSG
#undef __NEXUSINC__
#endif

     /* QGSJETLINK */
#ifdef __QGSCINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        12/01/1996 */
      COMMON /CRQGSC/  LEVLDQ,IQGSVER,FQGS,FQGSSG
      INTEGER          LEVLDQ,IQGSVER
      LOGICAL          FQGS,FQGSSG
#undef __QGSCINC__
#endif

#ifdef __QGSDEBINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        12/12/2000 */
      COMMON /CRQGSDEB/E000,IRAND,ICPP,IAPP,IATT
      DOUBLE PRECISION E000
      INTEGER          IRAND(3),ICPP,IAPP,IATT
#undef __QGSDEBINC__
#endif

#ifdef __QGSLININC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        12/01/1996 */
      COMMON /CRQGSLIN/ICTABL,IQTABL
      INTEGER          ICTABL(200),IQTABL(-10:10)
#undef __QGSLININC__
#endif

#ifdef __QGSSGMINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        13/09/1996 */
      COMMON /CRQGSSGM/QFRACN,QFRANO,SIGQAIR,SIGQHN
      DOUBLE PRECISION QFRACN(10,3),QFRANO(10,3),
     *                 SIGQAIR(10,3),SIGQHN(10)
#undef __QGSSGMINC__
#endif

     /* SIBYLLLINK */
#ifdef __SIBDBGINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        06/12/1995 */
      COMMON /CRSIBDBG/ISIBDB,ISDEBUG
      INTEGER          ISIBDB,ISDEBUG
#undef __SIBDBGINC__
#endif

#ifdef __SIBLININC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        06/12/1995 */
      COMMON /CRSIBLIN/ICTABL,ISTABL
      INTEGER          ICTABL(200),ISTABL(-99:99)
#undef __SIBLININC__
#endif

#ifdef __SIBYLCINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        06/12/1995 */
      COMMON /CRSIBYLC/FSIBYL,FSIBSG,FSIBCH
      LOGICAL          FSIBYL,FSIBSG,FSIBCH
#undef __SIBYLCINC__
#endif

     /* VENUSLINK */
#ifdef __VENLININC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        21/11/1996 */
      COMMON /CRVENLIN/PTQ1,PTQ2,PTQ3,QMUST1,QMUST2,QMUST3
     *                ,IDTABL(100)
#undef __VENLININC__
#endif

#ifdef __VENPARINC__
/*-- Author :    The CORSIKA development group   27/04/1995 */
      COMMON /CRVENPAR/PARVAL,NPARAM,PARCHA
      REAL             PARVAL(100)
      INTEGER          NPARAM
      CHARACTER*6      PARCHA(100)
#undef __VENPARINC__
#endif

#ifdef __VENSSGINC__
/*-- Author :    D. HECK IK FZK KARLSRUHE        21/11/1996 */
      COMMON /CRVENSSG/FRNVKL,FRNVPIL,FRNVPL,FRNOVKL,FRNOVPIL,FRNOVPL,
     *                 SGVKL,SGVPIL,SGVPL,SVPPL
      DOUBLE PRECISION FRNVKL(11), FRNVPIL(11), FRNVPL(11),
     *                 FRNOVKL(11),FRNOVPIL(11),FRNOVPL(11),
     *                 SGVKL(11),SGVPIL(11),SGVPL(11),SVPPL(11)
#undef __VENSSGINC__
#endif

#ifdef __VENUSINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      COMMON /CRVENUS/ ISH00,IVERVN,MTAR99,FVENUS,FVENSG
      INTEGER          ISH00,IVERVN,MTAR99
      LOGICAL          FVENUS,FVENSG
#undef __VENUSINC__
#endif

     /* INTTEST */
#ifdef __TSTINTINC__
/*-- Author :    The CORSIKA development group   21/04/1994 */
      INTEGER          NCLASS,NOBS,MAXPAR
      PARAMETER        (NCLASS=35,NOBS=27,MAXPAR=200000)
      COMMON /CRTSTINT/
     *   HMA,HENL,HEN,HTH,HST,HCT,HPP,HPL,HPT,HPT2,HPX,HPY,
     *   HXF,HYR,HPR,HXFL,HPHI,HXFCM,HPLTRG,
     *   PTAV,PT2AV,PLAV,XFAV,RAPAV,PRAPAV,CRD,INEL,XFLAV,
     *   HILI,GACM,BECM,ECMI,ECMEFF,
     *   ENSUM,PXSUM,PYSUM,PZSUM,
     *   PLLOR,PTLOR,ELOR,PLLORP,PTLORP,ELORP,
     *   HIT,HSPEC,PARCLA,MCLA,NNI,ITPRO,ITTAR,MCM,NDIF,
     *   INTTAR,IWOUNT,IWOUNP,NTRIG,NOINT,NELAST,
     *   LPI0,LETA,LHYP,LK0S,LSPEC,FLOR
      DOUBLE PRECISION
     *   HMA(MAXPAR),HENL(MAXPAR),HEN(MAXPAR),HTH(MAXPAR),
     *   HST(MAXPAR),HCT(MAXPAR),HPP(MAXPAR),HPL(MAXPAR),
     *   HPT(MAXPAR),HPT2(MAXPAR),HPX(MAXPAR),HPY(MAXPAR),
     *   HXF(MAXPAR),HYR(MAXPAR),HPR(MAXPAR),HXFL(MAXPAR),
     *   HXFCM(MAXPAR),HPHI(MAXPAR),HPLTRG(MAXPAR)
      DOUBLE PRECISION
     *   PTAV(NCLASS),PT2AV(NCLASS),PLAV(NCLASS),
     *   XFAV(NCLASS),RAPAV(NCLASS),PRAPAV(NCLASS),
     *   CRD(NCLASS),INEL(NCLASS),XFLAV(NCLASS),
     *   HILI(NOBS),GACM,BECM,ECMI,ECMEFF,
     *   ENSUM,PXSUM,PYSUM,PZSUM
      DOUBLE PRECISION
     *   PLLOR,PTLOR,ELOR,PLLORP,PTLORP,ELORP
      INTEGER
     *   HIT(MAXPAR),HSPEC(MAXPAR),PARCLA(5,195),MCLA(NCLASS),
     *   NNI,ITPRO,ITTAR,MCM,NDIF,INTTAR,IWOUNT,IWOUNP,NTRIG,
     *   NOINT,NELAST
      LOGICAL
     *   LPI0,LETA,LHYP,LK0S,LSPEC,FLOR
#undef __TSTINTINC__
#endif
