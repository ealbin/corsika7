To install CORSIKA, please use : ./coconut (without argument) and follow instructions.

The CORSIKA 7.7000 set consists of several files:

* a file README giving these short instructions how to proceed,

* an executable shell script "./coconut" to be used to install CORSIKA,

* a file AUTHORS giving the names of authors,

* a file ChangeLog giving CORSIKA history,

* a file COPYING giving copyright instructions,

* a file INSTALL giving instructions how to use "./coconut" to install 
  CORSIKA,

* a file NEWS giving latest news about CORSIKA,

* a file cDO_NOT_RUN_CONFIGURE to remind NOT to use ./configure but 
  ./coconut (without argument) instead,

* files Makefile.am, Makefile.in, acinclude.m4, aclocal.m4, configure.ac, 
  configure, and subdirectory config/ needed for installation. These files 
  and directories should not be changed unless you know exactly what you 
  are doing.  All subdirectories have a Makefile.am and a Makefile.in 
  needed by ./configure to create proper Makefiles.

* a subdirectory baack/ in which new modules for CORSIKA management are 
  available.

* a subdirectory bernlohr/ containing bernlohr package for Imaging
  Atmospheric Cherenkov Telescopes and extended atmospheres 
  (bernlohr-1.59.tar.gz is automatically extracted if needed).

* a subdirectory coast/ in which the COAST package is included.
  The COAST package consists of C++-routines which are the basis
  for the INCLINED, COREAS, COASTUSERLIB, and ROOTOUT options.
  It includes some useful CORSIKA file reader in CorsikaOptions/CorsikaRead

* a subdirectory conex/ containing the files which 
  might be used in combination with the CONEX option (conex-6.4000.tar.gz is 
  automatically extracted if needed),

* a subdirectory dpmjet/ containing the source package of the 
  DPMJETIII model,

* a subdirectory doc/ containing:
	* a .pdf file containing the physics description (FZKA 6019)
          CORSIKA_PHYSICS.pdf,
	* a .pdf file CORSIKA_GUIDE77000.pdf giving a description, how 
          to install and run CORSIKA,
	* a file references.tex which gives the actual references to
          CORSIKA and the hadronic interaction models in LaTeX format
          (to be used in your publications),
        * a file MPI-Runner_GUIDE.pdf which gives short instructions to
          run CORSIKA on a multi-core system using MPI (The file
          MPI-Runner_GUIDE.doc contains it in .doc format.),
        * a file MPI-Runner_PHYSICS.pdf describing the
          functionality of the PARALLEL option,
        * a file coreas-manual.pdf describing the
          functionality of the COREAS option,

* a subdirectory epos/ containing the source package for the EPOS model
  (epos-lhc-v3400_cors.tar.gz is automatically extracted if needed.),

* a subdirectory herwig/ with HERWIG 6521,

* a subdirectory include/ containing the config.h.in file which is needed 
  by configure to do config.h. The file config.h contains all the 
  preprocessor commands needed by CORSIKA.

* a subdirectory lib/ is created when compiling CORSIKA. It contains all
  Makefiles, object files and libraries.

* a subdirectory nexus/ containing the source package of the 
  NEXUS model,

* a subdirectory pythia/ containing the modified and extended PYTHIA 
  package,

* a subdirectory run/ to be used to run CORSIKA containing:
        * 14 data sets containing the energy dependent cross sections for 
          nucleon-nucleus processes (NUCNUCCS), electromagnetic inter-
          actions (6 sets EGSDAT6_x.x), for QGSJET01 (QGSDAT01 and SECTNU),
	  for QGSJET-II (sectnu-II-04 and qgsdat-II-04),
          numerical data to be used by the VENUS routines (VENUSDAT),
	  cross section data for UrQMD (UrQMD-<ver>-xs.dat), 
          and for the DPMJET routines the Glauber tables (GLAUBTAR.DAT) 
          and the nuclear data (NUCLEAR.BIN).  [The NUCLEAR.BIN file 
          may be used only with those computers (DEC-UNIX, LINUX) 
          applying  the IEEE standard for direct access read and write. 
          For other computers (DEC-VAX, HP) a different NUCLEAR.BIN 
          file is necessary which is available from CERN or from the 
          author of DPMJET <johannes.ranft@cern.ch>.],
	* 8 input examples (all-inputs*, conex-3D-inputs, and parallel-inputs) 
          to steer the simulation with any model (with/out THIN, with STACKIN,
          with EPOS, with NEXUS, with CONEX, or with PARALLEL),
	* 3 data sets atmabs.dat, mirreff.dat, and quanteff.dat to take 
      	  into account the atmospheric absorption, mirror refletivity,
      	  and quantum efficiency of Cherenkov radiation,
	* the executable binary files of CORSIKA and utility programs 
          after compilation.

* a subdirectory src/ containing:
	* the major part of the source code (corsika.F and corsika.h) which 
          is a Fortran code file with some C preprocessor commands, that 
          contains the code of CORSIKA including the EGS4 and HDPM model 
          routines. It contains also the interfaces to FLUKA, GHEISHA, UrQMD, 
          DPMJET, EPOS, neXus, QGSJET, SIBYLL, and VENUS, but without those 
          hadronic interaction codes,
	* 5 separate files with the pure Fortran code of the GHEISHA, 
          QGSJET01D, QGSJET-II, SIBYLL2.3c, and VENUS routines, respectively
          (gheisha_2002d.f, qgsjet01d.f, qgsjet-II-04.f, sibyll2.3c.f, and 
          venus.f),
	* a separate file with the pure C-code of the EFIELD option 
          (elfield.c),
	* 3 special C-routines for compilation (timerc.c, tobuf.c, and 
          trapfpe.c), 
        * a subsubdirectory parallel/ containing the shell scripts and
          programs to run CORSIKA distributed on many CPUs in parallel.
          This directory also houses the userguide-pll-*.txt files
          which describe the parallel handling of CORSIKA on various
          CPU-clusters using these shell scripts, and some Fortran programs
          to handle the results of a parallel simulation.
        * a subsubdirectory preshower2.0-rev/ containing the C-programs for
          production of gamma-induced preshowers before reaching the top
          of atmosphere (preshw.c, utils.c, utils.h, veto.c, and veto.h),
        * a subsubdirectory utils/ containing utility programs and a README :
            * a "coast/" subdirectory containing COAST based utilities
              BEST CHOICE FOR BEGINNERS (ROOT or ASCII interface, file merger) 
            * a C++ routine to read the binary particle output file
              (corsikaread.cpp),
            * a Fortran routine cors2input.f to reestablish the used
              input from the binary particle output file,
	    * 3 Fortran routines to read the binary particle output files
              (corsikaread.f, corsikaread_history.f, and corsikaread_thin.f) 
            * a Fortran routine corsplitevts.f to split a large particle
              output file into several files containing single events each,
            * a C-routine map2png.c to visualize shower plots established 
              with the option PLOTSH2.
            * a Fortran routine modelprint.f which displays the used 
              high-energy and low-energy models from the binary particle
              output file,
            * a Fortran routine (plottracks3c.f) and its include file 
              (work.inc) to visualize shower plots established with the 
              option PLOTSH.
            * a Fortran routine readcsk2asci.f converting a binary
              particle output file into a (readable) ASCII file,
            * a Fortran routine readtimes.f to sum up the CPU times of 
              several .lst files (useful at parallel runs),
            * 2 Fortran routines showsimprods.f and showsimulist.f to 
              establish a tabular of several simulations giving 
              characteristic values of each simulation 
              (primary-id, energy, angles of incidence, ... ) 
              from the binary particle output files,
            * a Fortran routine sumlistnkginfo.f to sum up the NKG-output 
              of .lst files to get XMAX averaged over the used showers,
            * a Fortran routine sumlongifiles.f to sum up the content of 
              several .longi files (also in case of parallel simulations),
            * a Python program "gdastool" to create some atmospheric
              profile readable by CORSIKA from GDAS database,
            * several other shell scripts and data handling programs to
              treat the CORSIKA output files.
   
* a subdirectory urqmd/ containing source package of the URQMD model
  (urqmd1.3_cors.tar.gz is automatically extracted if needed.).


Be aware, that many files have been modified since version CORSIKA 7.5700. 
Use the more recent files with CORSIKA 7.7000.

The CORSIKA code and the files belonging to it can be obtained from 
KARLSRUHE INSTITUTE OF TECHNOLOGY, CAMPUS NORTH. 
You may take the CORSIKA77000 version including all files belonging
to it from our server  https://web.ikp.kit.edu/corsika/download/ . 
The access to this server is protected by password.  
To access this server you use an internet browser going to the URL:
     https://web.ikp.kit.edu/corsika/download/
giving username : corsika
and as password : (which you get by e-mail)
and change to the appropriate subdirectory by clicking on:
     corsika-v770
Finally you click on:
      corsika-77000.tar.gz
to get the most most recent version of corsika-77000.

Before using .gz files, you first have to decompress the files 
applying the gunzip procedure.

In case of problems with the data transfer or with the CORSIKA 
version 7.7xxx, please contact T. Pierog <tanguy.pierog@kit.edu> or 
D. Heck <dieter.heck@partner.kit.edu>.

The description of the physics used in the CORSIKA code (D. Heck et 
al., Report FZKA 6019 (1998) is available from the web page:
    https://www.ikp.kit.edu/corsika/70.php
In your publications you might use this report as reference to CORSIKA.



03.09.2019 by T. Pierog and D.Heck, KIT, IKP, Karlsruhe 
